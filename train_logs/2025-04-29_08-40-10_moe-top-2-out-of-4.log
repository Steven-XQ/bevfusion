2025-04-29 08:40:22,418 - mmdet3d - INFO - Config:
seed = 0
deterministic = False
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
load_from = None
resume_from = None
cudnn_benchmark = False
fp16 = dict(loss_scale=dict(growth_interval=2000))
max_epochs = 6
runner = dict(type='CustomEpochBasedRunner', max_epochs=6)
dataset_type = 'NuScenesDataset'
dataset_root = 'data/nuscenes/'
gt_paste_stop_epoch = -1
reduce_beams = 32
load_dim = 5
use_dim = 5
load_augmented = None
point_cloud_range = [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]
voxel_size = [0.075, 0.075, 0.2]
image_size = [256, 704]
augment2d = dict(
    resize=[[0.38, 0.55], [0.48, 0.48]],
    rotate=[-5.4, 5.4],
    gridmask=dict(prob=0.0, fixed_prob=True))
augment3d = dict(
    scale=[0.9, 1.1], rotate=[-0.78539816, 0.78539816], translate=0.5)
object_classes = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
map_classes = [
    'drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area',
    'divider'
]
input_modality = dict(
    use_lidar=True,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=False)
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=0,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadRadarPointsMultiSweeps',
        load_dim=18,
        sweeps_num=6,
        use_dim=[
            0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
            47, 48, 49, 50, 51, 52, 53, 54, 55, 56
        ],
        max_num=2500,
        compensate_velocity=True,
        filtering='none',
        normalize=False),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ObjectPaste',
        stop_epoch=-1,
        db_sampler=dict(
            dataset_root='data/nuscenes/',
            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(
                    car=5,
                    truck=5,
                    bus=5,
                    trailer=5,
                    construction_vehicle=5,
                    traffic_cone=5,
                    barrier=5,
                    motorcycle=5,
                    bicycle=5,
                    pedestrian=5)),
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            sample_groups=dict(
                car=2,
                truck=3,
                construction_vehicle=7,
                bus=4,
                trailer=6,
                barrier=2,
                motorcycle=6,
                bicycle=6,
                pedestrian=2,
                traffic_cone=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32))),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.38, 0.55],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[-5.4, 5.4],
        rand_flip=True,
        is_train=True),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[0.9, 1.1],
        rot_lim=[-0.78539816, 0.78539816],
        trans_lim=0.5,
        is_train=True),
    dict(type='RandomFlip3D'),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='GridMask',
        use_h=True,
        use_w=True,
        max_epoch=6,
        rotate=1,
        offset=False,
        ratio=0.5,
        mode=1,
        prob=0.0,
        fixed_prob=True),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadRadarPointsMultiSweeps',
        load_dim=18,
        sweeps_num=6,
        use_dim=[
            0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
            47, 48, 49, 50, 51, 52, 53, 54, 55, 56
        ],
        max_num=2500,
        compensate_velocity=True,
        filtering='none',
        normalize=False),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.48, 0.48],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[0.0, 0.0],
        rand_flip=False,
        is_train=False),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[1.0, 1.0],
        rot_lim=[0.0, 0.0],
        trans_lim=0.0,
        is_train=False),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='DefaultFormatBundle3D',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=4,
    train=dict(
        type='CBGSDataset',
        dataset=dict(
            type='NuScenesDataset',
            dataset_root='data/nuscenes/',
            ann_file='data/nuscenes/nuscenes_infos_train.pkl',
            pipeline=[
                dict(type='LoadMultiViewImageFromFiles', to_float32=True),
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    load_augmented=None),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=0,
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    pad_empty_sweeps=True,
                    remove_close=True,
                    load_augmented=None),
                dict(
                    type='LoadRadarPointsMultiSweeps',
                    load_dim=18,
                    sweeps_num=6,
                    use_dim=[
                        0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                        55, 56
                    ],
                    max_num=2500,
                    compensate_velocity=True,
                    filtering='none',
                    normalize=False),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True,
                    with_attr_label=False),
                dict(
                    type='ObjectPaste',
                    stop_epoch=-1,
                    db_sampler=dict(
                        dataset_root='data/nuscenes/',
                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                car=5,
                                truck=5,
                                bus=5,
                                trailer=5,
                                construction_vehicle=5,
                                traffic_cone=5,
                                barrier=5,
                                motorcycle=5,
                                bicycle=5,
                                pedestrian=5)),
                        classes=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        sample_groups=dict(
                            car=2,
                            truck=3,
                            construction_vehicle=7,
                            bus=4,
                            trailer=6,
                            barrier=2,
                            motorcycle=6,
                            bicycle=6,
                            pedestrian=2,
                            traffic_cone=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=5,
                            reduce_beams=32))),
                dict(
                    type='ImageAug3D',
                    final_dim=[256, 704],
                    resize_lim=[0.38, 0.55],
                    bot_pct_lim=[0.0, 0.0],
                    rot_lim=[-5.4, 5.4],
                    rand_flip=True,
                    is_train=True),
                dict(
                    type='GlobalRotScaleTrans',
                    resize_lim=[0.9, 1.1],
                    rot_lim=[-0.78539816, 0.78539816],
                    trans_lim=0.5,
                    is_train=True),
                dict(type='RandomFlip3D'),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectNameFilter',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='ImageNormalize',
                    mean=[0.485, 0.456, 0.406],
                    std=[0.229, 0.224, 0.225]),
                dict(
                    type='GridMask',
                    use_h=True,
                    use_w=True,
                    max_epoch=6,
                    rotate=1,
                    offset=False,
                    ratio=0.5,
                    mode=1,
                    prob=0.0,
                    fixed_prob=True),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='Collect3D',
                    keys=[
                        'img', 'points', 'radar', 'gt_bboxes_3d',
                        'gt_labels_3d'
                    ],
                    meta_keys=[
                        'camera_intrinsics', 'camera2ego', 'lidar2ego',
                        'lidar2camera', 'lidar2image', 'camera2lidar',
                        'img_aug_matrix', 'lidar_aug_matrix'
                    ]),
                dict(type='GTDepth', keyframe_only=True)
            ],
            object_classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            map_classes=[
                'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
                'carpark_area', 'divider'
            ],
            modality=dict(
                use_lidar=True,
                use_camera=True,
                use_radar=False,
                use_map=False,
                use_external=False),
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        dataset_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadRadarPointsMultiSweeps',
                load_dim=18,
                sweeps_num=6,
                use_dim=[
                    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
                ],
                max_num=2500,
                compensate_velocity=True,
                filtering='none',
                normalize=False),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='DefaultFormatBundle3D',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area', 'divider'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        dataset_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadRadarPointsMultiSweeps',
                load_dim=18,
                sweeps_num=6,
                use_dim=[
                    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
                ],
                max_num=2500,
                compensate_velocity=True,
                filtering='none',
                normalize=False),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='DefaultFormatBundle3D',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area', 'divider'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            load_augmented=None),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=9,
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            pad_empty_sweeps=True,
            remove_close=True,
            load_augmented=None),
        dict(
            type='LoadRadarPointsMultiSweeps',
            load_dim=18,
            sweeps_num=6,
            use_dim=[
                0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
                29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
                45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
            ],
            max_num=2500,
            compensate_velocity=True,
            filtering='none',
            normalize=False),
        dict(
            type='LoadAnnotations3D',
            with_bbox_3d=True,
            with_label_3d=True,
            with_attr_label=False),
        dict(
            type='ImageAug3D',
            final_dim=[256, 704],
            resize_lim=[0.48, 0.48],
            bot_pct_lim=[0.0, 0.0],
            rot_lim=[0.0, 0.0],
            rand_flip=False,
            is_train=False),
        dict(
            type='GlobalRotScaleTrans',
            resize_lim=[1.0, 1.0],
            rot_lim=[0.0, 0.0],
            trans_lim=0.0,
            is_train=False),
        dict(
            type='PointsRangeFilter',
            point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
        dict(
            type='ImageNormalize',
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]),
        dict(
            type='DefaultFormatBundle3D',
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ]),
        dict(
            type='Collect3D',
            keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
            meta_keys=[
                'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
                'lidar2image', 'camera2lidar', 'img_aug_matrix',
                'lidar_aug_matrix'
            ]),
        dict(type='GTDepth', keyframe_only=True)
    ])
radar_sweeps = 6
radar_max_points = 2500
radar_use_dims = [
    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
    51, 52, 53, 54, 55, 56
]
radar_compensate_velocity = True
radar_filtering = 'none'
radar_voxel_size = [0.8, 0.8, 8]
radar_jitter = 0
radar_normalize = False
model = dict(
    type='BEVFusion',
    encoders=dict(
        camera=dict(
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='DepthLSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-54.0, 54.0, 0.3],
                ybound=[-54.0, 54.0, 0.3],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2),
            backbone=dict(
                type='MoENetwork',
                num_experts=4,
                in_channels=3,
                experts_cfg=[
                    dict(
                        type='SwinTransformer',
                        embed_dims=96,
                        depths=[2, 2, 6, 2],
                        num_heads=[3, 6, 12, 24],
                        window_size=7,
                        mlp_ratio=4,
                        qkv_bias=True,
                        qk_scale=None,
                        drop_rate=0.0,
                        attn_drop_rate=0.0,
                        drop_path_rate=0.2,
                        patch_norm=True,
                        out_indices=[1, 2, 3],
                        with_cp=False,
                        convert_weights=True,
                        init_cfg=dict(
                            type='Pretrained',
                            checkpoint=
                            'pretrained/swint-nuimages-pretrained.pth')),
                    dict(
                        type='ResNet',
                        depth=50,
                        num_stages=4,
                        out_indices=[1, 2, 3],
                        norm_cfg=dict(type='BN2d', requires_grad=True),
                        norm_eval=False,
                        init_cfg=dict(
                            type='Pretrained',
                            checkpoint='torchvision://resnet50')),
                    dict(
                        type='ResNet',
                        depth=101,
                        num_stages=4,
                        out_indices=[1, 2, 3],
                        norm_cfg=dict(type='BN2d', requires_grad=True),
                        norm_eval=False,
                        init_cfg=dict(
                            type='Pretrained',
                            checkpoint='torchvision://resnet101')),
                    dict(
                        type='PyramidVisionTransformer',
                        pretrain_img_size=[256, 704],
                        embed_dims=64,
                        num_stages=4,
                        drop_path_rate=0.1,
                        out_indices=[1, 2, 3],
                        sr_ratios=[4, 2, 1, 1],
                        convert_weights=True,
                        norm_cfg=dict(type='LN'),
                        init_cfg=dict(
                            type='Pretrained',
                            checkpoint='pretrained/pvt_v2_b5.pth'))
                ],
                router=dict(in_channels=3, num_experts=4))),
        lidar=dict(
            voxelize=dict(
                max_num_points=10,
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                voxel_size=[0.075, 0.075, 0.2],
                max_voxels=[120000, 160000]),
            backbone=dict(
                type='SparseEncoder',
                in_channels=5,
                sparse_shape=[1440, 1440, 41],
                output_channels=128,
                order=['conv', 'norm', 'act'],
                encoder_channels=[[16, 16, 32], [32, 32, 64], [64, 64, 128],
                                  [128, 128]],
                encoder_paddings=[[0, 0, 1], [0, 0, 1], [0, 0, [1, 1, 0]],
                                  [0, 0]],
                block_type='basicblock'))),
    fuser=dict(type='ConvFuser', in_channels=[80, 256], out_channels=256),
    heads=dict(
        map=None,
        object=dict(
            type='TransFusionHead',
            num_proposals=200,
            auxiliary=True,
            in_channels=512,
            hidden_channel=128,
            num_classes=10,
            num_decoder_layers=1,
            num_heads=8,
            nms_kernel_size=3,
            ffn_channel=256,
            dropout=0.1,
            bn_momentum=0.1,
            activation='relu',
            train_cfg=dict(
                dataset='nuScenes',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                grid_size=[1440, 1440, 41],
                voxel_size=[0.075, 0.075, 0.2],
                out_size_factor=8,
                gaussian_overlap=0.1,
                min_radius=2,
                pos_weight=-1,
                code_weights=[
                    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2
                ],
                assigner=dict(
                    type='HungarianAssigner3D',
                    iou_calculator=dict(
                        type='BboxOverlaps3D', coordinate='lidar'),
                    cls_cost=dict(
                        type='FocalLossCost',
                        gamma=2.0,
                        alpha=0.25,
                        weight=0.15),
                    reg_cost=dict(type='BBoxBEVL1Cost', weight=0.25),
                    iou_cost=dict(type='IoU3DCost', weight=0.25))),
            test_cfg=dict(
                dataset='nuScenes',
                grid_size=[1440, 1440, 41],
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                pc_range=[-54.0, -54.0],
                nms_type=None),
            common_heads=dict(
                center=[2, 2],
                height=[1, 2],
                dim=[3, 2],
                rot=[2, 2],
                vel=[2, 2]),
            bbox_coder=dict(
                type='TransFusionBBoxCoder',
                pc_range=[-54.0, -54.0],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                score_threshold=0.0,
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                code_size=10),
            loss_cls=dict(
                type='FocalLoss',
                use_sigmoid=True,
                gamma=2.0,
                alpha=0.25,
                reduction='mean',
                loss_weight=1.0),
            loss_heatmap=dict(
                type='GaussianFocalLoss', reduction='mean', loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', reduction='mean',
                           loss_weight=0.25))),
    decoder=dict(
        backbone=dict(
            type='SECOND',
            in_channels=256,
            out_channels=[128, 256],
            layer_nums=[5, 5],
            layer_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            conv_cfg=dict(type='Conv2d', bias=False)),
        neck=dict(
            type='SECONDFPN',
            in_channels=[128, 256],
            out_channels=[256, 256],
            upsample_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            upsample_cfg=dict(type='deconv', bias=False),
            use_conv_for_no_stride=True)))
optimizer = dict(type='AdamW', lr=0.0002, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.33333333,
    min_lr_ratio=0.001)
momentum_config = dict(policy='cyclic')
find_unused_parameters = True
run_dir = 'train_result/moe_4_experts_top_2'

2025-04-29 08:40:22,419 - mmdet3d - INFO - Set random seed to 0, deterministic mode: False
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 3068 pedestrian database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 4082 car database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 773 traffic_cone database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 147 bicycle database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 1851 barrier database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 451 truck database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 337 bus database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 174 construction_vehicle database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 57 movable_object.pushable_pullable database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 179 motorcycle database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 13 movable_object.debris database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 59 trailer database infos
2025-04-29 08:40:22,916 - mmdet3d - INFO - load 25 human.pedestrian.personal_mobility database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - After filter database:
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 2395 pedestrian database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 2287 car database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 381 traffic_cone database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 108 bicycle database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 1442 barrier database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 381 truck database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 275 bus database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 155 construction_vehicle database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 57 movable_object.pushable_pullable database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 124 motorcycle database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 13 movable_object.debris database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 57 trailer database infos
2025-04-29 08:40:22,936 - mmdet3d - INFO - load 25 human.pedestrian.personal_mobility database infos
/opt/conda/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1639180588308/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/opt/conda/lib/python3.8/site-packages/mmcv/runner/base_module.py:127: UserWarning: init_weights of MoENetwork has been called more than once.
  warnings.warn(f'init_weights of {self.__class__.__name__} has '
2025-04-29 08:40:24,256 - mmdet3d - INFO - Model:
BEVFusion(
  (encoders): ModuleDict(
    (camera): ModuleDict(
      (backbone): MoENetwork(
        (moe): MoE(
          (experts): ModuleList(
            (0): SwinTransformer(
              (patch_embed): PatchEmbed(
                (adap_padding): AdaptivePadding()
                (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
                (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
              )
              (drop_after_pos): Dropout(p=0.0, inplace=False)
              (stages): ModuleList(
                (0): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=96, out_features=288, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=96, out_features=96, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=96, out_features=384, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=384, out_features=96, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=96, out_features=288, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=96, out_features=96, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=96, out_features=384, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=384, out_features=96, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (downsample): PatchMerging(
                    (adap_padding): AdaptivePadding()
                    (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
                    (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                    (reduction): Linear(in_features=384, out_features=192, bias=False)
                  )
                )
                (1): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=192, out_features=576, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=192, out_features=192, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=192, out_features=768, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=768, out_features=192, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=192, out_features=576, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=192, out_features=192, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=192, out_features=768, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=768, out_features=192, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (downsample): PatchMerging(
                    (adap_padding): AdaptivePadding()
                    (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
                    (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                    (reduction): Linear(in_features=768, out_features=384, bias=False)
                  )
                )
                (2): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (2): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (3): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (4): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (5): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (downsample): PatchMerging(
                    (adap_padding): AdaptivePadding()
                    (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
                    (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
                    (reduction): Linear(in_features=1536, out_features=768, bias=False)
                  )
                )
                (3): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=768, out_features=2304, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=768, out_features=768, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=768, out_features=3072, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=3072, out_features=768, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=768, out_features=2304, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=768, out_features=768, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=768, out_features=3072, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=3072, out_features=768, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                )
              )
              (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            )
            init_cfg={'type': 'Pretrained', 'checkpoint': 'pretrained/swint-nuimages-pretrained.pth'}
            (1): ResNet(
              (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
              (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
              (layer1): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer2): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer3): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (4): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (5): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer4): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
            )
            init_cfg={'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
            (2): ResNet(
              (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
              (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
              (layer1): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer2): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer3): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (4): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (5): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (6): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (7): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (8): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (9): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (10): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (11): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (12): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (13): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (14): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (15): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (16): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (17): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (18): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (19): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (20): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (21): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (22): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer4): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
            )
            init_cfg={'type': 'Pretrained', 'checkpoint': 'torchvision://resnet101'}
            (3): PyramidVisionTransformer(
              (layers): ModuleList(
                (0): ModuleList(
                  (0): PatchEmbed(
                    (projection): Conv2d(3, 64, kernel_size=(4, 4), stride=(4, 4))
                    (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleList(
                    (0): AbsolutePositionEmbedding(
                      (drop): Dropout(p=0.0, inplace=False)
                    )
                    (1): PVTEncoderLayer(
                      (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(64, 64, kernel_size=(4, 4), stride=(4, 4))
                        (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (2): PVTEncoderLayer(
                      (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(64, 64, kernel_size=(4, 4), stride=(4, 4))
                        (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (3): PVTEncoderLayer(
                      (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(64, 64, kernel_size=(4, 4), stride=(4, 4))
                        (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (2): Identity()
                )
                (1): ModuleList(
                  (0): PatchEmbed(
                    (projection): Conv2d(64, 128, kernel_size=(2, 2), stride=(2, 2))
                    (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleList(
                    (0): AbsolutePositionEmbedding(
                      (drop): Dropout(p=0.0, inplace=False)
                    )
                    (1): PVTEncoderLayer(
                      (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(128, 128, kernel_size=(2, 2), stride=(2, 2))
                        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (2): PVTEncoderLayer(
                      (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(128, 128, kernel_size=(2, 2), stride=(2, 2))
                        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (3): PVTEncoderLayer(
                      (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(128, 128, kernel_size=(2, 2), stride=(2, 2))
                        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (4): PVTEncoderLayer(
                      (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                        (sr): Conv2d(128, 128, kernel_size=(2, 2), stride=(2, 2))
                        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      )
                      (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (2): Identity()
                )
                (2): ModuleList(
                  (0): PatchEmbed(
                    (projection): Conv2d(128, 320, kernel_size=(2, 2), stride=(2, 2))
                    (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleList(
                    (0): AbsolutePositionEmbedding(
                      (drop): Dropout(p=0.0, inplace=False)
                    )
                    (1): PVTEncoderLayer(
                      (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=320, out_features=320, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (2): PVTEncoderLayer(
                      (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=320, out_features=320, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (3): PVTEncoderLayer(
                      (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=320, out_features=320, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (4): PVTEncoderLayer(
                      (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=320, out_features=320, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (5): PVTEncoderLayer(
                      (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=320, out_features=320, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (6): PVTEncoderLayer(
                      (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=320, out_features=320, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (2): Identity()
                )
                (3): ModuleList(
                  (0): PatchEmbed(
                    (projection): Conv2d(320, 512, kernel_size=(2, 2), stride=(2, 2))
                    (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleList(
                    (0): AbsolutePositionEmbedding(
                      (drop): Dropout(p=0.0, inplace=False)
                    )
                    (1): PVTEncoderLayer(
                      (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (2): PVTEncoderLayer(
                      (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (3): PVTEncoderLayer(
                      (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                      (attn): SpatialReductionAttention(
                        (attn): MultiheadAttention(
                          (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                        )
                        (proj_drop): Dropout(p=0.0, inplace=False)
                        (dropout_layer): DropPath()
                      )
                      (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                      (ffn): MixFFN(
                        (layers): Sequential(
                          (0): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1))
                          (1): GELU()
                          (2): Dropout(p=0.0, inplace=False)
                          (3): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
                          (4): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (2): Identity()
                )
              )
            )
            init_cfg={'type': 'Pretrained', 'checkpoint': 'pretrained/pvt_v2_b5.pth'}
          )
          (router): MLPRouter(
            (conv): Conv2d(3, 512, kernel_size=(3, 3), stride=(1, 1))
            (pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Linear(in_features=512, out_features=4, bias=True)
          )
          (conv_resnet_1): Conv2d(512, 192, kernel_size=(1, 1), stride=(1, 1))
          (conv_resnet_2): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
          (conv_resnet_3): Conv2d(2048, 768, kernel_size=(1, 1), stride=(1, 1))
          (conv_pvt_1): Conv2d(128, 192, kernel_size=(1, 1), stride=(1, 1))
          (conv_pvt_2): Conv2d(320, 384, kernel_size=(1, 1), stride=(1, 1))
          (conv_pvt_3): Conv2d(512, 768, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): DepthLSSTransform(
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
    (lidar): ModuleDict(
      (voxelize): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
      (backbone): SparseEncoder(
        (conv_input): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (encoder_layers): SparseSequential(
          (encoder_layer1): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer2): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer3): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer4): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv_out): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
  )
  (fuser): ConvFuser(
    (0): Conv2d(336, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (decoder): ModuleDict(
    (backbone): SECOND(
      (blocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
    (neck): SECONDFPN(
      (deblocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    init_cfg=[{'type': 'Kaiming', 'layer': 'ConvTranspose2d'}, {'type': 'Constant', 'layer': 'NaiveSyncBatchNorm2d', 'val': 1.0}]
  )
  (heads): ModuleDict(
    (object): TransFusionHead(
      (loss_cls): FocalLoss()
      (loss_bbox): L1Loss()
      (loss_iou): VarifocalLoss()
      (loss_heatmap): GaussianFocalLoss()
      (shared_conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (heatmap_head): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): Conv2d(128, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (class_encoding): Conv1d(10, 128, kernel_size=(1,), stride=(1,))
      (decoder): ModuleList(
        (0): TransformerDecoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (multihead_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=256, bias=True)
          (dropout): Dropout(p=0.1, inplace=False)
          (linear2): Linear(in_features=256, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.1, inplace=False)
          (dropout2): Dropout(p=0.1, inplace=False)
          (dropout3): Dropout(p=0.1, inplace=False)
          (self_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
          (cross_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
        )
      )
      (prediction_heads): ModuleList(
        (0): FFN(
          (center): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 10, kernel_size=(1,), stride=(1,))
          )
        )
      )
    )
  )
)
2025-04-29 08:40:31,031 - mmdet3d - INFO - Start running, host: root@1cf78a6d245c, work_dir: /bevfusion/train_result/moe_4_experts_top_2
2025-04-29 08:40:31,031 - mmdet3d - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-04-29 08:40:31,031 - mmdet3d - INFO - workflow: [('train', 1)], max: 6 epochs
2025-04-29 08:40:31,037 - mmdet3d - INFO - Checkpoints will be saved to /bevfusion/train_result/moe_4_experts_top_2 by HardDiskBackend.
/opt/conda/lib/python3.8/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
[W reducer.cpp:1303] Warning: find_unused_parameters=True was specified in DDP constructor, but did not find any unused parameters in the forward pass. This flag results in an extra traversal of the autograd graph every iteration,  which can adversely affect performance. If your model indeed never has any unused parameters in the forward pass, consider turning this flag off. Note that this warning may be a false positive if your model has flow control causing later iterations to have unused parameters. (function operator())
2025-04-29 08:41:17,046 - mmdet3d - INFO - Epoch [1][50/815]	lr: 7.973e-05, eta: 1:13:45, time: 0.914, data_time: 0.075, memory: 10439, loss/object/loss_heatmap: 1153.4172, loss/object/layer_-1_loss_cls: 11.5270, loss/object/layer_-1_loss_bbox: 11.2667, stats/object/matched_ious: 0.0078, loss: 1176.2109, grad_norm: nan
2025-04-29 08:41:57,823 - mmdet3d - INFO - Epoch [1][100/815]	lr: 9.307e-05, eta: 1:09:03, time: 0.816, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 14.0547, loss/object/layer_-1_loss_cls: 9.2661, loss/object/layer_-1_loss_bbox: 9.5522, stats/object/matched_ious: 0.0110, loss: 32.8730, grad_norm: 220.4085
2025-04-29 08:42:37,970 - mmdet3d - INFO - Epoch [1][150/815]	lr: 1.064e-04, eta: 1:06:41, time: 0.803, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 3.0778, loss/object/layer_-1_loss_cls: 5.0250, loss/object/layer_-1_loss_bbox: 6.3176, stats/object/matched_ious: 0.0214, loss: 14.4204, grad_norm: 24.0928
2025-04-29 08:43:15,203 - mmdet3d - INFO - Epoch [1][200/815]	lr: 1.197e-04, eta: 1:04:02, time: 0.745, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 3.0726, loss/object/layer_-1_loss_cls: 4.8503, loss/object/layer_-1_loss_bbox: 4.5407, stats/object/matched_ious: 0.0364, loss: 12.4636, grad_norm: 58.5870
2025-04-29 08:43:53,395 - mmdet3d - INFO - Epoch [1][250/815]	lr: 1.331e-04, eta: 1:02:30, time: 0.764, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.8979, loss/object/layer_-1_loss_cls: 2.5326, loss/object/layer_-1_loss_bbox: 6.4980, stats/object/matched_ious: 0.0337, loss: 11.9285, grad_norm: 18.9535
2025-04-29 08:44:31,666 - mmdet3d - INFO - Epoch [1][300/815]	lr: 1.464e-04, eta: 1:01:17, time: 0.765, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.9380, loss/object/layer_-1_loss_cls: 2.0877, loss/object/layer_-1_loss_bbox: 6.1720, stats/object/matched_ious: 0.0313, loss: 11.1978, grad_norm: 20.2492
2025-04-29 08:45:10,609 - mmdet3d - INFO - Epoch [1][350/815]	lr: 1.597e-04, eta: 1:00:22, time: 0.779, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.8005, loss/object/layer_-1_loss_cls: 1.5067, loss/object/layer_-1_loss_bbox: 5.2932, stats/object/matched_ious: 0.0375, loss: 9.6004, grad_norm: 15.5309
2025-04-29 08:45:46,709 - mmdet3d - INFO - Epoch [1][400/815]	lr: 1.731e-04, eta: 0:59:00, time: 0.722, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.8637, loss/object/layer_-1_loss_cls: 1.2989, loss/object/layer_-1_loss_bbox: 4.9712, stats/object/matched_ious: 0.0402, loss: 9.1338, grad_norm: 24.0487
2025-04-29 08:46:24,752 - mmdet3d - INFO - Epoch [1][450/815]	lr: 1.864e-04, eta: 0:58:06, time: 0.761, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.6560, loss/object/layer_-1_loss_cls: 1.0085, loss/object/layer_-1_loss_bbox: 4.0977, stats/object/matched_ious: 0.0471, loss: 7.7622, grad_norm: 11.6328
2025-04-29 08:47:03,356 - mmdet3d - INFO - Epoch [1][500/815]	lr: 1.997e-04, eta: 0:57:21, time: 0.772, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.6923, loss/object/layer_-1_loss_cls: 0.8328, loss/object/layer_-1_loss_bbox: 3.9367, stats/object/matched_ious: 0.0510, loss: 7.4618, grad_norm: 13.4265
2025-04-29 08:47:40,768 - mmdet3d - INFO - Epoch [1][550/815]	lr: 2.000e-04, eta: 0:56:28, time: 0.748, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.7628, loss/object/layer_-1_loss_cls: 0.8333, loss/object/layer_-1_loss_bbox: 3.6160, stats/object/matched_ious: 0.0554, loss: 7.2121, grad_norm: 18.0364
2025-04-29 08:48:20,365 - mmdet3d - INFO - Epoch [1][600/815]	lr: 2.000e-04, eta: 0:55:53, time: 0.792, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.5896, loss/object/layer_-1_loss_cls: 0.7106, loss/object/layer_-1_loss_bbox: 3.4993, stats/object/matched_ious: 0.0606, loss: 6.7995, grad_norm: 15.9101
2025-04-29 08:48:58,585 - mmdet3d - INFO - Epoch [1][650/815]	lr: 2.000e-04, eta: 0:55:08, time: 0.764, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.5376, loss/object/layer_-1_loss_cls: 0.5991, loss/object/layer_-1_loss_bbox: 3.2161, stats/object/matched_ious: 0.0628, loss: 6.3528, grad_norm: 16.5748
2025-04-29 08:49:37,378 - mmdet3d - INFO - Epoch [1][700/815]	lr: 2.000e-04, eta: 0:54:28, time: 0.776, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.4855, loss/object/layer_-1_loss_cls: 0.5776, loss/object/layer_-1_loss_bbox: 3.1011, stats/object/matched_ious: 0.0610, loss: 6.1642, grad_norm: 11.6571
2025-04-29 08:50:17,561 - mmdet3d - INFO - Epoch [1][750/815]	lr: 2.000e-04, eta: 0:53:55, time: 0.804, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.5647, loss/object/layer_-1_loss_cls: 0.6008, loss/object/layer_-1_loss_bbox: 3.5048, stats/object/matched_ious: 0.0620, loss: 6.6702, grad_norm: 13.6996
2025-04-29 08:50:58,114 - mmdet3d - INFO - Epoch [1][800/815]	lr: 2.000e-04, eta: 0:53:24, time: 0.811, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.5676, loss/object/layer_-1_loss_cls: 0.5557, loss/object/layer_-1_loss_bbox: 2.9261, stats/object/matched_ious: 0.0682, loss: 6.0495, grad_norm: 11.4234
2025-04-29 08:51:10,338 - mmdet3d - INFO - Saving checkpoint at 1 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   268s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   132s/bevfusion/mmdet3d/core/bbox/coders/transfusion_bbox_coder.py:96: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.post_center_range = torch.tensor(
[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    93s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    69s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    58s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    48s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    44s[  ] 8/81, 1.9 task/s, elapsed: 4s, ETA:    38s[  ] 9/81, 1.9 task/s, elapsed: 5s, ETA:    38s[  ] 10/81, 2.1 task/s, elapsed: 5s, ETA:    34s[  ] 11/81, 2.2 task/s, elapsed: 5s, ETA:    32s[  ] 12/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 13/81, 2.4 task/s, elapsed: 5s, ETA:    28s[  ] 14/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 15/81, 2.6 task/s, elapsed: 6s, ETA:    25s[  ] 16/81, 2.8 task/s, elapsed: 6s, ETA:    23s[  ] 17/81, 2.6 task/s, elapsed: 6s, ETA:    24s[  ] 18/81, 2.8 task/s, elapsed: 6s, ETA:    22s[  ] 19/81, 2.8 task/s, elapsed: 7s, ETA:    22s[  ] 20/81, 3.0 task/s, elapsed: 7s, ETA:    20s[  ] 21/81, 3.0 task/s, elapsed: 7s, ETA:    20s[  ] 22/81, 3.1 task/s, elapsed: 7s, ETA:    19s[  ] 23/81, 3.1 task/s, elapsed: 7s, ETA:    18s[  ] 24/81, 3.3 task/s, elapsed: 7s, ETA:    17s[  ] 25/81, 3.1 task/s, elapsed: 8s, ETA:    18s[  ] 26/81, 3.2 task/s, elapsed: 8s, ETA:    17s[  ] 27/81, 3.2 task/s, elapsed: 8s, ETA:    17s[  ] 28/81, 3.4 task/s, elapsed: 8s, ETA:    16s[  ] 29/81, 3.4 task/s, elapsed: 9s, ETA:    15s[  ] 30/81, 3.5 task/s, elapsed: 9s, ETA:    15s[  ] 31/81, 3.5 task/s, elapsed: 9s, ETA:    14s[  ] 32/81, 3.6 task/s, elapsed: 9s, ETA:    14s[  ] 33/81, 3.4 task/s, elapsed: 10s, ETA:    14s[  ] 34/81, 3.5 task/s, elapsed: 10s, ETA:    13s[  ] 35/81, 3.5 task/s, elapsed: 10s, ETA:    13s[  ] 36/81, 3.6 task/s, elapsed: 10s, ETA:    12s[  ] 37/81, 3.6 task/s, elapsed: 10s, ETA:    12s[  ] 38/81, 3.7 task/s, elapsed: 10s, ETA:    12s[  ] 39/81, 3.7 task/s, elapsed: 11s, ETA:    11s[  ] 40/81, 3.8 task/s, elapsed: 11s, ETA:    11s[> ] 41/81, 3.6 task/s, elapsed: 11s, ETA:    11s[> ] 42/81, 3.7 task/s, elapsed: 11s, ETA:    10s[> ] 43/81, 3.7 task/s, elapsed: 12s, ETA:    10s[> ] 44/81, 3.8 task/s, elapsed: 12s, ETA:    10s[> ] 45/81, 3.8 task/s, elapsed: 12s, ETA:     9s[> ] 46/81, 3.9 task/s, elapsed: 12s, ETA:     9s[> ] 47/81, 3.9 task/s, elapsed: 12s, ETA:     9s[> ] 48/81, 4.0 task/s, elapsed: 12s, ETA:     8s[> ] 49/81, 3.8 task/s, elapsed: 13s, ETA:     8s[> ] 50/81, 3.9 task/s, elapsed: 13s, ETA:     8s[> ] 51/81, 3.9 task/s, elapsed: 13s, ETA:     8s[> ] 52/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 53/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 54/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 55/81, 4.0 task/s, elapsed: 14s, ETA:     6s[> ] 56/81, 4.1 task/s, elapsed: 14s, ETA:     6s[> ] 57/81, 4.1 task/s, elapsed: 14s, ETA:     6s[> ] 58/81, 4.2 task/s, elapsed: 14s, ETA:     6s[> ] 59/81, 4.1 task/s, elapsed: 14s, ETA:     5s[> ] 60/81, 4.1 task/s, elapsed: 14s, ETA:     5s[> ] 61/81, 4.1 task/s, elapsed: 15s, ETA:     5s[> ] 62/81, 4.2 task/s, elapsed: 15s, ETA:     5s[> ] 63/81, 4.2 task/s, elapsed: 15s, ETA:     4s[> ] 64/81, 4.3 task/s, elapsed: 15s, ETA:     4s[> ] 65/81, 4.3 task/s, elapsed: 15s, ETA:     4s[> ] 66/81, 4.3 task/s, elapsed: 15s, ETA:     3s[> ] 67/81, 4.3 task/s, elapsed: 15s, ETA:     3s[> ] 68/81, 4.4 task/s, elapsed: 15s, ETA:     3s[> ] 69/81, 4.3 task/s, elapsed: 16s, ETA:     3s[> ] 70/81, 4.3 task/s, elapsed: 16s, ETA:     3s[> ] 71/81, 4.3 task/s, elapsed: 16s, ETA:     2s[> ] 72/81, 4.4 task/s, elapsed: 16s, ETA:     2s[> ] 73/81, 4.4 task/s, elapsed: 17s, ETA:     2s[> ] 74/81, 4.5 task/s, elapsed: 17s, ETA:     2s[> ] 75/81, 4.4 task/s, elapsed: 17s, ETA:     1s[> ] 76/81, 4.5 task/s, elapsed: 17s, ETA:     1s[> ] 77/81, 4.5 task/s, elapsed: 17s, ETA:     1s[> ] 78/81, 4.6 task/s, elapsed: 17s, ETA:     1s[> ] 79/81, 4.5 task/s, elapsed: 18s, ETA:     0s[> ] 80/81, 4.5 task/s, elapsed: 18s, ETA:     0s[>>] 81/81, 4.5 task/s, elapsed: 18s, ETA:     0s[>>] 82/81, 4.6 task/s, elapsed: 18s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 33.8 task/s, elapsed: 0s, ETA:     2s[  ] 2/81, 33.8 task/s, elapsed: 0s, ETA:     2s[  ] 3/81, 34.2 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 34.3 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 34.4 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 17/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 18/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 34.6 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 34.5 task/s, elapsed: 1s, ETA:     1s[  ] 31/81, 34.5 task/s, elapsed: 1s, ETA:     1s[  ] 32/81, 34.5 task/s, elapsed: 1s, ETA:     1s[  ] 33/81, 34.4 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 34.4 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 34.4 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 34.4 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 34.4 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 34.3 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 49/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 50/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 51/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 52/81, 34.2 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 34.2 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 34.2 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 34.2 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 65/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 66/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 34.0 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 33.9 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 33.9 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 33.9 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 33.8 task/s, elapsed: 2s, ETA:     0s[> ] 78/81, 33.8 task/s, elapsed: 2s, ETA:     0s[> ] 79/81, 33.8 task/s, elapsed: 2s, ETA:     0s[> ] 80/81, 33.7 task/s, elapsed: 2s, ETA:     0s[>>] 81/81, 33.7 task/s, elapsed: 2s, ETA:     0s
Results writes to /tmp/tmp97wxne9_/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8c829b98e0>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 54% 44/81 [00:00<00:00, 434.82it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0041
mATE: 1.0444
mASE: 0.9441
mAOE: 1.1056
mAVE: 0.9727
mAAE: 0.8855
NDS: 0.0218
Eval time: 3.2s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.028 	1.061 	0.599 	1.417 	0.653 	0.254 
truck               	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bus                 	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.013 	0.903 	0.863 	1.533 	1.128 	0.831 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.480 	0.979 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-29 08:51:42,166 - mmdet3d - INFO - Epoch(val) [1][41]	object/car_ap_dist_0.5: 0.0000, object/car_ap_dist_1.0: 0.0014, object/car_ap_dist_2.0: 0.0360, object/car_ap_dist_4.0: 0.0739, object/car_trans_err: 1.0611, object/car_scale_err: 0.5985, object/car_orient_err: 1.4173, object/car_vel_err: 0.6531, object/car_attr_err: 0.2537, object/mATE: 1.0444, object/mASE: 0.9441, object/mAOE: 1.1056, object/mAVE: 0.9727, object/mAAE: 0.8855, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 1.0000, object/truck_scale_err: 1.0000, object/truck_orient_err: 1.0000, object/truck_vel_err: 1.0000, object/truck_attr_err: 1.0000, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0000, object/bus_scale_err: 1.0000, object/bus_orient_err: 1.0000, object/bus_vel_err: 1.0000, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.0000, object/pedestrian_ap_dist_1.0: 0.0002, object/pedestrian_ap_dist_2.0: 0.0106, object/pedestrian_ap_dist_4.0: 0.0411, object/pedestrian_trans_err: 0.9031, object/pedestrian_scale_err: 0.8631, object/pedestrian_orient_err: 1.5334, object/pedestrian_vel_err: 1.1284, object/pedestrian_attr_err: 0.8305, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.4801, object/traffic_cone_scale_err: 0.9790, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0218, object/map: 0.0041
2025-04-29 08:52:25,533 - mmdet3d - INFO - Epoch [2][50/815]	lr: 1.866e-04, eta: 0:51:58, time: 0.867, data_time: 0.072, memory: 10439, loss/object/loss_heatmap: 2.3835, loss/object/layer_-1_loss_cls: 0.5095, loss/object/layer_-1_loss_bbox: 3.0933, stats/object/matched_ious: 0.0707, loss: 5.9863, grad_norm: 9.6195
2025-04-29 08:53:04,975 - mmdet3d - INFO - Epoch [2][100/815]	lr: 1.866e-04, eta: 0:51:22, time: 0.789, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.4288, loss/object/layer_-1_loss_cls: 0.5113, loss/object/layer_-1_loss_bbox: 3.0233, stats/object/matched_ious: 0.0708, loss: 5.9635, grad_norm: 11.8659
2025-04-29 08:53:44,028 - mmdet3d - INFO - Epoch [2][150/815]	lr: 1.866e-04, eta: 0:50:44, time: 0.781, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.3537, loss/object/layer_-1_loss_cls: 0.5014, loss/object/layer_-1_loss_bbox: 3.1551, stats/object/matched_ious: 0.0737, loss: 6.0102, grad_norm: 11.0560
2025-04-29 08:54:24,046 - mmdet3d - INFO - Epoch [2][200/815]	lr: 1.866e-04, eta: 0:50:10, time: 0.800, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.2614, loss/object/layer_-1_loss_cls: 0.4693, loss/object/layer_-1_loss_bbox: 3.0202, stats/object/matched_ious: 0.0705, loss: 5.7508, grad_norm: 9.2956
2025-04-29 08:55:03,661 - mmdet3d - INFO - Epoch [2][250/815]	lr: 1.866e-04, eta: 0:49:34, time: 0.792, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.2606, loss/object/layer_-1_loss_cls: 0.4890, loss/object/layer_-1_loss_bbox: 3.0728, stats/object/matched_ious: 0.0727, loss: 5.8224, grad_norm: 10.0726
2025-04-29 08:55:44,264 - mmdet3d - INFO - Epoch [2][300/815]	lr: 1.866e-04, eta: 0:49:01, time: 0.812, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.2682, loss/object/layer_-1_loss_cls: 0.4885, loss/object/layer_-1_loss_bbox: 3.1402, stats/object/matched_ious: 0.0763, loss: 5.8969, grad_norm: 12.3690
2025-04-29 08:56:24,913 - mmdet3d - INFO - Epoch [2][350/815]	lr: 1.866e-04, eta: 0:48:27, time: 0.813, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.1635, loss/object/layer_-1_loss_cls: 0.4601, loss/object/layer_-1_loss_bbox: 3.1788, stats/object/matched_ious: 0.0694, loss: 5.8024, grad_norm: 9.4315
2025-04-29 08:57:05,734 - mmdet3d - INFO - Epoch [2][400/815]	lr: 1.866e-04, eta: 0:47:54, time: 0.816, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.1947, loss/object/layer_-1_loss_cls: 0.4581, loss/object/layer_-1_loss_bbox: 3.1490, stats/object/matched_ious: 0.0706, loss: 5.8018, grad_norm: 9.6157
2025-04-29 08:57:46,122 - mmdet3d - INFO - Epoch [2][450/815]	lr: 1.866e-04, eta: 0:47:18, time: 0.807, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.2087, loss/object/layer_-1_loss_cls: 0.4725, loss/object/layer_-1_loss_bbox: 3.0730, stats/object/matched_ious: 0.0733, loss: 5.7541, grad_norm: 11.9440
2025-04-29 08:58:26,928 - mmdet3d - INFO - Epoch [2][500/815]	lr: 1.866e-04, eta: 0:46:44, time: 0.817, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 2.1513, loss/object/layer_-1_loss_cls: 0.4578, loss/object/layer_-1_loss_bbox: 3.1860, stats/object/matched_ious: 0.0777, loss: 5.7951, grad_norm: 11.0233
2025-04-29 08:59:07,701 - mmdet3d - INFO - Epoch [2][550/815]	lr: 1.866e-04, eta: 0:46:09, time: 0.815, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.1513, loss/object/layer_-1_loss_cls: 0.4454, loss/object/layer_-1_loss_bbox: 2.9926, stats/object/matched_ious: 0.0791, loss: 5.5892, grad_norm: 12.1413
2025-04-29 08:59:47,607 - mmdet3d - INFO - Epoch [2][600/815]	lr: 1.866e-04, eta: 0:45:31, time: 0.798, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.0375, loss/object/layer_-1_loss_cls: 0.4337, loss/object/layer_-1_loss_bbox: 2.9752, stats/object/matched_ious: 0.0789, loss: 5.4463, grad_norm: 10.3750
2025-04-29 09:00:28,089 - mmdet3d - INFO - Epoch [2][650/815]	lr: 1.866e-04, eta: 0:44:54, time: 0.810, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.1292, loss/object/layer_-1_loss_cls: 0.4551, loss/object/layer_-1_loss_bbox: 3.0746, stats/object/matched_ious: 0.0817, loss: 5.6588, grad_norm: 9.5302
2025-04-29 09:01:07,710 - mmdet3d - INFO - Epoch [2][700/815]	lr: 1.866e-04, eta: 0:44:16, time: 0.792, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.1197, loss/object/layer_-1_loss_cls: 0.4414, loss/object/layer_-1_loss_bbox: 3.2516, stats/object/matched_ious: 0.0839, loss: 5.8126, grad_norm: 9.5100
2025-04-29 09:01:47,663 - mmdet3d - INFO - Epoch [2][750/815]	lr: 1.866e-04, eta: 0:43:37, time: 0.799, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.1286, loss/object/layer_-1_loss_cls: 0.4398, loss/object/layer_-1_loss_bbox: 2.9269, stats/object/matched_ious: 0.0942, loss: 5.4953, grad_norm: 10.9691
2025-04-29 09:02:27,486 - mmdet3d - INFO - Epoch [2][800/815]	lr: 1.866e-04, eta: 0:42:59, time: 0.797, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 2.0777, loss/object/layer_-1_loss_cls: 0.4455, loss/object/layer_-1_loss_bbox: 3.2409, stats/object/matched_ious: 0.0950, loss: 5.7641, grad_norm: 8.8364
2025-04-29 09:02:39,919 - mmdet3d - INFO - Saving checkpoint at 2 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 4s, ETA:   307s[  ] 2/81, 0.5 task/s, elapsed: 4s, ETA:   151s[  ] 3/81, 0.7 task/s, elapsed: 4s, ETA:   106s[  ] 4/81, 1.0 task/s, elapsed: 4s, ETA:    78s[  ] 5/81, 1.2 task/s, elapsed: 4s, ETA:    66s[  ] 6/81, 1.4 task/s, elapsed: 4s, ETA:    54s[  ] 7/81, 1.5 task/s, elapsed: 5s, ETA:    49s[  ] 8/81, 1.7 task/s, elapsed: 5s, ETA:    42s[  ] 9/81, 1.8 task/s, elapsed: 5s, ETA:    39s[  ] 10/81, 2.0 task/s, elapsed: 5s, ETA:    35s[  ] 11/81, 2.0 task/s, elapsed: 5s, ETA:    35s[  ] 12/81, 2.2 task/s, elapsed: 5s, ETA:    31s[  ] 13/81, 2.3 task/s, elapsed: 6s, ETA:    30s[  ] 14/81, 2.4 task/s, elapsed: 6s, ETA:    28s[  ] 15/81, 2.5 task/s, elapsed: 6s, ETA:    27s[  ] 16/81, 2.6 task/s, elapsed: 6s, ETA:    25s[  ] 17/81, 2.7 task/s, elapsed: 6s, ETA:    24s[  ] 18/81, 2.8 task/s, elapsed: 6s, ETA:    22s[  ] 19/81, 2.7 task/s, elapsed: 7s, ETA:    23s[  ] 20/81, 2.8 task/s, elapsed: 7s, ETA:    22s[  ] 21/81, 2.9 task/s, elapsed: 7s, ETA:    21s[  ] 22/81, 3.0 task/s, elapsed: 7s, ETA:    20s[  ] 23/81, 3.0 task/s, elapsed: 8s, ETA:    19s[  ] 24/81, 3.1 task/s, elapsed: 8s, ETA:    18s[  ] 25/81, 3.2 task/s, elapsed: 8s, ETA:    18s[  ] 26/81, 3.3 task/s, elapsed: 8s, ETA:    17s[  ] 27/81, 3.1 task/s, elapsed: 9s, ETA:    17s[  ] 28/81, 3.2 task/s, elapsed: 9s, ETA:    16s[  ] 29/81, 3.2 task/s, elapsed: 9s, ETA:    16s[  ] 30/81, 3.4 task/s, elapsed: 9s, ETA:    15s[  ] 31/81, 3.4 task/s, elapsed: 9s, ETA:    15s[  ] 32/81, 3.5 task/s, elapsed: 9s, ETA:    14s[  ] 33/81, 3.5 task/s, elapsed: 10s, ETA:    14s[  ] 34/81, 3.6 task/s, elapsed: 10s, ETA:    13s[  ] 35/81, 3.4 task/s, elapsed: 10s, ETA:    13s[  ] 36/81, 3.5 task/s, elapsed: 10s, ETA:    13s[  ] 37/81, 3.5 task/s, elapsed: 11s, ETA:    13s[  ] 38/81, 3.6 task/s, elapsed: 11s, ETA:    12s[  ] 39/81, 3.6 task/s, elapsed: 11s, ETA:    12s[  ] 40/81, 3.7 task/s, elapsed: 11s, ETA:    11s[> ] 41/81, 3.7 task/s, elapsed: 11s, ETA:    11s[> ] 42/81, 3.8 task/s, elapsed: 11s, ETA:    10s[> ] 43/81, 3.8 task/s, elapsed: 11s, ETA:    10s[> ] 44/81, 3.9 task/s, elapsed: 11s, ETA:    10s[> ] 45/81, 3.8 task/s, elapsed: 12s, ETA:    10s[> ] 46/81, 3.9 task/s, elapsed: 12s, ETA:     9s[> ] 47/81, 3.9 task/s, elapsed: 12s, ETA:     9s[> ] 48/81, 3.9 task/s, elapsed: 12s, ETA:     8s[> ] 49/81, 3.9 task/s, elapsed: 12s, ETA:     8s[> ] 50/81, 4.0 task/s, elapsed: 12s, ETA:     8s[> ] 51/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 52/81, 4.1 task/s, elapsed: 13s, ETA:     7s[> ] 53/81, 3.9 task/s, elapsed: 13s, ETA:     7s[> ] 54/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 55/81, 4.0 task/s, elapsed: 14s, ETA:     7s[> ] 56/81, 4.1 task/s, elapsed: 14s, ETA:     6s[> ] 57/81, 4.1 task/s, elapsed: 14s, ETA:     6s[> ] 58/81, 4.1 task/s, elapsed: 14s, ETA:     6s[> ] 59/81, 4.1 task/s, elapsed: 14s, ETA:     5s[> ] 60/81, 4.2 task/s, elapsed: 14s, ETA:     5s[> ] 61/81, 4.2 task/s, elapsed: 14s, ETA:     5s[> ] 62/81, 4.3 task/s, elapsed: 14s, ETA:     4s[> ] 63/81, 4.2 task/s, elapsed: 15s, ETA:     4s[> ] 64/81, 4.2 task/s, elapsed: 15s, ETA:     4s[> ] 65/81, 4.2 task/s, elapsed: 15s, ETA:     4s[> ] 66/81, 4.3 task/s, elapsed: 15s, ETA:     3s[> ] 67/81, 4.3 task/s, elapsed: 16s, ETA:     3s[> ] 68/81, 4.4 task/s, elapsed: 16s, ETA:     3s[> ] 69/81, 4.4 task/s, elapsed: 16s, ETA:     3s[> ] 70/81, 4.4 task/s, elapsed: 16s, ETA:     2s[> ] 71/81, 4.4 task/s, elapsed: 16s, ETA:     2s[> ] 72/81, 4.5 task/s, elapsed: 16s, ETA:     2s[> ] 73/81, 4.4 task/s, elapsed: 17s, ETA:     2s[> ] 74/81, 4.4 task/s, elapsed: 17s, ETA:     2s[> ] 75/81, 4.4 task/s, elapsed: 17s, ETA:     1s[> ] 76/81, 4.5 task/s, elapsed: 17s, ETA:     1s[> ] 77/81, 4.5 task/s, elapsed: 17s, ETA:     1s[> ] 78/81, 4.5 task/s, elapsed: 17s, ETA:     1s[> ] 79/81, 4.5 task/s, elapsed: 17s, ETA:     0s[> ] 80/81, 4.6 task/s, elapsed: 17s, ETA:     0s[>>] 81/81, 4.6 task/s, elapsed: 18s, ETA:     0s[>>] 82/81, 4.6 task/s, elapsed: 18s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 33.4 task/s, elapsed: 0s, ETA:     2s[  ] 2/81, 33.4 task/s, elapsed: 0s, ETA:     2s[  ] 3/81, 33.8 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 34.2 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 34.4 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 34.3 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 17/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 18/81, 34.4 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 34.4 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 34.4 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 34.4 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 34.4 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 34.4 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 34.3 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 34.3 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 34.3 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 34.3 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 34.3 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 34.3 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 31/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 32/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 33/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 34.3 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 34.2 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 34.2 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 34.2 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 34.2 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 34.2 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 49/81, 34.2 task/s, elapsed: 1s, ETA:     1s[> ] 50/81, 34.1 task/s, elapsed: 1s, ETA:     1s[> ] 51/81, 34.1 task/s, elapsed: 1s, ETA:     1s[> ] 52/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 34.1 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 65/81, 34.2 task/s, elapsed: 2s, ETA:     0s[> ] 66/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 34.2 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 34.2 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 34.2 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 34.2 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 34.2 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 34.1 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 34.0 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 33.9 task/s, elapsed: 2s, ETA:     0s[> ] 78/81, 30.8 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 30.6 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 30.1 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.1 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpp7e9ke5r/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8c82946880>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 54% 44/81 [00:00<00:00, 437.25it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0239
mATE: 0.9683
mASE: 0.8384
mAOE: 1.0883
mAVE: 0.7944
mAAE: 0.7474
NDS: 0.0771
Eval time: 3.5s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.184 	0.994 	0.382 	1.311 	0.389 	0.156 
truck               	0.000 	1.047 	0.474 	1.089 	0.114 	0.000 
bus                 	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.055 	0.642 	0.527 	1.395 	0.852 	0.823 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.000 	1.000 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-29 09:03:11,540 - mmdet3d - INFO - Epoch(val) [2][41]	object/car_ap_dist_0.5: 0.0000, object/car_ap_dist_1.0: 0.0495, object/car_ap_dist_2.0: 0.2752, object/car_ap_dist_4.0: 0.4118, object/car_trans_err: 0.9938, object/car_scale_err: 0.3824, object/car_orient_err: 1.3110, object/car_vel_err: 0.3894, object/car_attr_err: 0.1564, object/mATE: 0.9683, object/mASE: 0.8384, object/mAOE: 1.0883, object/mAVE: 0.7944, object/mAAE: 0.7474, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 1.0472, object/truck_scale_err: 0.4742, object/truck_orient_err: 1.0889, object/truck_vel_err: 0.1142, object/truck_attr_err: 0.0000, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0000, object/bus_scale_err: 1.0000, object/bus_orient_err: 1.0000, object/bus_vel_err: 1.0000, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.0073, object/pedestrian_ap_dist_1.0: 0.0293, object/pedestrian_ap_dist_2.0: 0.0488, object/pedestrian_ap_dist_4.0: 0.1346, object/pedestrian_trans_err: 0.6416, object/pedestrian_scale_err: 0.5274, object/pedestrian_orient_err: 1.3952, object/pedestrian_vel_err: 0.8517, object/pedestrian_attr_err: 0.8230, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.0000, object/traffic_cone_scale_err: 1.0000, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0771, object/map: 0.0239
2025-04-29 09:03:53,993 - mmdet3d - INFO - Epoch [3][50/815]	lr: 1.501e-04, eta: 0:41:51, time: 0.848, data_time: 0.072, memory: 10439, loss/object/loss_heatmap: 1.9766, loss/object/layer_-1_loss_cls: 0.4223, loss/object/layer_-1_loss_bbox: 2.7669, stats/object/matched_ious: 0.1114, loss: 5.1659, grad_norm: 8.4021
2025-04-29 09:04:34,496 - mmdet3d - INFO - Epoch [3][100/815]	lr: 1.501e-04, eta: 0:41:14, time: 0.810, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.9525, loss/object/layer_-1_loss_cls: 0.4092, loss/object/layer_-1_loss_bbox: 2.9212, stats/object/matched_ious: 0.1124, loss: 5.2829, grad_norm: 8.4429
2025-04-29 09:05:14,189 - mmdet3d - INFO - Epoch [3][150/815]	lr: 1.501e-04, eta: 0:40:36, time: 0.794, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.9671, loss/object/layer_-1_loss_cls: 0.4123, loss/object/layer_-1_loss_bbox: 2.8443, stats/object/matched_ious: 0.1128, loss: 5.2238, grad_norm: 8.8826
2025-04-29 09:05:54,722 - mmdet3d - INFO - Epoch [3][200/815]	lr: 1.501e-04, eta: 0:39:59, time: 0.811, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.9049, loss/object/layer_-1_loss_cls: 0.3979, loss/object/layer_-1_loss_bbox: 2.8956, stats/object/matched_ious: 0.1114, loss: 5.1984, grad_norm: 9.1444
2025-04-29 09:06:35,356 - mmdet3d - INFO - Epoch [3][250/815]	lr: 1.501e-04, eta: 0:39:22, time: 0.813, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.8864, loss/object/layer_-1_loss_cls: 0.4023, loss/object/layer_-1_loss_bbox: 2.7655, stats/object/matched_ious: 0.1162, loss: 5.0542, grad_norm: 8.7247
2025-04-29 09:07:15,205 - mmdet3d - INFO - Epoch [3][300/815]	lr: 1.501e-04, eta: 0:38:44, time: 0.797, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.8260, loss/object/layer_-1_loss_cls: 0.3855, loss/object/layer_-1_loss_bbox: 2.4770, stats/object/matched_ious: 0.1302, loss: 4.6885, grad_norm: 8.7496
2025-04-29 09:07:55,988 - mmdet3d - INFO - Epoch [3][350/815]	lr: 1.501e-04, eta: 0:38:07, time: 0.816, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.7991, loss/object/layer_-1_loss_cls: 0.3793, loss/object/layer_-1_loss_bbox: 2.8069, stats/object/matched_ious: 0.1211, loss: 4.9853, grad_norm: 8.0996
2025-04-29 09:08:36,298 - mmdet3d - INFO - Epoch [3][400/815]	lr: 1.501e-04, eta: 0:37:29, time: 0.806, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.8325, loss/object/layer_-1_loss_cls: 0.3887, loss/object/layer_-1_loss_bbox: 2.6277, stats/object/matched_ious: 0.1323, loss: 4.8489, grad_norm: 8.7864
2025-04-29 09:09:16,743 - mmdet3d - INFO - Epoch [3][450/815]	lr: 1.501e-04, eta: 0:36:51, time: 0.810, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.8230, loss/object/layer_-1_loss_cls: 0.3782, loss/object/layer_-1_loss_bbox: 2.5648, stats/object/matched_ious: 0.1265, loss: 4.7659, grad_norm: 8.5052
2025-04-29 09:09:57,123 - mmdet3d - INFO - Epoch [3][500/815]	lr: 1.501e-04, eta: 0:36:13, time: 0.807, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.7632, loss/object/layer_-1_loss_cls: 0.3752, loss/object/layer_-1_loss_bbox: 2.6941, stats/object/matched_ious: 0.1334, loss: 4.8325, grad_norm: 8.5274
2025-04-29 09:10:37,727 - mmdet3d - INFO - Epoch [3][550/815]	lr: 1.501e-04, eta: 0:35:35, time: 0.812, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.8428, loss/object/layer_-1_loss_cls: 0.3791, loss/object/layer_-1_loss_bbox: 2.9004, stats/object/matched_ious: 0.1199, loss: 5.1223, grad_norm: 9.0148
2025-04-29 09:11:17,496 - mmdet3d - INFO - Epoch [3][600/815]	lr: 1.501e-04, eta: 0:34:56, time: 0.795, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.7092, loss/object/layer_-1_loss_cls: 0.3662, loss/object/layer_-1_loss_bbox: 2.5066, stats/object/matched_ious: 0.1333, loss: 4.5819, grad_norm: 8.1832
2025-04-29 09:11:58,485 - mmdet3d - INFO - Epoch [3][650/815]	lr: 1.501e-04, eta: 0:34:19, time: 0.820, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.7592, loss/object/layer_-1_loss_cls: 0.3689, loss/object/layer_-1_loss_bbox: 2.5922, stats/object/matched_ious: 0.1382, loss: 4.7203, grad_norm: 7.7312
2025-04-29 09:12:39,201 - mmdet3d - INFO - Epoch [3][700/815]	lr: 1.501e-04, eta: 0:33:41, time: 0.814, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.6964, loss/object/layer_-1_loss_cls: 0.3746, loss/object/layer_-1_loss_bbox: 2.5502, stats/object/matched_ious: 0.1392, loss: 4.6212, grad_norm: 7.9140
2025-04-29 09:13:19,440 - mmdet3d - INFO - Epoch [3][750/815]	lr: 1.501e-04, eta: 0:33:02, time: 0.805, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.7481, loss/object/layer_-1_loss_cls: 0.3588, loss/object/layer_-1_loss_bbox: 2.7043, stats/object/matched_ious: 0.1364, loss: 4.8112, grad_norm: 8.1737
2025-04-29 09:13:58,930 - mmdet3d - INFO - Epoch [3][800/815]	lr: 1.501e-04, eta: 0:32:23, time: 0.790, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.7037, loss/object/layer_-1_loss_cls: 0.3644, loss/object/layer_-1_loss_bbox: 2.4874, stats/object/matched_ious: 0.1528, loss: 4.5555, grad_norm: 8.1172
2025-04-29 09:14:11,189 - mmdet3d - INFO - Saving checkpoint at 3 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   277s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   137s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    96s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    71s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    60s[  ] 6/81, 1.5 task/s, elapsed: 4s, ETA:    49s[  ] 7/81, 1.5 task/s, elapsed: 5s, ETA:    48s[  ] 8/81, 1.7 task/s, elapsed: 5s, ETA:    42s[  ] 9/81, 1.8 task/s, elapsed: 5s, ETA:    39s[  ] 10/81, 2.1 task/s, elapsed: 5s, ETA:    35s[  ] 11/81, 2.1 task/s, elapsed: 5s, ETA:    33s[  ] 12/81, 2.3 task/s, elapsed: 5s, ETA:    30s[  ] 13/81, 2.4 task/s, elapsed: 5s, ETA:    28s[  ] 14/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 15/81, 2.4 task/s, elapsed: 6s, ETA:    27s[  ] 16/81, 2.6 task/s, elapsed: 6s, ETA:    25s[  ] 17/81, 2.6 task/s, elapsed: 6s, ETA:    24s[  ] 18/81, 2.8 task/s, elapsed: 6s, ETA:    23s[  ] 19/81, 2.8 task/s, elapsed: 7s, ETA:    22s[  ] 20/81, 3.0 task/s, elapsed: 7s, ETA:    21s[  ] 21/81, 3.0 task/s, elapsed: 7s, ETA:    20s[  ] 22/81, 3.1 task/s, elapsed: 7s, ETA:    19s[  ] 23/81, 2.9 task/s, elapsed: 8s, ETA:    20s[  ] 24/81, 3.1 task/s, elapsed: 8s, ETA:    19s[  ] 25/81, 3.1 task/s, elapsed: 8s, ETA:    18s[  ] 26/81, 3.2 task/s, elapsed: 8s, ETA:    17s[  ] 27/81, 3.2 task/s, elapsed: 8s, ETA:    17s[  ] 28/81, 3.3 task/s, elapsed: 8s, ETA:    16s[  ] 29/81, 3.3 task/s, elapsed: 9s, ETA:    16s[  ] 30/81, 3.5 task/s, elapsed: 9s, ETA:    15s[  ] 31/81, 3.3 task/s, elapsed: 9s, ETA:    15s[  ] 32/81, 3.4 task/s, elapsed: 9s, ETA:    14s[  ] 33/81, 3.4 task/s, elapsed: 10s, ETA:    14s[  ] 34/81, 3.5 task/s, elapsed: 10s, ETA:    13s[  ] 35/81, 3.5 task/s, elapsed: 10s, ETA:    13s[  ] 36/81, 3.6 task/s, elapsed: 10s, ETA:    12s[  ] 37/81, 3.6 task/s, elapsed: 10s, ETA:    12s[  ] 38/81, 3.7 task/s, elapsed: 10s, ETA:    12s[  ] 39/81, 3.5 task/s, elapsed: 11s, ETA:    12s[  ] 40/81, 3.6 task/s, elapsed: 11s, ETA:    11s[> ] 41/81, 3.6 task/s, elapsed: 11s, ETA:    11s[> ] 42/81, 3.7 task/s, elapsed: 11s, ETA:    10s[> ] 43/81, 3.7 task/s, elapsed: 12s, ETA:    10s[> ] 44/81, 3.8 task/s, elapsed: 12s, ETA:    10s[> ] 45/81, 3.8 task/s, elapsed: 12s, ETA:     9s[> ] 46/81, 3.9 task/s, elapsed: 12s, ETA:     9s[> ] 47/81, 3.9 task/s, elapsed: 12s, ETA:     9s[> ] 48/81, 4.0 task/s, elapsed: 12s, ETA:     8s[> ] 49/81, 3.9 task/s, elapsed: 13s, ETA:     8s[> ] 50/81, 4.0 task/s, elapsed: 13s, ETA:     8s[> ] 51/81, 4.0 task/s, elapsed: 13s, ETA:     8s[> ] 52/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 53/81, 4.0 task/s, elapsed: 13s, ETA:     7s[> ] 54/81, 4.1 task/s, elapsed: 13s, ETA:     7s[> ] 55/81, 4.1 task/s, elapsed: 13s, ETA:     6s[> ] 56/81, 4.2 task/s, elapsed: 13s, ETA:     6s[> ] 57/81, 4.2 task/s, elapsed: 14s, ETA:     6s[> ] 58/81, 4.3 task/s, elapsed: 14s, ETA:     5s[> ] 59/81, 4.1 task/s, elapsed: 14s, ETA:     5s[> ] 60/81, 4.2 task/s, elapsed: 14s, ETA:     5s[> ] 61/81, 4.2 task/s, elapsed: 14s, ETA:     5s[> ] 62/81, 4.3 task/s, elapsed: 14s, ETA:     4s[> ] 63/81, 4.3 task/s, elapsed: 15s, ETA:     4s[> ] 64/81, 4.4 task/s, elapsed: 15s, ETA:     4s[> ] 65/81, 4.4 task/s, elapsed: 15s, ETA:     4s[> ] 66/81, 4.4 task/s, elapsed: 15s, ETA:     3s[> ] 67/81, 4.4 task/s, elapsed: 15s, ETA:     3s[> ] 68/81, 4.5 task/s, elapsed: 15s, ETA:     3s[> ] 69/81, 4.4 task/s, elapsed: 16s, ETA:     3s[> ] 70/81, 4.4 task/s, elapsed: 16s, ETA:     2s[> ] 71/81, 4.4 task/s, elapsed: 16s, ETA:     2s[> ] 72/81, 4.5 task/s, elapsed: 16s, ETA:     2s[> ] 73/81, 4.5 task/s, elapsed: 16s, ETA:     2s[> ] 74/81, 4.5 task/s, elapsed: 16s, ETA:     2s[> ] 75/81, 4.5 task/s, elapsed: 17s, ETA:     1s[> ] 76/81, 4.6 task/s, elapsed: 17s, ETA:     1s[> ] 77/81, 4.6 task/s, elapsed: 17s, ETA:     1s[> ] 78/81, 4.6 task/s, elapsed: 17s, ETA:     1s[> ] 79/81, 4.5 task/s, elapsed: 17s, ETA:     0s[> ] 80/81, 4.6 task/s, elapsed: 17s, ETA:     0s[>>] 81/81, 4.6 task/s, elapsed: 18s, ETA:     0s[>>] 82/81, 4.6 task/s, elapsed: 18s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 33.8 task/s, elapsed: 0s, ETA:     2s[  ] 2/81, 34.2 task/s, elapsed: 0s, ETA:     2s[  ] 3/81, 34.7 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 34.8 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 34.7 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 34.7 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 34.7 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 34.9 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 34.9 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 35.0 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 34.9 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 34.9 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 34.9 task/s, elapsed: 0s, ETA:     2s[  ] 17/81, 35.0 task/s, elapsed: 0s, ETA:     2s[  ] 18/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 35.0 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 30/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 31/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 32/81, 34.9 task/s, elapsed: 1s, ETA:     1s[  ] 33/81, 34.9 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 34.8 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 34.8 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 34.8 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 34.8 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 34.8 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 34.8 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 34.7 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 34.7 task/s, elapsed: 1s, ETA:     1s[> ] 49/81, 34.7 task/s, elapsed: 1s, ETA:     1s[> ] 50/81, 34.7 task/s, elapsed: 1s, ETA:     1s[> ] 51/81, 34.7 task/s, elapsed: 1s, ETA:     1s[> ] 52/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 34.6 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 65/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 66/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 34.5 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 34.4 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 34.4 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 34.4 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 34.4 task/s, elapsed: 2s, ETA:     0s[> ] 78/81, 34.4 task/s, elapsed: 2s, ETA:     0s[> ] 79/81, 34.4 task/s, elapsed: 2s, ETA:     0s[> ] 80/81, 34.4 task/s, elapsed: 2s, ETA:     0s[>>] 81/81, 34.4 task/s, elapsed: 2s, ETA:     0s
Results writes to /tmp/tmpzy0rk2dk/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8c82799e50>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 54% 44/81 [00:00<00:00, 437.11it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0342
mATE: 0.9569
mASE: 0.7829
mAOE: 1.0662
mAVE: 0.7961
mAAE: 0.7470
NDS: 0.0888
Eval time: 2.4s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.236 	0.853 	0.256 	1.444 	0.345 	0.163 
truck               	0.014 	0.926 	0.291 	0.581 	0.251 	0.029 
bus                 	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.092 	0.566 	0.432 	1.570 	0.773 	0.784 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.224 	0.850 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-29 09:14:41,707 - mmdet3d - INFO - Epoch(val) [3][41]	object/car_ap_dist_0.5: 0.0032, object/car_ap_dist_1.0: 0.1121, object/car_ap_dist_2.0: 0.3662, object/car_ap_dist_4.0: 0.4606, object/car_trans_err: 0.8525, object/car_scale_err: 0.2563, object/car_orient_err: 1.4443, object/car_vel_err: 0.3452, object/car_attr_err: 0.1633, object/mATE: 0.9569, object/mASE: 0.7829, object/mAOE: 1.0662, object/mAVE: 0.7961, object/mAAE: 0.7470, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0263, object/truck_ap_dist_4.0: 0.0307, object/truck_trans_err: 0.9264, object/truck_scale_err: 0.2910, object/truck_orient_err: 0.5810, object/truck_vel_err: 0.2507, object/truck_attr_err: 0.0291, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0000, object/bus_scale_err: 1.0000, object/bus_orient_err: 1.0000, object/bus_vel_err: 1.0000, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.0338, object/pedestrian_ap_dist_1.0: 0.0645, object/pedestrian_ap_dist_2.0: 0.0931, object/pedestrian_ap_dist_4.0: 0.1784, object/pedestrian_trans_err: 0.5662, object/pedestrian_scale_err: 0.4320, object/pedestrian_orient_err: 1.5701, object/pedestrian_vel_err: 0.7729, object/pedestrian_attr_err: 0.7839, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.2236, object/traffic_cone_scale_err: 0.8495, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0888, object/map: 0.0342
2025-04-29 09:15:24,463 - mmdet3d - INFO - Epoch [4][50/815]	lr: 1.001e-04, eta: 0:31:23, time: 0.854, data_time: 0.073, memory: 10439, loss/object/loss_heatmap: 1.6331, loss/object/layer_-1_loss_cls: 0.3460, loss/object/layer_-1_loss_bbox: 2.4050, stats/object/matched_ious: 0.1497, loss: 4.3841, grad_norm: 6.9766
2025-04-29 09:16:04,847 - mmdet3d - INFO - Epoch [4][100/815]	lr: 1.001e-04, eta: 0:30:45, time: 0.808, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.6001, loss/object/layer_-1_loss_cls: 0.3641, loss/object/layer_-1_loss_bbox: 2.5019, stats/object/matched_ious: 0.1425, loss: 4.4660, grad_norm: 8.2205
2025-04-29 09:16:45,296 - mmdet3d - INFO - Epoch [4][150/815]	lr: 1.001e-04, eta: 0:30:06, time: 0.809, data_time: 0.010, memory: 10439, loss/object/loss_heatmap: 1.6272, loss/object/layer_-1_loss_cls: 0.3475, loss/object/layer_-1_loss_bbox: 2.4332, stats/object/matched_ious: 0.1438, loss: 4.4079, grad_norm: 7.6138
2025-04-29 09:17:22,834 - mmdet3d - INFO - Epoch [4][200/815]	lr: 1.001e-04, eta: 0:29:25, time: 0.751, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.6407, loss/object/layer_-1_loss_cls: 0.3459, loss/object/layer_-1_loss_bbox: 2.2934, stats/object/matched_ious: 0.1551, loss: 4.2800, grad_norm: 8.0275
2025-04-29 09:18:02,352 - mmdet3d - INFO - Epoch [4][250/815]	lr: 1.001e-04, eta: 0:28:46, time: 0.790, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.6091, loss/object/layer_-1_loss_cls: 0.3484, loss/object/layer_-1_loss_bbox: 2.3607, stats/object/matched_ious: 0.1500, loss: 4.3181, grad_norm: 8.0384
2025-04-29 09:18:42,997 - mmdet3d - INFO - Epoch [4][300/815]	lr: 1.001e-04, eta: 0:28:08, time: 0.813, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.6227, loss/object/layer_-1_loss_cls: 0.3555, loss/object/layer_-1_loss_bbox: 2.3095, stats/object/matched_ious: 0.1581, loss: 4.2877, grad_norm: 7.7300
2025-04-29 09:19:21,956 - mmdet3d - INFO - Epoch [4][350/815]	lr: 1.001e-04, eta: 0:27:28, time: 0.779, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.5296, loss/object/layer_-1_loss_cls: 0.3361, loss/object/layer_-1_loss_bbox: 2.2745, stats/object/matched_ious: 0.1591, loss: 4.1402, grad_norm: 7.7733
2025-04-29 09:20:01,042 - mmdet3d - INFO - Epoch [4][400/815]	lr: 1.001e-04, eta: 0:26:49, time: 0.782, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.5907, loss/object/layer_-1_loss_cls: 0.3567, loss/object/layer_-1_loss_bbox: 2.3008, stats/object/matched_ious: 0.1661, loss: 4.2482, grad_norm: 8.2940
2025-04-29 09:20:38,952 - mmdet3d - INFO - Epoch [4][450/815]	lr: 1.001e-04, eta: 0:26:08, time: 0.758, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.5231, loss/object/layer_-1_loss_cls: 0.3351, loss/object/layer_-1_loss_bbox: 2.3194, stats/object/matched_ious: 0.1636, loss: 4.1776, grad_norm: 7.1283
2025-04-29 09:21:17,193 - mmdet3d - INFO - Epoch [4][500/815]	lr: 1.001e-04, eta: 0:25:28, time: 0.765, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.5769, loss/object/layer_-1_loss_cls: 0.3397, loss/object/layer_-1_loss_bbox: 2.3413, stats/object/matched_ious: 0.1564, loss: 4.2579, grad_norm: 8.2740
2025-04-29 09:21:54,807 - mmdet3d - INFO - Epoch [4][550/815]	lr: 1.001e-04, eta: 0:24:48, time: 0.752, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.4871, loss/object/layer_-1_loss_cls: 0.3180, loss/object/layer_-1_loss_bbox: 2.3180, stats/object/matched_ious: 0.1601, loss: 4.1230, grad_norm: 6.7600
2025-04-29 09:22:33,529 - mmdet3d - INFO - Epoch [4][600/815]	lr: 1.001e-04, eta: 0:24:08, time: 0.774, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.5129, loss/object/layer_-1_loss_cls: 0.3248, loss/object/layer_-1_loss_bbox: 2.2435, stats/object/matched_ious: 0.1647, loss: 4.0813, grad_norm: 7.3637
2025-04-29 09:23:13,852 - mmdet3d - INFO - Epoch [4][650/815]	lr: 1.001e-04, eta: 0:23:30, time: 0.807, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.4718, loss/object/layer_-1_loss_cls: 0.3259, loss/object/layer_-1_loss_bbox: 2.4394, stats/object/matched_ious: 0.1541, loss: 4.2371, grad_norm: 7.3324
2025-04-29 09:23:53,066 - mmdet3d - INFO - Epoch [4][700/815]	lr: 1.001e-04, eta: 0:22:50, time: 0.784, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.4268, loss/object/layer_-1_loss_cls: 0.3139, loss/object/layer_-1_loss_bbox: 2.2779, stats/object/matched_ious: 0.1729, loss: 4.0186, grad_norm: 7.0431
2025-04-29 09:24:32,343 - mmdet3d - INFO - Epoch [4][750/815]	lr: 1.001e-04, eta: 0:22:11, time: 0.786, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.5328, loss/object/layer_-1_loss_cls: 0.3145, loss/object/layer_-1_loss_bbox: 2.4335, stats/object/matched_ious: 0.1576, loss: 4.2808, grad_norm: 7.5637
2025-04-29 09:25:08,991 - mmdet3d - INFO - Epoch [4][800/815]	lr: 1.001e-04, eta: 0:21:30, time: 0.733, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.5184, loss/object/layer_-1_loss_cls: 0.3218, loss/object/layer_-1_loss_bbox: 2.2069, stats/object/matched_ious: 0.1719, loss: 4.0472, grad_norm: 8.0397
2025-04-29 09:25:20,643 - mmdet3d - INFO - Saving checkpoint at 4 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   273s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   135s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    94s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    70s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    59s[  ] 6/81, 1.5 task/s, elapsed: 4s, ETA:    48s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    44s[  ] 8/81, 1.9 task/s, elapsed: 4s, ETA:    38s[  ] 9/81, 2.0 task/s, elapsed: 4s, ETA:    35s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    31s[  ] 11/81, 2.2 task/s, elapsed: 5s, ETA:    32s[  ] 12/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 13/81, 2.5 task/s, elapsed: 5s, ETA:    27s[  ] 14/81, 2.7 task/s, elapsed: 5s, ETA:    25s[  ] 15/81, 2.7 task/s, elapsed: 6s, ETA:    24s[  ] 16/81, 2.9 task/s, elapsed: 6s, ETA:    22s[  ] 17/81, 2.9 task/s, elapsed: 6s, ETA:    22s[  ] 18/81, 3.1 task/s, elapsed: 6s, ETA:    20s[  ] 19/81, 3.1 task/s, elapsed: 6s, ETA:    20s[  ] 20/81, 3.3 task/s, elapsed: 6s, ETA:    18s[  ] 21/81, 3.2 task/s, elapsed: 7s, ETA:    19s[  ] 22/81, 3.3 task/s, elapsed: 7s, ETA:    18s[  ] 23/81, 3.4 task/s, elapsed: 7s, ETA:    17s[  ] 24/81, 3.5 task/s, elapsed: 7s, ETA:    16s[  ] 25/81, 3.5 task/s, elapsed: 7s, ETA:    16s[  ] 26/81, 3.6 task/s, elapsed: 7s, ETA:    15s[  ] 27/81, 3.6 task/s, elapsed: 7s, ETA:    15s[  ] 28/81, 3.8 task/s, elapsed: 7s, ETA:    14s[  ] 29/81, 3.8 task/s, elapsed: 8s, ETA:    14s[  ] 30/81, 3.9 task/s, elapsed: 8s, ETA:    13s[  ] 31/81, 3.8 task/s, elapsed: 8s, ETA:    13s[  ] 32/81, 3.9 task/s, elapsed: 8s, ETA:    13s[  ] 33/81, 3.9 task/s, elapsed: 8s, ETA:    12s[  ] 34/81, 4.0 task/s, elapsed: 8s, ETA:    12s[  ] 35/81, 4.0 task/s, elapsed: 9s, ETA:    12s[  ] 36/81, 4.1 task/s, elapsed: 9s, ETA:    11s[  ] 37/81, 4.1 task/s, elapsed: 9s, ETA:    11s[  ] 38/81, 4.2 task/s, elapsed: 9s, ETA:    10s[  ] 39/81, 4.2 task/s, elapsed: 9s, ETA:    10s[  ] 40/81, 4.3 task/s, elapsed: 9s, ETA:    10s[> ] 41/81, 4.2 task/s, elapsed: 10s, ETA:    10s[> ] 42/81, 4.3 task/s, elapsed: 10s, ETA:     9s[> ] 43/81, 4.3 task/s, elapsed: 10s, ETA:     9s[> ] 44/81, 4.3 task/s, elapsed: 10s, ETA:     9s[> ] 45/81, 4.3 task/s, elapsed: 10s, ETA:     8s[> ] 46/81, 4.4 task/s, elapsed: 10s, ETA:     8s[> ] 47/81, 4.4 task/s, elapsed: 11s, ETA:     8s[> ] 48/81, 4.5 task/s, elapsed: 11s, ETA:     7s[> ] 49/81, 4.5 task/s, elapsed: 11s, ETA:     7s[> ] 50/81, 4.6 task/s, elapsed: 11s, ETA:     7s[> ] 51/81, 4.4 task/s, elapsed: 11s, ETA:     7s[> ] 52/81, 4.5 task/s, elapsed: 11s, ETA:     6s[> ] 53/81, 4.5 task/s, elapsed: 12s, ETA:     6s[> ] 54/81, 4.6 task/s, elapsed: 12s, ETA:     6s[> ] 55/81, 4.6 task/s, elapsed: 12s, ETA:     6s[> ] 56/81, 4.7 task/s, elapsed: 12s, ETA:     5s[> ] 57/81, 4.7 task/s, elapsed: 12s, ETA:     5s[> ] 58/81, 4.8 task/s, elapsed: 12s, ETA:     5s[> ] 59/81, 4.8 task/s, elapsed: 12s, ETA:     5s[> ] 60/81, 4.8 task/s, elapsed: 12s, ETA:     4s[> ] 61/81, 4.7 task/s, elapsed: 13s, ETA:     4s[> ] 62/81, 4.7 task/s, elapsed: 13s, ETA:     4s[> ] 63/81, 4.7 task/s, elapsed: 13s, ETA:     4s[> ] 64/81, 4.8 task/s, elapsed: 13s, ETA:     4s[> ] 65/81, 4.8 task/s, elapsed: 14s, ETA:     3s[> ] 66/81, 4.9 task/s, elapsed: 14s, ETA:     3s[> ] 67/81, 4.9 task/s, elapsed: 14s, ETA:     3s[> ] 68/81, 4.9 task/s, elapsed: 14s, ETA:     3s[> ] 69/81, 4.9 task/s, elapsed: 14s, ETA:     2s[> ] 70/81, 5.0 task/s, elapsed: 14s, ETA:     2s[> ] 71/81, 4.8 task/s, elapsed: 15s, ETA:     2s[> ] 72/81, 4.9 task/s, elapsed: 15s, ETA:     2s[> ] 73/81, 4.9 task/s, elapsed: 15s, ETA:     2s[> ] 74/81, 5.0 task/s, elapsed: 15s, ETA:     1s[> ] 75/81, 4.9 task/s, elapsed: 15s, ETA:     1s[> ] 76/81, 5.0 task/s, elapsed: 15s, ETA:     1s[> ] 77/81, 5.0 task/s, elapsed: 15s, ETA:     1s[> ] 78/81, 5.1 task/s, elapsed: 15s, ETA:     1s[> ] 79/81, 5.1 task/s, elapsed: 16s, ETA:     0s[> ] 80/81, 5.1 task/s, elapsed: 16s, ETA:     0s[>>] 81/81, 5.0 task/s, elapsed: 16s, ETA:     0s[>>] 82/81, 5.0 task/s, elapsed: 16s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 34.6 task/s, elapsed: 0s, ETA:     2s[  ] 2/81, 35.0 task/s, elapsed: 0s, ETA:     2s[  ] 3/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 35.6 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 35.3 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 35.3 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 17/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 18/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 35.3 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 35.3 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 35.3 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 35.2 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 35.2 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 35.2 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 35.3 task/s, elapsed: 1s, ETA:     1s[  ] 30/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 31/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 32/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 33/81, 35.1 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 35.1 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 35.1 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 35.0 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 49/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 50/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 51/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 52/81, 34.8 task/s, elapsed: 1s, ETA:     1s[> ] 53/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 65/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 66/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 31.4 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 31.7 task/s, elapsed: 2s, ETA:     0s[> ] 78/81, 31.7 task/s, elapsed: 2s, ETA:     0s[> ] 79/81, 31.7 task/s, elapsed: 2s, ETA:     0s[> ] 80/81, 31.3 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.8 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpujfs3p5h/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8c80e00a30>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 54% 44/81 [00:00<00:00, 429.71it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0518
mATE: 0.9442
mASE: 0.7256
mAOE: 1.0921
mAVE: 0.9598
mAAE: 0.7197
NDS: 0.0909
Eval time: 2.8s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.248 	0.772 	0.262 	1.391 	0.386 	0.196 
truck               	0.001 	0.536 	0.312 	0.782 	0.142 	0.015 
bus                 	0.012 	1.224 	0.595 	1.049 	2.577 	0.872 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.256 	0.540 	0.420 	1.608 	0.573 	0.674 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.368 	0.667 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-29 09:25:49,965 - mmdet3d - INFO - Epoch(val) [4][41]	object/car_ap_dist_0.5: 0.0131, object/car_ap_dist_1.0: 0.1449, object/car_ap_dist_2.0: 0.3742, object/car_ap_dist_4.0: 0.4605, object/car_trans_err: 0.7724, object/car_scale_err: 0.2615, object/car_orient_err: 1.3906, object/car_vel_err: 0.3861, object/car_attr_err: 0.1960, object/mATE: 0.9442, object/mASE: 0.7256, object/mAOE: 1.0921, object/mAVE: 0.9598, object/mAAE: 0.7197, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0004, object/truck_ap_dist_2.0: 0.0022, object/truck_ap_dist_4.0: 0.0026, object/truck_trans_err: 0.5364, object/truck_scale_err: 0.3123, object/truck_orient_err: 0.7819, object/truck_vel_err: 0.1419, object/truck_attr_err: 0.0154, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0473, object/bus_trans_err: 1.2244, object/bus_scale_err: 0.5954, object/bus_orient_err: 1.0486, object/bus_vel_err: 2.5774, object/bus_attr_err: 0.8721, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1542, object/pedestrian_ap_dist_1.0: 0.2328, object/pedestrian_ap_dist_2.0: 0.2838, object/pedestrian_ap_dist_4.0: 0.3543, object/pedestrian_trans_err: 0.5405, object/pedestrian_scale_err: 0.4197, object/pedestrian_orient_err: 1.6075, object/pedestrian_vel_err: 0.5729, object/pedestrian_attr_err: 0.6744, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.3682, object/traffic_cone_scale_err: 0.6668, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0909, object/map: 0.0518
2025-04-29 09:26:30,140 - mmdet3d - INFO - Epoch [5][50/815]	lr: 5.015e-05, eta: 0:20:34, time: 0.803, data_time: 0.073, memory: 10439, loss/object/loss_heatmap: 1.4505, loss/object/layer_-1_loss_cls: 0.3111, loss/object/layer_-1_loss_bbox: 2.2089, stats/object/matched_ious: 0.1762, loss: 3.9705, grad_norm: 6.9306
2025-04-29 09:27:07,615 - mmdet3d - INFO - Epoch [5][100/815]	lr: 5.015e-05, eta: 0:19:54, time: 0.750, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.4071, loss/object/layer_-1_loss_cls: 0.3127, loss/object/layer_-1_loss_bbox: 2.1878, stats/object/matched_ious: 0.1789, loss: 3.9076, grad_norm: 6.6595
2025-04-29 09:27:45,230 - mmdet3d - INFO - Epoch [5][150/815]	lr: 5.015e-05, eta: 0:19:15, time: 0.752, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.4601, loss/object/layer_-1_loss_cls: 0.3093, loss/object/layer_-1_loss_bbox: 2.0917, stats/object/matched_ious: 0.1756, loss: 3.8611, grad_norm: 7.5324
2025-04-29 09:28:22,844 - mmdet3d - INFO - Epoch [5][200/815]	lr: 5.015e-05, eta: 0:18:35, time: 0.752, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3052, loss/object/layer_-1_loss_cls: 0.2899, loss/object/layer_-1_loss_bbox: 2.0933, stats/object/matched_ious: 0.1807, loss: 3.6885, grad_norm: 6.6226
2025-04-29 09:29:00,546 - mmdet3d - INFO - Epoch [5][250/815]	lr: 5.015e-05, eta: 0:17:56, time: 0.754, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3184, loss/object/layer_-1_loss_cls: 0.2875, loss/object/layer_-1_loss_bbox: 2.0250, stats/object/matched_ious: 0.1805, loss: 3.6309, grad_norm: 6.3504
2025-04-29 09:29:37,986 - mmdet3d - INFO - Epoch [5][300/815]	lr: 5.015e-05, eta: 0:17:16, time: 0.749, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3930, loss/object/layer_-1_loss_cls: 0.3016, loss/object/layer_-1_loss_bbox: 2.0712, stats/object/matched_ious: 0.1838, loss: 3.7657, grad_norm: 7.0156
2025-04-29 09:30:15,926 - mmdet3d - INFO - Epoch [5][350/815]	lr: 5.015e-05, eta: 0:16:37, time: 0.759, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3394, loss/object/layer_-1_loss_cls: 0.2974, loss/object/layer_-1_loss_bbox: 2.0222, stats/object/matched_ious: 0.1867, loss: 3.6590, grad_norm: 6.7951
2025-04-29 09:30:55,263 - mmdet3d - INFO - Epoch [5][400/815]	lr: 5.015e-05, eta: 0:15:58, time: 0.787, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.4189, loss/object/layer_-1_loss_cls: 0.2977, loss/object/layer_-1_loss_bbox: 2.1871, stats/object/matched_ious: 0.1804, loss: 3.9037, grad_norm: 7.4133
2025-04-29 09:31:32,736 - mmdet3d - INFO - Epoch [5][450/815]	lr: 5.015e-05, eta: 0:15:18, time: 0.749, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3666, loss/object/layer_-1_loss_cls: 0.2847, loss/object/layer_-1_loss_bbox: 2.0282, stats/object/matched_ious: 0.1818, loss: 3.6795, grad_norm: 6.6025
2025-04-29 09:32:10,904 - mmdet3d - INFO - Epoch [5][500/815]	lr: 5.015e-05, eta: 0:14:39, time: 0.763, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3766, loss/object/layer_-1_loss_cls: 0.2971, loss/object/layer_-1_loss_bbox: 2.1441, stats/object/matched_ious: 0.1866, loss: 3.8178, grad_norm: 7.2995
2025-04-29 09:32:49,896 - mmdet3d - INFO - Epoch [5][550/815]	lr: 5.015e-05, eta: 0:14:00, time: 0.780, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3636, loss/object/layer_-1_loss_cls: 0.2849, loss/object/layer_-1_loss_bbox: 2.1562, stats/object/matched_ious: 0.1785, loss: 3.8048, grad_norm: 7.0862
2025-04-29 09:33:27,062 - mmdet3d - INFO - Epoch [5][600/815]	lr: 5.015e-05, eta: 0:13:21, time: 0.743, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3270, loss/object/layer_-1_loss_cls: 0.2826, loss/object/layer_-1_loss_bbox: 2.1918, stats/object/matched_ious: 0.1805, loss: 3.8014, grad_norm: 6.7876
2025-04-29 09:34:03,604 - mmdet3d - INFO - Epoch [5][650/815]	lr: 5.015e-05, eta: 0:12:41, time: 0.731, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3106, loss/object/layer_-1_loss_cls: 0.2786, loss/object/layer_-1_loss_bbox: 2.0295, stats/object/matched_ious: 0.1920, loss: 3.6187, grad_norm: 6.8247
2025-04-29 09:34:39,831 - mmdet3d - INFO - Epoch [5][700/815]	lr: 5.015e-05, eta: 0:12:02, time: 0.725, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3120, loss/object/layer_-1_loss_cls: 0.2775, loss/object/layer_-1_loss_bbox: 1.9820, stats/object/matched_ious: 0.1903, loss: 3.5715, grad_norm: 6.9048
2025-04-29 09:35:18,330 - mmdet3d - INFO - Epoch [5][750/815]	lr: 5.015e-05, eta: 0:11:23, time: 0.770, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3148, loss/object/layer_-1_loss_cls: 0.2810, loss/object/layer_-1_loss_bbox: 2.2015, stats/object/matched_ious: 0.1906, loss: 3.7972, grad_norm: 7.2596
2025-04-29 09:35:57,990 - mmdet3d - INFO - Epoch [5][800/815]	lr: 5.015e-05, eta: 0:10:44, time: 0.793, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.2508, loss/object/layer_-1_loss_cls: 0.2680, loss/object/layer_-1_loss_bbox: 2.0252, stats/object/matched_ious: 0.1908, loss: 3.5440, grad_norm: 7.0816
2025-04-29 09:36:09,606 - mmdet3d - INFO - Saving checkpoint at 5 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.2 task/s, elapsed: 6s, ETA:   508s[  ] 2/81, 0.3 task/s, elapsed: 6s, ETA:   251s[  ] 3/81, 0.5 task/s, elapsed: 7s, ETA:   171s[  ] 4/81, 0.6 task/s, elapsed: 7s, ETA:   127s[  ] 5/81, 0.7 task/s, elapsed: 7s, ETA:   105s[  ] 6/81, 0.9 task/s, elapsed: 7s, ETA:    86s[  ] 7/81, 1.0 task/s, elapsed: 7s, ETA:    76s[  ] 8/81, 1.1 task/s, elapsed: 7s, ETA:    66s[  ] 9/81, 1.1 task/s, elapsed: 8s, ETA:    63s[  ] 10/81, 1.3 task/s, elapsed: 8s, ETA:    56s[  ] 11/81, 1.4 task/s, elapsed: 8s, ETA:    52s[  ] 12/81, 1.5 task/s, elapsed: 8s, ETA:    47s[  ] 13/81, 1.5 task/s, elapsed: 8s, ETA:    44s[  ] 14/81, 1.7 task/s, elapsed: 8s, ETA:    40s[  ] 15/81, 1.7 task/s, elapsed: 9s, ETA:    38s[  ] 16/81, 1.8 task/s, elapsed: 9s, ETA:    35s[  ] 17/81, 1.9 task/s, elapsed: 9s, ETA:    34s[  ] 18/81, 2.0 task/s, elapsed: 9s, ETA:    31s[  ] 19/81, 2.0 task/s, elapsed: 10s, ETA:    31s[  ] 20/81, 2.1 task/s, elapsed: 10s, ETA:    29s[  ] 21/81, 2.1 task/s, elapsed: 10s, ETA:    28s[  ] 22/81, 2.2 task/s, elapsed: 10s, ETA:    26s[  ] 23/81, 2.3 task/s, elapsed: 10s, ETA:    25s[  ] 24/81, 2.4 task/s, elapsed: 10s, ETA:    24s[  ] 25/81, 2.4 task/s, elapsed: 10s, ETA:    23s[  ] 26/81, 2.5 task/s, elapsed: 10s, ETA:    22s[  ] 27/81, 2.5 task/s, elapsed: 11s, ETA:    21s[  ] 28/81, 2.6 task/s, elapsed: 11s, ETA:    20s[  ] 29/81, 2.6 task/s, elapsed: 11s, ETA:    20s[  ] 30/81, 2.7 task/s, elapsed: 11s, ETA:    19s[  ] 31/81, 2.7 task/s, elapsed: 11s, ETA:    18s[  ] 32/81, 2.8 task/s, elapsed: 11s, ETA:    17s[  ] 33/81, 2.8 task/s, elapsed: 12s, ETA:    17s[  ] 34/81, 2.9 task/s, elapsed: 12s, ETA:    16s[  ] 35/81, 2.9 task/s, elapsed: 12s, ETA:    16s[  ] 36/81, 3.0 task/s, elapsed: 12s, ETA:    15s[  ] 37/81, 3.0 task/s, elapsed: 12s, ETA:    15s[  ] 38/81, 3.1 task/s, elapsed: 12s, ETA:    14s[  ] 39/81, 3.1 task/s, elapsed: 13s, ETA:    14s[  ] 40/81, 3.1 task/s, elapsed: 13s, ETA:    13s[> ] 41/81, 3.2 task/s, elapsed: 13s, ETA:    13s[> ] 42/81, 3.2 task/s, elapsed: 13s, ETA:    12s[> ] 43/81, 3.2 task/s, elapsed: 13s, ETA:    12s[> ] 44/81, 3.3 task/s, elapsed: 13s, ETA:    11s[> ] 45/81, 3.3 task/s, elapsed: 14s, ETA:    11s[> ] 46/81, 3.4 task/s, elapsed: 14s, ETA:    10s[> ] 47/81, 3.4 task/s, elapsed: 14s, ETA:    10s[> ] 48/81, 3.5 task/s, elapsed: 14s, ETA:     9s[> ] 49/81, 3.4 task/s, elapsed: 14s, ETA:     9s[> ] 50/81, 3.5 task/s, elapsed: 14s, ETA:     9s[> ] 51/81, 3.5 task/s, elapsed: 15s, ETA:     9s[> ] 52/81, 3.6 task/s, elapsed: 15s, ETA:     8s[> ] 53/81, 3.6 task/s, elapsed: 15s, ETA:     8s[> ] 54/81, 3.6 task/s, elapsed: 15s, ETA:     7s[> ] 55/81, 3.6 task/s, elapsed: 15s, ETA:     7s[> ] 56/81, 3.7 task/s, elapsed: 15s, ETA:     7s[> ] 57/81, 3.7 task/s, elapsed: 15s, ETA:     6s[> ] 58/81, 3.8 task/s, elapsed: 15s, ETA:     6s[> ] 59/81, 3.7 task/s, elapsed: 16s, ETA:     6s[> ] 60/81, 3.7 task/s, elapsed: 16s, ETA:     6s[> ] 61/81, 3.8 task/s, elapsed: 16s, ETA:     5s[> ] 62/81, 3.8 task/s, elapsed: 16s, ETA:     5s[> ] 63/81, 3.8 task/s, elapsed: 16s, ETA:     5s[> ] 64/81, 3.9 task/s, elapsed: 16s, ETA:     4s[> ] 65/81, 3.9 task/s, elapsed: 17s, ETA:     4s[> ] 66/81, 3.9 task/s, elapsed: 17s, ETA:     4s[> ] 67/81, 4.0 task/s, elapsed: 17s, ETA:     4s[> ] 68/81, 4.0 task/s, elapsed: 17s, ETA:     3s[> ] 69/81, 3.9 task/s, elapsed: 18s, ETA:     3s[> ] 70/81, 4.0 task/s, elapsed: 18s, ETA:     3s[> ] 71/81, 4.0 task/s, elapsed: 18s, ETA:     3s[> ] 72/81, 4.0 task/s, elapsed: 18s, ETA:     2s[> ] 73/81, 4.0 task/s, elapsed: 18s, ETA:     2s[> ] 74/81, 4.1 task/s, elapsed: 18s, ETA:     2s[> ] 75/81, 4.1 task/s, elapsed: 18s, ETA:     1s[> ] 76/81, 4.1 task/s, elapsed: 18s, ETA:     1s[> ] 77/81, 4.1 task/s, elapsed: 19s, ETA:     1s[> ] 78/81, 4.2 task/s, elapsed: 19s, ETA:     1s[> ] 79/81, 4.1 task/s, elapsed: 19s, ETA:     0s[> ] 80/81, 4.2 task/s, elapsed: 19s, ETA:     0s[>>] 81/81, 4.2 task/s, elapsed: 20s, ETA:     0s[>>] 82/81, 4.2 task/s, elapsed: 20s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 34.1 task/s, elapsed: 0s, ETA:     2s[  ] 2/81, 33.7 task/s, elapsed: 0s, ETA:     2s[  ] 3/81, 34.5 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 35.0 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 35.3 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 35.3 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 35.4 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 35.6 task/s, elapsed: 0s, ETA:     2s[  ] 17/81, 35.7 task/s, elapsed: 0s, ETA:     2s[  ] 18/81, 35.7 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 35.6 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 35.7 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 35.7 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 35.6 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 35.5 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 35.5 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 35.4 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 35.5 task/s, elapsed: 1s, ETA:     1s[  ] 29/81, 35.5 task/s, elapsed: 1s, ETA:     1s[  ] 30/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 31/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 32/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 33/81, 35.3 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 35.3 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 35.2 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 35.2 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 35.2 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 35.2 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 49/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 50/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 51/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 52/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 53/81, 34.9 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 34.9 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 34.9 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 65/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 66/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 31.5 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 78/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 79/81, 31.6 task/s, elapsed: 2s, ETA:     0s[> ] 80/81, 31.6 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.4 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmp5ccpdhch/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8c82e47310>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 51% 41/81 [00:00<00:00, 409.11it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0490
mATE: 0.8889
mASE: 0.8073
mAOE: 1.0979
mAVE: 0.8364
mAAE: 0.7468
NDS: 0.0966
Eval time: 2.7s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.266 	0.710 	0.314 	1.370 	0.340 	0.182 
truck               	0.015 	0.607 	0.343 	0.945 	0.782 	0.115 
bus                 	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.209 	0.571 	0.416 	1.566 	0.569 	0.678 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.000 	1.000 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-29 09:36:42,572 - mmdet3d - INFO - Epoch(val) [5][41]	object/car_ap_dist_0.5: 0.0268, object/car_ap_dist_1.0: 0.1746, object/car_ap_dist_2.0: 0.4025, object/car_ap_dist_4.0: 0.4600, object/car_trans_err: 0.7105, object/car_scale_err: 0.3143, object/car_orient_err: 1.3698, object/car_vel_err: 0.3402, object/car_attr_err: 0.1816, object/mATE: 0.8889, object/mASE: 0.8073, object/mAOE: 1.0979, object/mAVE: 0.8364, object/mAAE: 0.7468, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0101, object/truck_ap_dist_2.0: 0.0250, object/truck_ap_dist_4.0: 0.0258, object/truck_trans_err: 0.6070, object/truck_scale_err: 0.3431, object/truck_orient_err: 0.9450, object/truck_vel_err: 0.7821, object/truck_attr_err: 0.1153, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0000, object/bus_scale_err: 1.0000, object/bus_orient_err: 1.0000, object/bus_vel_err: 1.0000, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1080, object/pedestrian_ap_dist_1.0: 0.1746, object/pedestrian_ap_dist_2.0: 0.2330, object/pedestrian_ap_dist_4.0: 0.3204, object/pedestrian_trans_err: 0.5711, object/pedestrian_scale_err: 0.4160, object/pedestrian_orient_err: 1.5659, object/pedestrian_vel_err: 0.5693, object/pedestrian_attr_err: 0.6776, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.0000, object/traffic_cone_scale_err: 1.0000, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0966, object/map: 0.0490
2025-04-29 09:37:24,077 - mmdet3d - INFO - Epoch [6][50/815]	lr: 1.358e-05, eta: 0:09:52, time: 0.829, data_time: 0.101, memory: 10439, loss/object/loss_heatmap: 1.2104, loss/object/layer_-1_loss_cls: 0.2748, loss/object/layer_-1_loss_bbox: 1.8316, stats/object/matched_ious: 0.2141, loss: 3.3169, grad_norm: 6.8479
2025-04-29 09:38:03,295 - mmdet3d - INFO - Epoch [6][100/815]	lr: 1.358e-05, eta: 0:09:14, time: 0.784, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.3031, loss/object/layer_-1_loss_cls: 0.2785, loss/object/layer_-1_loss_bbox: 1.9517, stats/object/matched_ious: 0.2038, loss: 3.5333, grad_norm: 7.1749
2025-04-29 09:38:41,881 - mmdet3d - INFO - Epoch [6][150/815]	lr: 1.358e-05, eta: 0:08:35, time: 0.772, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2787, loss/object/layer_-1_loss_cls: 0.2682, loss/object/layer_-1_loss_bbox: 2.0682, stats/object/matched_ious: 0.1944, loss: 3.6150, grad_norm: 6.6647
2025-04-29 09:39:19,243 - mmdet3d - INFO - Epoch [6][200/815]	lr: 1.358e-05, eta: 0:07:56, time: 0.747, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2869, loss/object/layer_-1_loss_cls: 0.2737, loss/object/layer_-1_loss_bbox: 2.0069, stats/object/matched_ious: 0.2032, loss: 3.5675, grad_norm: 7.0031
2025-04-29 09:39:56,784 - mmdet3d - INFO - Epoch [6][250/815]	lr: 1.358e-05, eta: 0:07:17, time: 0.751, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2664, loss/object/layer_-1_loss_cls: 0.2629, loss/object/layer_-1_loss_bbox: 2.0073, stats/object/matched_ious: 0.1995, loss: 3.5366, grad_norm: 6.8477
2025-04-29 09:40:33,429 - mmdet3d - INFO - Epoch [6][300/815]	lr: 1.358e-05, eta: 0:06:38, time: 0.733, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2067, loss/object/layer_-1_loss_cls: 0.2661, loss/object/layer_-1_loss_bbox: 2.0422, stats/object/matched_ious: 0.2085, loss: 3.5151, grad_norm: 6.7159
2025-04-29 09:41:12,315 - mmdet3d - INFO - Epoch [6][350/815]	lr: 1.358e-05, eta: 0:05:59, time: 0.778, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.1913, loss/object/layer_-1_loss_cls: 0.2521, loss/object/layer_-1_loss_bbox: 2.0823, stats/object/matched_ious: 0.1855, loss: 3.5256, grad_norm: 6.1393
2025-04-29 09:41:50,286 - mmdet3d - INFO - Epoch [6][400/815]	lr: 1.358e-05, eta: 0:05:21, time: 0.759, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.2638, loss/object/layer_-1_loss_cls: 0.2630, loss/object/layer_-1_loss_bbox: 1.9825, stats/object/matched_ious: 0.1968, loss: 3.5093, grad_norm: 6.7212
2025-04-29 09:42:28,743 - mmdet3d - INFO - Epoch [6][450/815]	lr: 1.358e-05, eta: 0:04:42, time: 0.769, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.2553, loss/object/layer_-1_loss_cls: 0.2664, loss/object/layer_-1_loss_bbox: 1.9720, stats/object/matched_ious: 0.1953, loss: 3.4937, grad_norm: 7.1158
2025-04-29 09:43:08,452 - mmdet3d - INFO - Epoch [6][500/815]	lr: 1.358e-05, eta: 0:04:03, time: 0.794, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.2483, loss/object/layer_-1_loss_cls: 0.2671, loss/object/layer_-1_loss_bbox: 2.0921, stats/object/matched_ious: 0.2015, loss: 3.6075, grad_norm: 6.7775
2025-04-29 09:43:45,235 - mmdet3d - INFO - Epoch [6][550/815]	lr: 1.358e-05, eta: 0:03:24, time: 0.736, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.2243, loss/object/layer_-1_loss_cls: 0.2635, loss/object/layer_-1_loss_bbox: 2.0156, stats/object/matched_ious: 0.2109, loss: 3.5035, grad_norm: 6.7697
2025-04-29 09:44:24,046 - mmdet3d - INFO - Epoch [6][600/815]	lr: 1.358e-05, eta: 0:02:46, time: 0.776, data_time: 0.012, memory: 10439, loss/object/loss_heatmap: 1.2862, loss/object/layer_-1_loss_cls: 0.2687, loss/object/layer_-1_loss_bbox: 1.9715, stats/object/matched_ious: 0.2032, loss: 3.5264, grad_norm: 7.1307
2025-04-29 09:45:04,120 - mmdet3d - INFO - Epoch [6][650/815]	lr: 1.358e-05, eta: 0:02:07, time: 0.802, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2108, loss/object/layer_-1_loss_cls: 0.2530, loss/object/layer_-1_loss_bbox: 1.8869, stats/object/matched_ious: 0.2025, loss: 3.3506, grad_norm: 6.3321
2025-04-29 09:45:41,566 - mmdet3d - INFO - Epoch [6][700/815]	lr: 1.358e-05, eta: 0:01:28, time: 0.749, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2513, loss/object/layer_-1_loss_cls: 0.2528, loss/object/layer_-1_loss_bbox: 2.0716, stats/object/matched_ious: 0.2007, loss: 3.5757, grad_norm: 6.6462
2025-04-29 09:46:19,364 - mmdet3d - INFO - Epoch [6][750/815]	lr: 1.358e-05, eta: 0:00:50, time: 0.756, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2511, loss/object/layer_-1_loss_cls: 0.2673, loss/object/layer_-1_loss_bbox: 1.8593, stats/object/matched_ious: 0.2131, loss: 3.3778, grad_norm: 7.1555
2025-04-29 09:46:56,001 - mmdet3d - INFO - Epoch [6][800/815]	lr: 1.358e-05, eta: 0:00:11, time: 0.733, data_time: 0.011, memory: 10439, loss/object/loss_heatmap: 1.2391, loss/object/layer_-1_loss_cls: 0.2635, loss/object/layer_-1_loss_bbox: 2.0092, stats/object/matched_ious: 0.2067, loss: 3.5117, grad_norm: 6.8533
2025-04-29 09:47:07,742 - mmdet3d - INFO - Saving checkpoint at 6 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 4s, ETA:   307s[  ] 2/81, 0.5 task/s, elapsed: 4s, ETA:   152s[  ] 3/81, 0.7 task/s, elapsed: 4s, ETA:   105s[  ] 4/81, 1.0 task/s, elapsed: 4s, ETA:    78s[  ] 5/81, 1.2 task/s, elapsed: 4s, ETA:    65s[  ] 6/81, 1.4 task/s, elapsed: 4s, ETA:    54s[  ] 7/81, 1.5 task/s, elapsed: 5s, ETA:    48s[  ] 8/81, 1.8 task/s, elapsed: 5s, ETA:    42s[  ] 9/81, 1.9 task/s, elapsed: 5s, ETA:    39s[  ] 10/81, 2.1 task/s, elapsed: 5s, ETA:    34s[  ] 11/81, 2.0 task/s, elapsed: 6s, ETA:    35s[  ] 12/81, 2.2 task/s, elapsed: 6s, ETA:    32s[  ] 13/81, 2.3 task/s, elapsed: 6s, ETA:    30s[  ] 14/81, 2.4 task/s, elapsed: 6s, ETA:    28s[  ] 15/81, 2.5 task/s, elapsed: 6s, ETA:    27s[  ] 16/81, 2.6 task/s, elapsed: 6s, ETA:    25s[  ] 17/81, 2.7 task/s, elapsed: 6s, ETA:    24s[  ] 18/81, 2.8 task/s, elapsed: 6s, ETA:    22s[  ] 19/81, 2.9 task/s, elapsed: 7s, ETA:    22s[  ] 20/81, 3.0 task/s, elapsed: 7s, ETA:    20s[  ] 21/81, 2.9 task/s, elapsed: 7s, ETA:    20s[  ] 22/81, 3.1 task/s, elapsed: 7s, ETA:    19s[  ] 23/81, 3.1 task/s, elapsed: 7s, ETA:    19s[  ] 24/81, 3.2 task/s, elapsed: 7s, ETA:    18s[  ] 25/81, 3.3 task/s, elapsed: 8s, ETA:    17s[  ] 26/81, 3.4 task/s, elapsed: 8s, ETA:    16s[  ] 27/81, 3.4 task/s, elapsed: 8s, ETA:    16s[  ] 28/81, 3.5 task/s, elapsed: 8s, ETA:    15s[  ] 29/81, 3.5 task/s, elapsed: 8s, ETA:    15s[  ] 30/81, 3.6 task/s, elapsed: 8s, ETA:    14s[  ] 31/81, 3.5 task/s, elapsed: 9s, ETA:    14s[  ] 32/81, 3.6 task/s, elapsed: 9s, ETA:    13s[  ] 33/81, 3.6 task/s, elapsed: 9s, ETA:    13s[  ] 34/81, 3.8 task/s, elapsed: 9s, ETA:    13s[  ] 35/81, 3.8 task/s, elapsed: 9s, ETA:    12s[  ] 36/81, 3.9 task/s, elapsed: 9s, ETA:    12s[  ] 37/81, 3.9 task/s, elapsed: 10s, ETA:    11s[  ] 38/81, 4.0 task/s, elapsed: 10s, ETA:    11s[  ] 39/81, 4.0 task/s, elapsed: 10s, ETA:    11s[  ] 40/81, 4.1 task/s, elapsed: 10s, ETA:    10s[> ] 41/81, 3.9 task/s, elapsed: 10s, ETA:    10s[> ] 42/81, 4.0 task/s, elapsed: 10s, ETA:    10s[> ] 43/81, 4.0 task/s, elapsed: 11s, ETA:     9s[> ] 44/81, 4.1 task/s, elapsed: 11s, ETA:     9s[> ] 45/81, 4.1 task/s, elapsed: 11s, ETA:     9s[> ] 46/81, 4.2 task/s, elapsed: 11s, ETA:     8s[> ] 47/81, 4.2 task/s, elapsed: 11s, ETA:     8s[> ] 48/81, 4.3 task/s, elapsed: 11s, ETA:     8s[> ] 49/81, 4.3 task/s, elapsed: 11s, ETA:     7s[> ] 50/81, 4.4 task/s, elapsed: 11s, ETA:     7s[> ] 51/81, 4.2 task/s, elapsed: 12s, ETA:     7s[> ] 52/81, 4.3 task/s, elapsed: 12s, ETA:     7s[> ] 53/81, 4.3 task/s, elapsed: 12s, ETA:     6s[> ] 54/81, 4.4 task/s, elapsed: 12s, ETA:     6s[> ] 55/81, 4.4 task/s, elapsed: 12s, ETA:     6s[> ] 56/81, 4.5 task/s, elapsed: 12s, ETA:     6s[> ] 57/81, 4.5 task/s, elapsed: 13s, ETA:     5s[> ] 58/81, 4.6 task/s, elapsed: 13s, ETA:     5s[> ] 59/81, 4.5 task/s, elapsed: 13s, ETA:     5s[> ] 60/81, 4.6 task/s, elapsed: 13s, ETA:     5s[> ] 61/81, 4.5 task/s, elapsed: 14s, ETA:     4s[> ] 62/81, 4.5 task/s, elapsed: 14s, ETA:     4s[> ] 63/81, 4.5 task/s, elapsed: 14s, ETA:     4s[> ] 64/81, 4.6 task/s, elapsed: 14s, ETA:     4s[> ] 65/81, 4.6 task/s, elapsed: 14s, ETA:     3s[> ] 66/81, 4.7 task/s, elapsed: 14s, ETA:     3s[> ] 67/81, 4.7 task/s, elapsed: 14s, ETA:     3s[> ] 68/81, 4.7 task/s, elapsed: 14s, ETA:     3s[> ] 69/81, 4.7 task/s, elapsed: 15s, ETA:     3s[> ] 70/81, 4.8 task/s, elapsed: 15s, ETA:     2s[> ] 71/81, 4.7 task/s, elapsed: 15s, ETA:     2s[> ] 72/81, 4.7 task/s, elapsed: 15s, ETA:     2s[> ] 73/81, 4.7 task/s, elapsed: 15s, ETA:     2s[> ] 74/81, 4.8 task/s, elapsed: 15s, ETA:     1s[> ] 75/81, 4.8 task/s, elapsed: 16s, ETA:     1s[> ] 76/81, 4.8 task/s, elapsed: 16s, ETA:     1s[> ] 77/81, 4.8 task/s, elapsed: 16s, ETA:     1s[> ] 78/81, 4.9 task/s, elapsed: 16s, ETA:     1s[> ] 79/81, 4.9 task/s, elapsed: 16s, ETA:     0s[> ] 80/81, 4.9 task/s, elapsed: 16s, ETA:     0s[>>] 81/81, 4.8 task/s, elapsed: 17s, ETA:     0s[>>] 82/81, 4.9 task/s, elapsed: 17s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 33.6 task/s, elapsed: 0s, ETA:     2s[  ] 2/81, 34.8 task/s, elapsed: 0s, ETA:     2s[  ] 3/81, 35.5 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 35.7 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 35.8 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 35.8 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 35.8 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 35.8 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 35.8 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 35.9 task/s, elapsed: 0s, ETA:     2s[  ] 17/81, 35.8 task/s, elapsed: 0s, ETA:     2s[  ] 18/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 35.7 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 35.7 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 35.7 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 35.8 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 35.8 task/s, elapsed: 1s, ETA:     1s[  ] 29/81, 35.8 task/s, elapsed: 1s, ETA:     1s[  ] 30/81, 35.7 task/s, elapsed: 1s, ETA:     1s[  ] 31/81, 35.6 task/s, elapsed: 1s, ETA:     1s[  ] 32/81, 35.6 task/s, elapsed: 1s, ETA:     1s[  ] 33/81, 35.5 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 35.5 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 35.4 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 35.3 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 35.3 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 35.3 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 35.3 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 35.2 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 35.2 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 35.2 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 35.1 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 49/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 50/81, 35.0 task/s, elapsed: 1s, ETA:     1s[> ] 51/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 52/81, 34.9 task/s, elapsed: 1s, ETA:     1s[> ] 53/81, 34.9 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 34.8 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 34.7 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 65/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 66/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 34.7 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 78/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 79/81, 34.8 task/s, elapsed: 2s, ETA:     0s[> ] 80/81, 34.8 task/s, elapsed: 2s, ETA:     0s[>>] 81/81, 34.8 task/s, elapsed: 2s, ETA:     0s
Results writes to /tmp/tmpgwwud2gb/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8c80cb9ac0>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 54% 44/81 [00:00<00:00, 437.43it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0506
mATE: 0.8957
mASE: 0.7715
mAOE: 1.1201
mAVE: 0.8453
mAAE: 0.7102
NDS: 0.1030
Eval time: 2.7s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.280 	0.704 	0.236 	1.379 	0.316 	0.177 
truck               	0.002 	0.657 	0.399 	0.614 	0.615 	0.081 
bus                 	0.000 	1.027 	0.657 	1.538 	1.341 	0.799 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.224 	0.569 	0.423 	1.550 	0.491 	0.625 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.000 	1.000 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-29 09:47:37,507 - mmdet3d - INFO - Epoch(val) [6][41]	object/car_ap_dist_0.5: 0.0305, object/car_ap_dist_1.0: 0.1896, object/car_ap_dist_2.0: 0.4113, object/car_ap_dist_4.0: 0.4886, object/car_trans_err: 0.7036, object/car_scale_err: 0.2363, object/car_orient_err: 1.3789, object/car_vel_err: 0.3157, object/car_attr_err: 0.1772, object/mATE: 0.8957, object/mASE: 0.7715, object/mAOE: 1.1201, object/mAVE: 0.8453, object/mAAE: 0.7102, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0002, object/truck_ap_dist_2.0: 0.0021, object/truck_ap_dist_4.0: 0.0054, object/truck_trans_err: 0.6572, object/truck_scale_err: 0.3987, object/truck_orient_err: 0.6141, object/truck_vel_err: 0.6149, object/truck_attr_err: 0.0806, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0275, object/bus_scale_err: 0.6571, object/bus_orient_err: 1.5377, object/bus_vel_err: 1.3410, object/bus_attr_err: 0.7985, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1237, object/pedestrian_ap_dist_1.0: 0.1886, object/pedestrian_ap_dist_2.0: 0.2481, object/pedestrian_ap_dist_4.0: 0.3376, object/pedestrian_trans_err: 0.5691, object/pedestrian_scale_err: 0.4227, object/pedestrian_orient_err: 1.5500, object/pedestrian_vel_err: 0.4910, object/pedestrian_attr_err: 0.6255, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.0000, object/traffic_cone_scale_err: 1.0000, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.1030, object/map: 0.0506
