2025-04-25 08:28:53,332 - mmdet3d - INFO - Config:
seed = 0
deterministic = False
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
load_from = None
resume_from = None
cudnn_benchmark = False
fp16 = dict(loss_scale=dict(growth_interval=2000))
max_epochs = 6
runner = dict(type='CustomEpochBasedRunner', max_epochs=6)
dataset_type = 'NuScenesDataset'
dataset_root = 'data/nuscenes/'
gt_paste_stop_epoch = -1
reduce_beams = 32
load_dim = 5
use_dim = 5
load_augmented = None
point_cloud_range = [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]
voxel_size = [0.075, 0.075, 0.2]
image_size = [256, 704]
augment2d = dict(
    resize=[[0.38, 0.55], [0.48, 0.48]],
    rotate=[-5.4, 5.4],
    gridmask=dict(prob=0.0, fixed_prob=True))
augment3d = dict(
    scale=[0.9, 1.1], rotate=[-0.78539816, 0.78539816], translate=0.5)
object_classes = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
map_classes = [
    'drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area',
    'divider'
]
input_modality = dict(
    use_lidar=True,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=False)
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=0,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadRadarPointsMultiSweeps',
        load_dim=18,
        sweeps_num=6,
        use_dim=[
            0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
            47, 48, 49, 50, 51, 52, 53, 54, 55, 56
        ],
        max_num=2500,
        compensate_velocity=True,
        filtering='none',
        normalize=False),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ObjectPaste',
        stop_epoch=-1,
        db_sampler=dict(
            dataset_root='data/nuscenes/',
            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(
                    car=5,
                    truck=5,
                    bus=5,
                    trailer=5,
                    construction_vehicle=5,
                    traffic_cone=5,
                    barrier=5,
                    motorcycle=5,
                    bicycle=5,
                    pedestrian=5)),
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            sample_groups=dict(
                car=2,
                truck=3,
                construction_vehicle=7,
                bus=4,
                trailer=6,
                barrier=2,
                motorcycle=6,
                bicycle=6,
                pedestrian=2,
                traffic_cone=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32))),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.38, 0.55],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[-5.4, 5.4],
        rand_flip=True,
        is_train=True),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[0.9, 1.1],
        rot_lim=[-0.78539816, 0.78539816],
        trans_lim=0.5,
        is_train=True),
    dict(type='RandomFlip3D'),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='GridMask',
        use_h=True,
        use_w=True,
        max_epoch=6,
        rotate=1,
        offset=False,
        ratio=0.5,
        mode=1,
        prob=0.0,
        fixed_prob=True),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadRadarPointsMultiSweeps',
        load_dim=18,
        sweeps_num=6,
        use_dim=[
            0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
            47, 48, 49, 50, 51, 52, 53, 54, 55, 56
        ],
        max_num=2500,
        compensate_velocity=True,
        filtering='none',
        normalize=False),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.48, 0.48],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[0.0, 0.0],
        rand_flip=False,
        is_train=False),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[1.0, 1.0],
        rot_lim=[0.0, 0.0],
        trans_lim=0.0,
        is_train=False),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='DefaultFormatBundle3D',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=4,
    train=dict(
        type='CBGSDataset',
        dataset=dict(
            type='NuScenesDataset',
            dataset_root='data/nuscenes/',
            ann_file='data/nuscenes/nuscenes_infos_train.pkl',
            pipeline=[
                dict(type='LoadMultiViewImageFromFiles', to_float32=True),
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    load_augmented=None),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=0,
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    pad_empty_sweeps=True,
                    remove_close=True,
                    load_augmented=None),
                dict(
                    type='LoadRadarPointsMultiSweeps',
                    load_dim=18,
                    sweeps_num=6,
                    use_dim=[
                        0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                        55, 56
                    ],
                    max_num=2500,
                    compensate_velocity=True,
                    filtering='none',
                    normalize=False),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True,
                    with_attr_label=False),
                dict(
                    type='ObjectPaste',
                    stop_epoch=-1,
                    db_sampler=dict(
                        dataset_root='data/nuscenes/',
                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                car=5,
                                truck=5,
                                bus=5,
                                trailer=5,
                                construction_vehicle=5,
                                traffic_cone=5,
                                barrier=5,
                                motorcycle=5,
                                bicycle=5,
                                pedestrian=5)),
                        classes=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        sample_groups=dict(
                            car=2,
                            truck=3,
                            construction_vehicle=7,
                            bus=4,
                            trailer=6,
                            barrier=2,
                            motorcycle=6,
                            bicycle=6,
                            pedestrian=2,
                            traffic_cone=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=5,
                            reduce_beams=32))),
                dict(
                    type='ImageAug3D',
                    final_dim=[256, 704],
                    resize_lim=[0.38, 0.55],
                    bot_pct_lim=[0.0, 0.0],
                    rot_lim=[-5.4, 5.4],
                    rand_flip=True,
                    is_train=True),
                dict(
                    type='GlobalRotScaleTrans',
                    resize_lim=[0.9, 1.1],
                    rot_lim=[-0.78539816, 0.78539816],
                    trans_lim=0.5,
                    is_train=True),
                dict(type='RandomFlip3D'),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectNameFilter',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='ImageNormalize',
                    mean=[0.485, 0.456, 0.406],
                    std=[0.229, 0.224, 0.225]),
                dict(
                    type='GridMask',
                    use_h=True,
                    use_w=True,
                    max_epoch=6,
                    rotate=1,
                    offset=False,
                    ratio=0.5,
                    mode=1,
                    prob=0.0,
                    fixed_prob=True),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='Collect3D',
                    keys=[
                        'img', 'points', 'radar', 'gt_bboxes_3d',
                        'gt_labels_3d'
                    ],
                    meta_keys=[
                        'camera_intrinsics', 'camera2ego', 'lidar2ego',
                        'lidar2camera', 'lidar2image', 'camera2lidar',
                        'img_aug_matrix', 'lidar_aug_matrix'
                    ]),
                dict(type='GTDepth', keyframe_only=True)
            ],
            object_classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            map_classes=[
                'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
                'carpark_area', 'divider'
            ],
            modality=dict(
                use_lidar=True,
                use_camera=True,
                use_radar=False,
                use_map=False,
                use_external=False),
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        dataset_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadRadarPointsMultiSweeps',
                load_dim=18,
                sweeps_num=6,
                use_dim=[
                    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
                ],
                max_num=2500,
                compensate_velocity=True,
                filtering='none',
                normalize=False),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='DefaultFormatBundle3D',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area', 'divider'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        dataset_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadRadarPointsMultiSweeps',
                load_dim=18,
                sweeps_num=6,
                use_dim=[
                    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
                ],
                max_num=2500,
                compensate_velocity=True,
                filtering='none',
                normalize=False),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='DefaultFormatBundle3D',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area', 'divider'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            load_augmented=None),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=9,
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            pad_empty_sweeps=True,
            remove_close=True,
            load_augmented=None),
        dict(
            type='LoadRadarPointsMultiSweeps',
            load_dim=18,
            sweeps_num=6,
            use_dim=[
                0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
                29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
                45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
            ],
            max_num=2500,
            compensate_velocity=True,
            filtering='none',
            normalize=False),
        dict(
            type='LoadAnnotations3D',
            with_bbox_3d=True,
            with_label_3d=True,
            with_attr_label=False),
        dict(
            type='ImageAug3D',
            final_dim=[256, 704],
            resize_lim=[0.48, 0.48],
            bot_pct_lim=[0.0, 0.0],
            rot_lim=[0.0, 0.0],
            rand_flip=False,
            is_train=False),
        dict(
            type='GlobalRotScaleTrans',
            resize_lim=[1.0, 1.0],
            rot_lim=[0.0, 0.0],
            trans_lim=0.0,
            is_train=False),
        dict(
            type='PointsRangeFilter',
            point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
        dict(
            type='ImageNormalize',
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]),
        dict(
            type='DefaultFormatBundle3D',
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ]),
        dict(
            type='Collect3D',
            keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
            meta_keys=[
                'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
                'lidar2image', 'camera2lidar', 'img_aug_matrix',
                'lidar_aug_matrix'
            ]),
        dict(type='GTDepth', keyframe_only=True)
    ])
radar_sweeps = 6
radar_max_points = 2500
radar_use_dims = [
    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
    51, 52, 53, 54, 55, 56
]
radar_compensate_velocity = True
radar_filtering = 'none'
radar_voxel_size = [0.8, 0.8, 8]
radar_jitter = 0
radar_normalize = False
model = dict(
    type='BEVFusion',
    encoders=dict(
        camera=dict(
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='DepthLSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-54.0, 54.0, 0.3],
                ybound=[-54.0, 54.0, 0.3],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2),
            backbone=dict(
                type='MoENetwork',
                num_experts=2,
                in_channels=3,
                experts_cfg=[
                    dict(
                        type='SwinTransformer',
                        embed_dims=96,
                        depths=[2, 2, 6, 2],
                        num_heads=[3, 6, 12, 24],
                        window_size=7,
                        mlp_ratio=4,
                        qkv_bias=True,
                        qk_scale=None,
                        drop_rate=0.0,
                        attn_drop_rate=0.0,
                        drop_path_rate=0.2,
                        patch_norm=True,
                        out_indices=[1, 2, 3],
                        with_cp=False,
                        convert_weights=True,
                        init_cfg=dict(
                            type='Pretrained',
                            checkpoint=
                            'pretrained/swint-nuimages-pretrained.pth')),
                    dict(
                        type='ResNet',
                        depth=50,
                        num_stages=4,
                        out_indices=[1, 2, 3],
                        norm_cfg=dict(type='BN2d', requires_grad=True),
                        norm_eval=False,
                        init_cfg=dict(
                            type='Pretrained',
                            checkpoint='torchvision://resnet50'))
                ],
                router=dict(in_channels=3, num_experts=2))),
        lidar=dict(
            voxelize=dict(
                max_num_points=10,
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                voxel_size=[0.075, 0.075, 0.2],
                max_voxels=[120000, 160000]),
            backbone=dict(
                type='SparseEncoder',
                in_channels=5,
                sparse_shape=[1440, 1440, 41],
                output_channels=128,
                order=['conv', 'norm', 'act'],
                encoder_channels=[[16, 16, 32], [32, 32, 64], [64, 64, 128],
                                  [128, 128]],
                encoder_paddings=[[0, 0, 1], [0, 0, 1], [0, 0, [1, 1, 0]],
                                  [0, 0]],
                block_type='basicblock'))),
    fuser=dict(type='ConvFuser', in_channels=[80, 256], out_channels=256),
    heads=dict(
        map=None,
        object=dict(
            type='TransFusionHead',
            num_proposals=200,
            auxiliary=True,
            in_channels=512,
            hidden_channel=128,
            num_classes=10,
            num_decoder_layers=1,
            num_heads=8,
            nms_kernel_size=3,
            ffn_channel=256,
            dropout=0.1,
            bn_momentum=0.1,
            activation='relu',
            train_cfg=dict(
                dataset='nuScenes',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                grid_size=[1440, 1440, 41],
                voxel_size=[0.075, 0.075, 0.2],
                out_size_factor=8,
                gaussian_overlap=0.1,
                min_radius=2,
                pos_weight=-1,
                code_weights=[
                    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2
                ],
                assigner=dict(
                    type='HungarianAssigner3D',
                    iou_calculator=dict(
                        type='BboxOverlaps3D', coordinate='lidar'),
                    cls_cost=dict(
                        type='FocalLossCost',
                        gamma=2.0,
                        alpha=0.25,
                        weight=0.15),
                    reg_cost=dict(type='BBoxBEVL1Cost', weight=0.25),
                    iou_cost=dict(type='IoU3DCost', weight=0.25))),
            test_cfg=dict(
                dataset='nuScenes',
                grid_size=[1440, 1440, 41],
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                pc_range=[-54.0, -54.0],
                nms_type=None),
            common_heads=dict(
                center=[2, 2],
                height=[1, 2],
                dim=[3, 2],
                rot=[2, 2],
                vel=[2, 2]),
            bbox_coder=dict(
                type='TransFusionBBoxCoder',
                pc_range=[-54.0, -54.0],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                score_threshold=0.0,
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                code_size=10),
            loss_cls=dict(
                type='FocalLoss',
                use_sigmoid=True,
                gamma=2.0,
                alpha=0.25,
                reduction='mean',
                loss_weight=1.0),
            loss_heatmap=dict(
                type='GaussianFocalLoss', reduction='mean', loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', reduction='mean',
                           loss_weight=0.25))),
    decoder=dict(
        backbone=dict(
            type='SECOND',
            in_channels=256,
            out_channels=[128, 256],
            layer_nums=[5, 5],
            layer_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            conv_cfg=dict(type='Conv2d', bias=False)),
        neck=dict(
            type='SECONDFPN',
            in_channels=[128, 256],
            out_channels=[256, 256],
            upsample_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            upsample_cfg=dict(type='deconv', bias=False),
            use_conv_for_no_stride=True)))
optimizer = dict(type='AdamW', lr=0.0002, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.33333333,
    min_lr_ratio=0.001)
momentum_config = dict(policy='cyclic')
run_dir = 'train_result'

2025-04-25 08:28:53,333 - mmdet3d - INFO - Set random seed to 0, deterministic mode: False
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 3068 pedestrian database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 4082 car database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 773 traffic_cone database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 147 bicycle database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 1851 barrier database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 451 truck database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 337 bus database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 174 construction_vehicle database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 57 movable_object.pushable_pullable database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 179 motorcycle database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 13 movable_object.debris database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 59 trailer database infos
2025-04-25 08:28:53,823 - mmdet3d - INFO - load 25 human.pedestrian.personal_mobility database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - After filter database:
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 2395 pedestrian database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 2287 car database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 381 traffic_cone database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 108 bicycle database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 1442 barrier database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 381 truck database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 275 bus database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 155 construction_vehicle database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 57 movable_object.pushable_pullable database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 124 motorcycle database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 13 movable_object.debris database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 57 trailer database infos
2025-04-25 08:28:53,844 - mmdet3d - INFO - load 25 human.pedestrian.personal_mobility database infos
/opt/conda/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1639180588308/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/opt/conda/lib/python3.8/site-packages/mmcv/runner/base_module.py:127: UserWarning: init_weights of MoENetwork has been called more than once.
  warnings.warn(f'init_weights of {self.__class__.__name__} has '
2025-04-25 08:28:54,542 - mmdet3d - INFO - Model:
BEVFusion(
  (encoders): ModuleDict(
    (camera): ModuleDict(
      (backbone): MoENetwork(
        (moe): MoE(
          (experts): ModuleList(
            (0): SwinTransformer(
              (patch_embed): PatchEmbed(
                (adap_padding): AdaptivePadding()
                (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
                (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
              )
              (drop_after_pos): Dropout(p=0.0, inplace=False)
              (stages): ModuleList(
                (0): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=96, out_features=288, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=96, out_features=96, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=96, out_features=384, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=384, out_features=96, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=96, out_features=288, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=96, out_features=96, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=96, out_features=384, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=384, out_features=96, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (downsample): PatchMerging(
                    (adap_padding): AdaptivePadding()
                    (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
                    (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                    (reduction): Linear(in_features=384, out_features=192, bias=False)
                  )
                )
                (1): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=192, out_features=576, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=192, out_features=192, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=192, out_features=768, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=768, out_features=192, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=192, out_features=576, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=192, out_features=192, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=192, out_features=768, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=768, out_features=192, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (downsample): PatchMerging(
                    (adap_padding): AdaptivePadding()
                    (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
                    (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                    (reduction): Linear(in_features=768, out_features=384, bias=False)
                  )
                )
                (2): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (2): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (3): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (4): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (5): SwinBlock(
                      (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=384, out_features=1152, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=384, out_features=384, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=384, out_features=1536, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=1536, out_features=384, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                  (downsample): PatchMerging(
                    (adap_padding): AdaptivePadding()
                    (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
                    (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
                    (reduction): Linear(in_features=1536, out_features=768, bias=False)
                  )
                )
                (3): SwinBlockSequence(
                  (blocks): ModuleList(
                    (0): SwinBlock(
                      (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=768, out_features=2304, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=768, out_features=768, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=768, out_features=3072, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=3072, out_features=768, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                    (1): SwinBlock(
                      (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (attn): ShiftWindowMSA(
                        (w_msa): WindowMSA(
                          (qkv): Linear(in_features=768, out_features=2304, bias=True)
                          (attn_drop): Dropout(p=0.0, inplace=False)
                          (proj): Linear(in_features=768, out_features=768, bias=True)
                          (proj_drop): Dropout(p=0.0, inplace=False)
                          (softmax): Softmax(dim=-1)
                        )
                        (drop): DropPath()
                      )
                      (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                      (ffn): FFN(
                        (activate): GELU()
                        (layers): Sequential(
                          (0): Sequential(
                            (0): Linear(in_features=768, out_features=3072, bias=True)
                            (1): GELU()
                            (2): Dropout(p=0.0, inplace=False)
                          )
                          (1): Linear(in_features=3072, out_features=768, bias=True)
                          (2): Dropout(p=0.0, inplace=False)
                        )
                        (dropout_layer): DropPath()
                      )
                    )
                  )
                )
              )
              (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            )
            init_cfg={'type': 'Pretrained', 'checkpoint': 'pretrained/swint-nuimages-pretrained.pth'}
            (1): ResNet(
              (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
              (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
              (layer1): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer2): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer3): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (4): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (5): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
              (layer4): ResLayer(
                (0): Bottleneck(
                  (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (downsample): Sequential(
                    (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                )
              )
            )
            init_cfg={'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
          )
          (router): MLPRouter(
            (conv): Conv2d(3, 512, kernel_size=(3, 3), stride=(1, 1))
            (pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Linear(in_features=512, out_features=2, bias=True)
          )
          (conv_swin_1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
          (conv_swin_2): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1))
          (conv_swin_3): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1))
          (conv_resnet_1): Conv2d(512, 192, kernel_size=(1, 1), stride=(1, 1))
          (conv_resnet_2): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
          (conv_resnet_3): Conv2d(2048, 768, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): DepthLSSTransform(
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
    (lidar): ModuleDict(
      (voxelize): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
      (backbone): SparseEncoder(
        (conv_input): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (encoder_layers): SparseSequential(
          (encoder_layer1): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer2): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer3): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer4): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv_out): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
  )
  (fuser): ConvFuser(
    (0): Conv2d(336, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (decoder): ModuleDict(
    (backbone): SECOND(
      (blocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
    (neck): SECONDFPN(
      (deblocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    init_cfg=[{'type': 'Kaiming', 'layer': 'ConvTranspose2d'}, {'type': 'Constant', 'layer': 'NaiveSyncBatchNorm2d', 'val': 1.0}]
  )
  (heads): ModuleDict(
    (object): TransFusionHead(
      (loss_cls): FocalLoss()
      (loss_bbox): L1Loss()
      (loss_iou): VarifocalLoss()
      (loss_heatmap): GaussianFocalLoss()
      (shared_conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (heatmap_head): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): Conv2d(128, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (class_encoding): Conv1d(10, 128, kernel_size=(1,), stride=(1,))
      (decoder): ModuleList(
        (0): TransformerDecoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (multihead_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=256, bias=True)
          (dropout): Dropout(p=0.1, inplace=False)
          (linear2): Linear(in_features=256, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.1, inplace=False)
          (dropout2): Dropout(p=0.1, inplace=False)
          (dropout3): Dropout(p=0.1, inplace=False)
          (self_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
          (cross_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
        )
      )
      (prediction_heads): ModuleList(
        (0): FFN(
          (center): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 10, kernel_size=(1,), stride=(1,))
          )
        )
      )
    )
  )
)
2025-04-25 08:28:59,274 - mmdet3d - INFO - Start running, host: root@1cf78a6d245c, work_dir: /bevfusion/train_result
2025-04-25 08:28:59,275 - mmdet3d - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-04-25 08:28:59,275 - mmdet3d - INFO - workflow: [('train', 1)], max: 6 epochs
2025-04-25 08:28:59,278 - mmdet3d - INFO - Checkpoints will be saved to /bevfusion/train_result by HardDiskBackend.
2025-04-25 08:29:04,874 - mmcv - INFO - Reducer buckets have been rebuilt in this iteration.
2025-04-25 08:29:24,968 - mmdet3d - INFO - Epoch [1][50/815]	lr: 7.973e-05, eta: 0:40:59, time: 0.508, data_time: 0.075, memory: 6617, loss/object/loss_heatmap: 1178.9790, loss/object/layer_-1_loss_cls: 11.1612, loss/object/layer_-1_loss_bbox: 11.3427, stats/object/matched_ious: 0.0059, loss: 1201.4829, grad_norm: nan
2025-04-25 08:29:45,944 - mmdet3d - INFO - Epoch [1][100/815]	lr: 9.307e-05, eta: 0:37:01, time: 0.419, data_time: 0.011, memory: 6626, loss/object/loss_heatmap: 17.1834, loss/object/layer_-1_loss_cls: 8.8751, loss/object/layer_-1_loss_bbox: 9.0451, stats/object/matched_ious: 0.0084, loss: 35.1036, grad_norm: 217.0423
2025-04-25 08:30:07,003 - mmdet3d - INFO - Epoch [1][150/815]	lr: 1.064e-04, eta: 0:35:31, time: 0.421, data_time: 0.010, memory: 6626, loss/object/loss_heatmap: 3.1305, loss/object/layer_-1_loss_cls: 5.0902, loss/object/layer_-1_loss_bbox: 5.5237, stats/object/matched_ious: 0.0239, loss: 13.7444, grad_norm: 20.6884
2025-04-25 08:30:27,566 - mmdet3d - INFO - Epoch [1][200/815]	lr: 1.197e-04, eta: 0:34:23, time: 0.411, data_time: 0.010, memory: 6626, loss/object/loss_heatmap: 3.0157, loss/object/layer_-1_loss_cls: 4.1936, loss/object/layer_-1_loss_bbox: 5.3945, stats/object/matched_ious: 0.0427, loss: 12.6037, grad_norm: 19.1774
2025-04-25 08:30:48,702 - mmdet3d - INFO - Epoch [1][250/815]	lr: 1.331e-04, eta: 0:33:45, time: 0.423, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.7039, loss/object/layer_-1_loss_cls: 2.1316, loss/object/layer_-1_loss_bbox: 5.5345, stats/object/matched_ious: 0.0549, loss: 10.3700, grad_norm: 13.4857
2025-04-25 08:31:09,746 - mmdet3d - INFO - Epoch [1][300/815]	lr: 1.464e-04, eta: 0:33:11, time: 0.421, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.8425, loss/object/layer_-1_loss_cls: 1.8494, loss/object/layer_-1_loss_bbox: 4.2030, stats/object/matched_ious: 0.0518, loss: 8.8949, grad_norm: 15.7616
2025-04-25 08:31:30,721 - mmdet3d - INFO - Epoch [1][350/815]	lr: 1.597e-04, eta: 0:32:40, time: 0.419, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.5954, loss/object/layer_-1_loss_cls: 1.4220, loss/object/layer_-1_loss_bbox: 4.0216, stats/object/matched_ious: 0.0666, loss: 8.0391, grad_norm: 12.0901
2025-04-25 08:31:51,609 - mmdet3d - INFO - Epoch [1][400/815]	lr: 1.731e-04, eta: 0:32:11, time: 0.418, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.6643, loss/object/layer_-1_loss_cls: 1.3021, loss/object/layer_-1_loss_bbox: 3.6547, stats/object/matched_ious: 0.0622, loss: 7.6211, grad_norm: 14.1739
2025-04-25 08:32:12,475 - mmdet3d - INFO - Epoch [1][450/815]	lr: 1.864e-04, eta: 0:31:43, time: 0.417, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.4192, loss/object/layer_-1_loss_cls: 0.9627, loss/object/layer_-1_loss_bbox: 3.2354, stats/object/matched_ious: 0.0732, loss: 6.6173, grad_norm: 9.8622
2025-04-25 08:32:33,678 - mmdet3d - INFO - Epoch [1][500/815]	lr: 1.997e-04, eta: 0:31:19, time: 0.424, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.3989, loss/object/layer_-1_loss_cls: 0.8387, loss/object/layer_-1_loss_bbox: 3.5455, stats/object/matched_ious: 0.0717, loss: 6.7832, grad_norm: 10.1778
2025-04-25 08:32:54,524 - mmdet3d - INFO - Epoch [1][550/815]	lr: 2.000e-04, eta: 0:30:54, time: 0.417, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.4347, loss/object/layer_-1_loss_cls: 0.8610, loss/object/layer_-1_loss_bbox: 3.3840, stats/object/matched_ious: 0.0759, loss: 6.6797, grad_norm: 11.5483
2025-04-25 08:33:15,364 - mmdet3d - INFO - Epoch [1][600/815]	lr: 2.000e-04, eta: 0:30:28, time: 0.417, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.2687, loss/object/layer_-1_loss_cls: 0.6422, loss/object/layer_-1_loss_bbox: 3.2200, stats/object/matched_ious: 0.0808, loss: 6.1309, grad_norm: 8.9247
2025-04-25 08:33:36,331 - mmdet3d - INFO - Epoch [1][650/815]	lr: 2.000e-04, eta: 0:30:05, time: 0.419, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.2298, loss/object/layer_-1_loss_cls: 0.5875, loss/object/layer_-1_loss_bbox: 2.9053, stats/object/matched_ious: 0.0771, loss: 5.7225, grad_norm: 9.6217
2025-04-25 08:33:57,116 - mmdet3d - INFO - Epoch [1][700/815]	lr: 2.000e-04, eta: 0:29:41, time: 0.416, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.2104, loss/object/layer_-1_loss_cls: 0.5853, loss/object/layer_-1_loss_bbox: 2.8747, stats/object/matched_ious: 0.0761, loss: 5.6705, grad_norm: 9.1127
2025-04-25 08:34:18,156 - mmdet3d - INFO - Epoch [1][750/815]	lr: 2.000e-04, eta: 0:29:18, time: 0.421, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.2450, loss/object/layer_-1_loss_cls: 0.5714, loss/object/layer_-1_loss_bbox: 3.1858, stats/object/matched_ious: 0.0847, loss: 6.0023, grad_norm: 10.0186
2025-04-25 08:34:38,801 - mmdet3d - INFO - Epoch [1][800/815]	lr: 2.000e-04, eta: 0:28:54, time: 0.413, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 2.1747, loss/object/layer_-1_loss_cls: 0.5520, loss/object/layer_-1_loss_bbox: 2.8493, stats/object/matched_ious: 0.0911, loss: 5.5759, grad_norm: 10.0866
2025-04-25 08:34:45,245 - mmdet3d - INFO - Saving checkpoint at 1 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   275s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   136s/bevfusion/mmdet3d/core/bbox/coders/transfusion_bbox_coder.py:96: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.post_center_range = torch.tensor(
[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    95s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    70s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    59s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    48s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    43s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    37s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    35s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    31s[  ] 11/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 12/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 13/81, 2.7 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 18/81, 3.4 task/s, elapsed: 5s, ETA:    18s[  ] 19/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 20/81, 3.7 task/s, elapsed: 5s, ETA:    17s[  ] 21/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 22/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 23/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 24/81, 4.0 task/s, elapsed: 6s, ETA:    14s[  ] 25/81, 4.0 task/s, elapsed: 6s, ETA:    14s[  ] 26/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 27/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 28/81, 4.4 task/s, elapsed: 6s, ETA:    12s[  ] 29/81, 4.4 task/s, elapsed: 7s, ETA:    12s[  ] 30/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 31/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 32/81, 4.7 task/s, elapsed: 7s, ETA:    11s[  ] 33/81, 4.6 task/s, elapsed: 7s, ETA:    10s[  ] 34/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 36/81, 4.9 task/s, elapsed: 7s, ETA:     9s[  ] 37/81, 4.9 task/s, elapsed: 8s, ETA:     9s[  ] 38/81, 5.0 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 5.0 task/s, elapsed: 8s, ETA:     8s[  ] 40/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 41/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 42/81, 5.2 task/s, elapsed: 8s, ETA:     7s[> ] 43/81, 5.2 task/s, elapsed: 8s, ETA:     7s[> ] 44/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 45/81, 5.3 task/s, elapsed: 9s, ETA:     7s[> ] 46/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 47/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 48/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 50/81, 5.6 task/s, elapsed: 9s, ETA:     6s[> ] 51/81, 5.5 task/s, elapsed: 9s, ETA:     5s[> ] 52/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 53/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 54/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 55/81, 5.7 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 57/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 58/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 59/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 60/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 61/81, 5.9 task/s, elapsed: 10s, ETA:     3s[> ] 62/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 63/81, 6.0 task/s, elapsed: 11s, ETA:     3s[> ] 64/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 65/81, 6.0 task/s, elapsed: 11s, ETA:     3s[> ] 66/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 67/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 68/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 69/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 70/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 71/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 72/81, 6.3 task/s, elapsed: 11s, ETA:     1s[> ] 73/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 74/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 75/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 76/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 77/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 78/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 79/81, 6.4 task/s, elapsed: 12s, ETA:     0s[> ] 80/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 81/81, 6.5 task/s, elapsed: 13s, ETA:     0s[>>] 82/81, 6.6 task/s, elapsed: 13s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 28.7 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 28.1 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 28.5 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 28.6 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 28.7 task/s, elapsed: 0s, ETA:     3s[  ] 6/81, 28.8 task/s, elapsed: 0s, ETA:     3s[  ] 7/81, 29.0 task/s, elapsed: 0s, ETA:     3s[  ] 8/81, 29.1 task/s, elapsed: 0s, ETA:     3s[  ] 9/81, 29.1 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 29.1 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 29.2 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 29.2 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 29.3 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 29.3 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 16/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 23.3 task/s, elapsed: 1s, ETA:     3s[  ] 23/81, 23.5 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 23.7 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 23.9 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 24.0 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 24.2 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 24.3 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 24.5 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 24.6 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 24.7 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 24.8 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 25.0 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 25.0 task/s, elapsed: 1s, ETA:     2s[  ] 35/81, 25.1 task/s, elapsed: 1s, ETA:     2s[  ] 36/81, 25.2 task/s, elapsed: 1s, ETA:     2s[  ] 37/81, 25.3 task/s, elapsed: 1s, ETA:     2s[  ] 38/81, 25.4 task/s, elapsed: 1s, ETA:     2s[  ] 39/81, 25.5 task/s, elapsed: 2s, ETA:     2s[  ] 40/81, 25.6 task/s, elapsed: 2s, ETA:     2s[> ] 41/81, 25.7 task/s, elapsed: 2s, ETA:     2s[> ] 42/81, 25.7 task/s, elapsed: 2s, ETA:     2s[> ] 43/81, 25.8 task/s, elapsed: 2s, ETA:     1s[> ] 44/81, 25.9 task/s, elapsed: 2s, ETA:     1s[> ] 45/81, 26.0 task/s, elapsed: 2s, ETA:     1s[> ] 46/81, 26.0 task/s, elapsed: 2s, ETA:     1s[> ] 47/81, 26.1 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 26.1 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 26.2 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 26.2 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 26.3 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 26.3 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 26.3 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 26.1 task/s, elapsed: 3s, ETA:     1s[> ] 67/81, 26.0 task/s, elapsed: 3s, ETA:     1s[> ] 68/81, 26.0 task/s, elapsed: 3s, ETA:     0s[> ] 69/81, 26.1 task/s, elapsed: 3s, ETA:     0s[> ] 70/81, 26.1 task/s, elapsed: 3s, ETA:     0s[> ] 71/81, 26.1 task/s, elapsed: 3s, ETA:     0s[> ] 72/81, 26.2 task/s, elapsed: 3s, ETA:     0s[> ] 73/81, 26.2 task/s, elapsed: 3s, ETA:     0s[> ] 74/81, 26.2 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 26.4 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 26.4 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 26.4 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 26.5 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpgcxb12no/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f7ffa69cfa0>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 373.11it/s] 94% 76/81 [00:00<00:00, 343.90it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0061
mATE: 0.9658
mASE: 0.9137
mAOE: 1.1103
mAVE: 0.9134
mAAE: 0.8750
NDS: 0.0362
Eval time: 3.5s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.016 	0.943 	0.530 	1.478 	0.398 	0.149 
truck               	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bus                 	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.044 	0.715 	0.607 	1.515 	0.909 	0.851 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.000 	1.000 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-25 08:35:09,302 - mmdet3d - INFO - Epoch(val) [1][41]	object/car_ap_dist_0.5: 0.0000, object/car_ap_dist_1.0: 0.0000, object/car_ap_dist_2.0: 0.0231, object/car_ap_dist_4.0: 0.0419, object/car_trans_err: 0.9433, object/car_scale_err: 0.5299, object/car_orient_err: 1.4778, object/car_vel_err: 0.3979, object/car_attr_err: 0.1489, object/mATE: 0.9658, object/mASE: 0.9137, object/mAOE: 1.1103, object/mAVE: 0.9134, object/mAAE: 0.8750, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 1.0000, object/truck_scale_err: 1.0000, object/truck_orient_err: 1.0000, object/truck_vel_err: 1.0000, object/truck_attr_err: 1.0000, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0000, object/bus_scale_err: 1.0000, object/bus_orient_err: 1.0000, object/bus_vel_err: 1.0000, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.0010, object/pedestrian_ap_dist_1.0: 0.0202, object/pedestrian_ap_dist_2.0: 0.0398, object/pedestrian_ap_dist_4.0: 0.1162, object/pedestrian_trans_err: 0.7151, object/pedestrian_scale_err: 0.6068, object/pedestrian_orient_err: 1.5152, object/pedestrian_vel_err: 0.9095, object/pedestrian_attr_err: 0.8512, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.0000, object/traffic_cone_scale_err: 1.0000, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0362, object/map: 0.0061
2025-04-25 08:35:33,855 - mmdet3d - INFO - Epoch [2][50/815]	lr: 1.866e-04, eta: 0:28:12, time: 0.490, data_time: 0.071, memory: 6627, loss/object/loss_heatmap: 2.1849, loss/object/layer_-1_loss_cls: 0.5028, loss/object/layer_-1_loss_bbox: 2.9132, stats/object/matched_ious: 0.1017, loss: 5.6009, grad_norm: 10.0440
2025-04-25 08:35:54,979 - mmdet3d - INFO - Epoch [2][100/815]	lr: 1.866e-04, eta: 0:27:52, time: 0.422, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.2802, loss/object/layer_-1_loss_cls: 0.5276, loss/object/layer_-1_loss_bbox: 2.9219, stats/object/matched_ious: 0.1013, loss: 5.7297, grad_norm: 9.9676
2025-04-25 08:36:16,009 - mmdet3d - INFO - Epoch [2][150/815]	lr: 1.866e-04, eta: 0:27:30, time: 0.421, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.1597, loss/object/layer_-1_loss_cls: 0.4906, loss/object/layer_-1_loss_bbox: 2.9815, stats/object/matched_ious: 0.1018, loss: 5.6317, grad_norm: 10.4455
2025-04-25 08:36:37,316 - mmdet3d - INFO - Epoch [2][200/815]	lr: 1.866e-04, eta: 0:27:10, time: 0.426, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.0558, loss/object/layer_-1_loss_cls: 0.4595, loss/object/layer_-1_loss_bbox: 3.0190, stats/object/matched_ious: 0.1044, loss: 5.5343, grad_norm: 8.4462
2025-04-25 08:36:58,223 - mmdet3d - INFO - Epoch [2][250/815]	lr: 1.866e-04, eta: 0:26:49, time: 0.418, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 2.0439, loss/object/layer_-1_loss_cls: 0.4807, loss/object/layer_-1_loss_bbox: 2.7483, stats/object/matched_ious: 0.1128, loss: 5.2728, grad_norm: 9.5704
2025-04-25 08:37:18,945 - mmdet3d - INFO - Epoch [2][300/815]	lr: 1.866e-04, eta: 0:26:27, time: 0.414, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.9734, loss/object/layer_-1_loss_cls: 0.4597, loss/object/layer_-1_loss_bbox: 2.6548, stats/object/matched_ious: 0.1206, loss: 5.0879, grad_norm: 8.7011
2025-04-25 08:37:40,145 - mmdet3d - INFO - Epoch [2][350/815]	lr: 1.866e-04, eta: 0:26:06, time: 0.424, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.9136, loss/object/layer_-1_loss_cls: 0.4192, loss/object/layer_-1_loss_bbox: 2.7377, stats/object/matched_ious: 0.1182, loss: 5.0705, grad_norm: 9.0092
2025-04-25 08:38:00,987 - mmdet3d - INFO - Epoch [2][400/815]	lr: 1.866e-04, eta: 0:25:45, time: 0.417, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.9508, loss/object/layer_-1_loss_cls: 0.4379, loss/object/layer_-1_loss_bbox: 2.6450, stats/object/matched_ious: 0.1159, loss: 5.0336, grad_norm: 9.0864
2025-04-25 08:38:21,760 - mmdet3d - INFO - Epoch [2][450/815]	lr: 1.866e-04, eta: 0:25:23, time: 0.415, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.8922, loss/object/layer_-1_loss_cls: 0.4469, loss/object/layer_-1_loss_bbox: 2.5195, stats/object/matched_ious: 0.1269, loss: 4.8586, grad_norm: 9.3514
2025-04-25 08:38:42,722 - mmdet3d - INFO - Epoch [2][500/815]	lr: 1.866e-04, eta: 0:25:02, time: 0.419, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.8787, loss/object/layer_-1_loss_cls: 0.4188, loss/object/layer_-1_loss_bbox: 2.5750, stats/object/matched_ious: 0.1221, loss: 4.8725, grad_norm: 8.9761
2025-04-25 08:39:03,588 - mmdet3d - INFO - Epoch [2][550/815]	lr: 1.866e-04, eta: 0:24:40, time: 0.417, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.8893, loss/object/layer_-1_loss_cls: 0.4089, loss/object/layer_-1_loss_bbox: 2.4101, stats/object/matched_ious: 0.1315, loss: 4.7083, grad_norm: 8.6020
2025-04-25 08:39:24,639 - mmdet3d - INFO - Epoch [2][600/815]	lr: 1.866e-04, eta: 0:24:20, time: 0.421, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.7628, loss/object/layer_-1_loss_cls: 0.3912, loss/object/layer_-1_loss_bbox: 2.4904, stats/object/matched_ious: 0.1344, loss: 4.6444, grad_norm: 8.4583
2025-04-25 08:39:45,885 - mmdet3d - INFO - Epoch [2][650/815]	lr: 1.866e-04, eta: 0:23:59, time: 0.425, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 1.7986, loss/object/layer_-1_loss_cls: 0.4165, loss/object/layer_-1_loss_bbox: 2.4286, stats/object/matched_ious: 0.1313, loss: 4.6437, grad_norm: 8.2951
2025-04-25 08:40:06,851 - mmdet3d - INFO - Epoch [2][700/815]	lr: 1.866e-04, eta: 0:23:38, time: 0.419, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.8538, loss/object/layer_-1_loss_cls: 0.3993, loss/object/layer_-1_loss_bbox: 2.6793, stats/object/matched_ious: 0.1317, loss: 4.9323, grad_norm: 8.9646
2025-04-25 08:40:27,572 - mmdet3d - INFO - Epoch [2][750/815]	lr: 1.866e-04, eta: 0:23:16, time: 0.414, data_time: 0.010, memory: 6627, loss/object/loss_heatmap: 1.8261, loss/object/layer_-1_loss_cls: 0.3910, loss/object/layer_-1_loss_bbox: 2.3098, stats/object/matched_ious: 0.1393, loss: 4.5269, grad_norm: 9.3550
2025-04-25 08:40:48,442 - mmdet3d - INFO - Epoch [2][800/815]	lr: 1.866e-04, eta: 0:22:55, time: 0.417, data_time: 0.011, memory: 6627, loss/object/loss_heatmap: 1.7201, loss/object/layer_-1_loss_cls: 0.3839, loss/object/layer_-1_loss_bbox: 2.4177, stats/object/matched_ious: 0.1485, loss: 4.5216, grad_norm: 7.2680
2025-04-25 08:40:54,745 - mmdet3d - INFO - Saving checkpoint at 2 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   270s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   133s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    93s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    69s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    58s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    47s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    42s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    37s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    34s[  ] 10/81, 2.4 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    29s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    26s[  ] 13/81, 2.8 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 3.0 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.3 task/s, elapsed: 5s, ETA:    20s[  ] 18/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 19/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 20/81, 3.7 task/s, elapsed: 5s, ETA:    17s[  ] 21/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 22/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 23/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 24/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 25/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 26/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 27/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 28/81, 4.4 task/s, elapsed: 6s, ETA:    12s[  ] 29/81, 4.4 task/s, elapsed: 7s, ETA:    12s[  ] 30/81, 4.6 task/s, elapsed: 7s, ETA:    11s[  ] 31/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 32/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 33/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 34/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 36/81, 4.9 task/s, elapsed: 7s, ETA:     9s[  ] 37/81, 4.9 task/s, elapsed: 8s, ETA:     9s[  ] 38/81, 5.0 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 5.0 task/s, elapsed: 8s, ETA:     8s[  ] 40/81, 5.2 task/s, elapsed: 8s, ETA:     8s[> ] 41/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 42/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 43/81, 5.2 task/s, elapsed: 8s, ETA:     7s[> ] 44/81, 5.4 task/s, elapsed: 8s, ETA:     7s[> ] 45/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 46/81, 5.4 task/s, elapsed: 8s, ETA:     6s[> ] 47/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 48/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 50/81, 5.6 task/s, elapsed: 9s, ETA:     6s[> ] 51/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 52/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 53/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 54/81, 5.8 task/s, elapsed: 9s, ETA:     5s[> ] 55/81, 5.7 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 57/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 58/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 59/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 60/81, 6.0 task/s, elapsed: 10s, ETA:     4s[> ] 61/81, 5.9 task/s, elapsed: 10s, ETA:     3s[> ] 62/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 63/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 64/81, 6.1 task/s, elapsed: 10s, ETA:     3s[> ] 65/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 66/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 67/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 68/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 69/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 70/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 71/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 72/81, 6.3 task/s, elapsed: 11s, ETA:     1s[> ] 73/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 74/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 75/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 76/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 77/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 78/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 79/81, 6.4 task/s, elapsed: 12s, ETA:     0s[> ] 80/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 81/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 82/81, 6.6 task/s, elapsed: 13s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 22.9 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 24.1 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 25.6 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 26.2 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 26.4 task/s, elapsed: 0s, ETA:     3s[  ] 6/81, 26.6 task/s, elapsed: 0s, ETA:     3s[  ] 7/81, 26.7 task/s, elapsed: 0s, ETA:     3s[  ] 8/81, 26.8 task/s, elapsed: 0s, ETA:     3s[  ] 9/81, 26.9 task/s, elapsed: 0s, ETA:     3s[  ] 10/81, 26.9 task/s, elapsed: 0s, ETA:     3s[  ] 11/81, 26.9 task/s, elapsed: 0s, ETA:     3s[  ] 12/81, 15.3 task/s, elapsed: 1s, ETA:     4s[  ] 13/81, 15.9 task/s, elapsed: 1s, ETA:     4s[  ] 14/81, 16.4 task/s, elapsed: 1s, ETA:     4s[  ] 15/81, 16.8 task/s, elapsed: 1s, ETA:     4s[  ] 16/81, 17.2 task/s, elapsed: 1s, ETA:     4s[  ] 17/81, 17.6 task/s, elapsed: 1s, ETA:     4s[  ] 18/81, 18.0 task/s, elapsed: 1s, ETA:     4s[  ] 19/81, 18.3 task/s, elapsed: 1s, ETA:     3s[  ] 20/81, 18.6 task/s, elapsed: 1s, ETA:     3s[  ] 21/81, 18.9 task/s, elapsed: 1s, ETA:     3s[  ] 22/81, 19.2 task/s, elapsed: 1s, ETA:     3s[  ] 23/81, 19.5 task/s, elapsed: 1s, ETA:     3s[  ] 24/81, 19.7 task/s, elapsed: 1s, ETA:     3s[  ] 25/81, 19.9 task/s, elapsed: 1s, ETA:     3s[  ] 26/81, 20.2 task/s, elapsed: 1s, ETA:     3s[  ] 27/81, 20.4 task/s, elapsed: 1s, ETA:     3s[  ] 28/81, 20.6 task/s, elapsed: 1s, ETA:     3s[  ] 29/81, 20.8 task/s, elapsed: 1s, ETA:     3s[  ] 30/81, 20.9 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 21.1 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 21.3 task/s, elapsed: 2s, ETA:     2s[  ] 33/81, 21.4 task/s, elapsed: 2s, ETA:     2s[  ] 34/81, 21.5 task/s, elapsed: 2s, ETA:     2s[  ] 35/81, 21.7 task/s, elapsed: 2s, ETA:     2s[  ] 36/81, 21.8 task/s, elapsed: 2s, ETA:     2s[  ] 37/81, 21.9 task/s, elapsed: 2s, ETA:     2s[  ] 38/81, 22.0 task/s, elapsed: 2s, ETA:     2s[  ] 39/81, 22.1 task/s, elapsed: 2s, ETA:     2s[  ] 40/81, 22.2 task/s, elapsed: 2s, ETA:     2s[> ] 41/81, 22.3 task/s, elapsed: 2s, ETA:     2s[> ] 42/81, 22.4 task/s, elapsed: 2s, ETA:     2s[> ] 43/81, 22.5 task/s, elapsed: 2s, ETA:     2s[> ] 44/81, 22.6 task/s, elapsed: 2s, ETA:     2s[> ] 45/81, 22.7 task/s, elapsed: 2s, ETA:     2s[> ] 46/81, 22.8 task/s, elapsed: 2s, ETA:     2s[> ] 47/81, 22.9 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 22.9 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 23.0 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 23.0 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 23.1 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 23.1 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 23.1 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 23.2 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 23.2 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 23.3 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 23.2 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 23.1 task/s, elapsed: 3s, ETA:     1s[> ] 59/81, 23.0 task/s, elapsed: 3s, ETA:     1s[> ] 60/81, 23.0 task/s, elapsed: 3s, ETA:     1s[> ] 61/81, 23.1 task/s, elapsed: 3s, ETA:     1s[> ] 62/81, 23.1 task/s, elapsed: 3s, ETA:     1s[> ] 63/81, 23.2 task/s, elapsed: 3s, ETA:     1s[> ] 64/81, 23.2 task/s, elapsed: 3s, ETA:     1s[> ] 65/81, 23.3 task/s, elapsed: 3s, ETA:     1s[> ] 66/81, 23.3 task/s, elapsed: 3s, ETA:     1s[> ] 67/81, 23.4 task/s, elapsed: 3s, ETA:     1s[> ] 68/81, 23.4 task/s, elapsed: 3s, ETA:     1s[> ] 69/81, 23.4 task/s, elapsed: 3s, ETA:     1s[> ] 70/81, 23.5 task/s, elapsed: 3s, ETA:     0s[> ] 71/81, 23.6 task/s, elapsed: 3s, ETA:     0s[> ] 72/81, 23.6 task/s, elapsed: 3s, ETA:     0s[> ] 73/81, 23.7 task/s, elapsed: 3s, ETA:     0s[> ] 74/81, 23.7 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 23.8 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 23.8 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 23.8 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 23.9 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 23.9 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 23.9 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 24.0 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpvmk7b5te/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f7ff8a19910>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 44% 36/81 [00:00<00:00, 355.79it/s] 89% 72/81 [00:00<00:00, 315.53it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0314
mATE: 0.9435
mASE: 0.8508
mAOE: 1.0952
mAVE: 0.9100
mAAE: 0.8699
NDS: 0.0583
Eval time: 3.0s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.035 	0.673 	0.378 	1.506 	0.630 	0.243 
truck               	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bus                 	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.280 	0.597 	0.363 	1.350 	0.651 	0.716 
motorcycle          	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.164 	0.768 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-25 08:41:18,791 - mmdet3d - INFO - Epoch(val) [2][41]	object/car_ap_dist_0.5: 0.0000, object/car_ap_dist_1.0: 0.0133, object/car_ap_dist_2.0: 0.0562, object/car_ap_dist_4.0: 0.0693, object/car_trans_err: 0.6735, object/car_scale_err: 0.3778, object/car_orient_err: 1.5063, object/car_vel_err: 0.6296, object/car_attr_err: 0.2433, object/mATE: 0.9435, object/mASE: 0.8508, object/mAOE: 1.0952, object/mAVE: 0.9100, object/mAAE: 0.8699, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 1.0000, object/truck_scale_err: 1.0000, object/truck_orient_err: 1.0000, object/truck_vel_err: 1.0000, object/truck_attr_err: 1.0000, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0000, object/bus_trans_err: 1.0000, object/bus_scale_err: 1.0000, object/bus_orient_err: 1.0000, object/bus_vel_err: 1.0000, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 1.0000, object/motorcycle_scale_err: 1.0000, object/motorcycle_orient_err: 1.0000, object/motorcycle_vel_err: 1.0000, object/motorcycle_attr_err: 1.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1408, object/pedestrian_ap_dist_1.0: 0.2487, object/pedestrian_ap_dist_2.0: 0.3211, object/pedestrian_ap_dist_4.0: 0.4075, object/pedestrian_trans_err: 0.5971, object/pedestrian_scale_err: 0.3625, object/pedestrian_orient_err: 1.3505, object/pedestrian_vel_err: 0.6507, object/pedestrian_attr_err: 0.7162, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.1640, object/traffic_cone_scale_err: 0.7676, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0583, object/map: 0.0314
2025-04-25 08:41:43,718 - mmdet3d - INFO - Epoch [3][50/815]	lr: 1.501e-04, eta: 0:22:23, time: 0.498, data_time: 0.072, memory: 6628, loss/object/loss_heatmap: 1.6399, loss/object/layer_-1_loss_cls: 0.3821, loss/object/layer_-1_loss_bbox: 2.3077, stats/object/matched_ious: 0.1520, loss: 4.3297, grad_norm: 7.2040
2025-04-25 08:42:04,655 - mmdet3d - INFO - Epoch [3][100/815]	lr: 1.501e-04, eta: 0:22:02, time: 0.419, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.6616, loss/object/layer_-1_loss_cls: 0.3622, loss/object/layer_-1_loss_bbox: 2.3092, stats/object/matched_ious: 0.1493, loss: 4.3330, grad_norm: 7.7748
2025-04-25 08:42:25,558 - mmdet3d - INFO - Epoch [3][150/815]	lr: 1.501e-04, eta: 0:21:41, time: 0.418, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.6842, loss/object/layer_-1_loss_cls: 0.3697, loss/object/layer_-1_loss_bbox: 2.3275, stats/object/matched_ious: 0.1512, loss: 4.3814, grad_norm: 8.2980
2025-04-25 08:42:46,740 - mmdet3d - INFO - Epoch [3][200/815]	lr: 1.501e-04, eta: 0:21:21, time: 0.424, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.6028, loss/object/layer_-1_loss_cls: 0.3540, loss/object/layer_-1_loss_bbox: 2.2134, stats/object/matched_ious: 0.1530, loss: 4.1701, grad_norm: 8.0105
2025-04-25 08:43:07,730 - mmdet3d - INFO - Epoch [3][250/815]	lr: 1.501e-04, eta: 0:21:00, time: 0.420, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.5684, loss/object/layer_-1_loss_cls: 0.3525, loss/object/layer_-1_loss_bbox: 2.2270, stats/object/matched_ious: 0.1517, loss: 4.1478, grad_norm: 7.4871
2025-04-25 08:43:28,830 - mmdet3d - INFO - Epoch [3][300/815]	lr: 1.501e-04, eta: 0:20:39, time: 0.422, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.5241, loss/object/layer_-1_loss_cls: 0.3373, loss/object/layer_-1_loss_bbox: 2.0051, stats/object/matched_ious: 0.1691, loss: 3.8664, grad_norm: 7.0498
2025-04-25 08:43:50,096 - mmdet3d - INFO - Epoch [3][350/815]	lr: 1.501e-04, eta: 0:20:19, time: 0.425, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.4680, loss/object/layer_-1_loss_cls: 0.3339, loss/object/layer_-1_loss_bbox: 2.2061, stats/object/matched_ious: 0.1612, loss: 4.0080, grad_norm: 6.8457
2025-04-25 08:44:11,223 - mmdet3d - INFO - Epoch [3][400/815]	lr: 1.501e-04, eta: 0:19:58, time: 0.422, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.5149, loss/object/layer_-1_loss_cls: 0.3435, loss/object/layer_-1_loss_bbox: 2.1253, stats/object/matched_ious: 0.1675, loss: 3.9838, grad_norm: 7.4875
2025-04-25 08:44:32,365 - mmdet3d - INFO - Epoch [3][450/815]	lr: 1.501e-04, eta: 0:19:37, time: 0.423, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.5315, loss/object/layer_-1_loss_cls: 0.3435, loss/object/layer_-1_loss_bbox: 2.1717, stats/object/matched_ious: 0.1640, loss: 4.0467, grad_norm: 7.8400
2025-04-25 08:44:53,600 - mmdet3d - INFO - Epoch [3][500/815]	lr: 1.501e-04, eta: 0:19:17, time: 0.425, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.4513, loss/object/layer_-1_loss_cls: 0.3288, loss/object/layer_-1_loss_bbox: 2.1986, stats/object/matched_ious: 0.1643, loss: 3.9787, grad_norm: 7.2285
2025-04-25 08:45:14,625 - mmdet3d - INFO - Epoch [3][550/815]	lr: 1.501e-04, eta: 0:18:56, time: 0.421, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.5509, loss/object/layer_-1_loss_cls: 0.3294, loss/object/layer_-1_loss_bbox: 2.3572, stats/object/matched_ious: 0.1572, loss: 4.2375, grad_norm: 7.8028
2025-04-25 08:45:35,866 - mmdet3d - INFO - Epoch [3][600/815]	lr: 1.501e-04, eta: 0:18:35, time: 0.425, data_time: 0.011, memory: 6628, loss/object/loss_heatmap: 1.3971, loss/object/layer_-1_loss_cls: 0.3107, loss/object/layer_-1_loss_bbox: 2.1091, stats/object/matched_ious: 0.1662, loss: 3.8169, grad_norm: 6.9168
2025-04-25 08:45:56,939 - mmdet3d - INFO - Epoch [3][650/815]	lr: 1.501e-04, eta: 0:18:14, time: 0.421, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.4963, loss/object/layer_-1_loss_cls: 0.3155, loss/object/layer_-1_loss_bbox: 2.0733, stats/object/matched_ious: 0.1694, loss: 3.8851, grad_norm: 7.5334
2025-04-25 08:46:17,881 - mmdet3d - INFO - Epoch [3][700/815]	lr: 1.501e-04, eta: 0:17:53, time: 0.419, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.4078, loss/object/layer_-1_loss_cls: 0.3137, loss/object/layer_-1_loss_bbox: 2.1387, stats/object/matched_ious: 0.1752, loss: 3.8602, grad_norm: 6.8764
2025-04-25 08:46:39,274 - mmdet3d - INFO - Epoch [3][750/815]	lr: 1.501e-04, eta: 0:17:33, time: 0.428, data_time: 0.012, memory: 6630, loss/object/loss_heatmap: 1.4017, loss/object/layer_-1_loss_cls: 0.2936, loss/object/layer_-1_loss_bbox: 2.1928, stats/object/matched_ious: 0.1699, loss: 3.8882, grad_norm: 6.8788
2025-04-25 08:47:00,072 - mmdet3d - INFO - Epoch [3][800/815]	lr: 1.501e-04, eta: 0:17:12, time: 0.416, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.3975, loss/object/layer_-1_loss_cls: 0.2984, loss/object/layer_-1_loss_bbox: 2.0338, stats/object/matched_ious: 0.1860, loss: 3.7296, grad_norm: 7.0445
2025-04-25 08:47:06,568 - mmdet3d - INFO - Saving checkpoint at 3 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   270s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   133s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    93s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    69s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    57s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    47s[  ] 7/81, 1.8 task/s, elapsed: 4s, ETA:    42s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    36s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    34s[  ] 10/81, 2.4 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    28s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    26s[  ] 13/81, 2.8 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.3 task/s, elapsed: 5s, ETA:    19s[  ] 18/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 19/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 20/81, 3.7 task/s, elapsed: 5s, ETA:    16s[  ] 21/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 22/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 23/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 24/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 25/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 26/81, 4.3 task/s, elapsed: 6s, ETA:    13s[  ] 27/81, 4.3 task/s, elapsed: 6s, ETA:    13s[  ] 28/81, 4.4 task/s, elapsed: 6s, ETA:    12s[  ] 29/81, 4.4 task/s, elapsed: 7s, ETA:    12s[  ] 30/81, 4.6 task/s, elapsed: 7s, ETA:    11s[  ] 31/81, 4.6 task/s, elapsed: 7s, ETA:    11s[  ] 32/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 33/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 34/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 36/81, 5.0 task/s, elapsed: 7s, ETA:     9s[  ] 37/81, 4.9 task/s, elapsed: 8s, ETA:     9s[  ] 38/81, 5.1 task/s, elapsed: 8s, ETA:     8s[  ] 39/81, 5.0 task/s, elapsed: 8s, ETA:     8s[  ] 40/81, 5.2 task/s, elapsed: 8s, ETA:     8s[> ] 41/81, 5.2 task/s, elapsed: 8s, ETA:     8s[> ] 42/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 43/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 44/81, 5.4 task/s, elapsed: 8s, ETA:     7s[> ] 45/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 46/81, 5.5 task/s, elapsed: 8s, ETA:     6s[> ] 47/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 48/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 50/81, 5.6 task/s, elapsed: 9s, ETA:     6s[> ] 51/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 52/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 53/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 54/81, 5.8 task/s, elapsed: 9s, ETA:     5s[> ] 55/81, 5.7 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 57/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 58/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 59/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 60/81, 6.0 task/s, elapsed: 10s, ETA:     4s[> ] 61/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 62/81, 6.1 task/s, elapsed: 10s, ETA:     3s[> ] 63/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 64/81, 6.1 task/s, elapsed: 10s, ETA:     3s[> ] 65/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 66/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 67/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 68/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 69/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 70/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 71/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 72/81, 6.3 task/s, elapsed: 11s, ETA:     1s[> ] 73/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 74/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 75/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 76/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 77/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 78/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 79/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 80/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 81/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 82/81, 6.6 task/s, elapsed: 12s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 27.2 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 25.5 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 27.1 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 27.7 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 28.2 task/s, elapsed: 0s, ETA:     3s[  ] 6/81, 28.3 task/s, elapsed: 0s, ETA:     3s[  ] 7/81, 28.4 task/s, elapsed: 0s, ETA:     3s[  ] 8/81, 28.6 task/s, elapsed: 0s, ETA:     3s[  ] 9/81, 28.7 task/s, elapsed: 0s, ETA:     3s[  ] 10/81, 28.7 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 28.8 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 28.8 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 28.9 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 28.9 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 29.0 task/s, elapsed: 1s, ETA:     2s[  ] 16/81, 29.0 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 29.1 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 29.2 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 29.2 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 29.3 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 29.4 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 29.5 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 29.5 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 29.5 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 29.5 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 35/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 36/81, 29.6 task/s, elapsed: 1s, ETA:     2s[  ] 37/81, 29.6 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 29.5 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 29.5 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 29.5 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 29.5 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 29.5 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 29.5 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 29.5 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 46/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 47/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 29.4 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 29.3 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 29.3 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 29.3 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 29.2 task/s, elapsed: 2s, ETA:     1s[> ] 67/81, 29.2 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 29.1 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 29.1 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 29.1 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 29.0 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 28.8 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 74/81, 28.3 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 28.3 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 28.3 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 26.3 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 26.4 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmp0phosd3y/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f7ffa39d0d0>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 378.98it/s] 94% 76/81 [00:00<00:00, 346.20it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0531
mATE: 0.9417
mASE: 0.7446
mAOE: 1.3034
mAVE: 1.0219
mAAE: 0.7147
NDS: 0.0865
Eval time: 3.2s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.253 	0.679 	0.225 	1.506 	0.363 	0.197 
truck               	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bus                 	0.012 	1.058 	0.624 	1.703 	3.131 	0.824 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.266 	0.560 	0.368 	1.711 	0.606 	0.697 
motorcycle          	0.000 	0.841 	0.792 	1.811 	0.074 	0.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.279 	0.436 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-25 08:47:30,562 - mmdet3d - INFO - Epoch(val) [3][41]	object/car_ap_dist_0.5: 0.0167, object/car_ap_dist_1.0: 0.1911, object/car_ap_dist_2.0: 0.3705, object/car_ap_dist_4.0: 0.4334, object/car_trans_err: 0.6787, object/car_scale_err: 0.2252, object/car_orient_err: 1.5064, object/car_vel_err: 0.3632, object/car_attr_err: 0.1967, object/mATE: 0.9417, object/mASE: 0.7446, object/mAOE: 1.3034, object/mAVE: 1.0219, object/mAAE: 0.7147, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 1.0000, object/truck_scale_err: 1.0000, object/truck_orient_err: 1.0000, object/truck_vel_err: 1.0000, object/truck_attr_err: 1.0000, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0010, object/bus_ap_dist_2.0: 0.0221, object/bus_ap_dist_4.0: 0.0263, object/bus_trans_err: 1.0581, object/bus_scale_err: 0.6243, object/bus_orient_err: 1.7027, object/bus_vel_err: 3.1313, object/bus_attr_err: 0.8237, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 0.8415, object/motorcycle_scale_err: 0.7918, object/motorcycle_orient_err: 1.8109, object/motorcycle_vel_err: 0.0743, object/motorcycle_attr_err: 0.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1381, object/pedestrian_ap_dist_1.0: 0.2143, object/pedestrian_ap_dist_2.0: 0.2993, object/pedestrian_ap_dist_4.0: 0.4111, object/pedestrian_trans_err: 0.5598, object/pedestrian_scale_err: 0.3678, object/pedestrian_orient_err: 1.7106, object/pedestrian_vel_err: 0.6062, object/pedestrian_attr_err: 0.6973, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.2787, object/traffic_cone_scale_err: 0.4364, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0865, object/map: 0.0531
2025-04-25 08:47:54,804 - mmdet3d - INFO - Epoch [4][50/815]	lr: 1.001e-04, eta: 0:16:41, time: 0.484, data_time: 0.072, memory: 6630, loss/object/loss_heatmap: 1.3322, loss/object/layer_-1_loss_cls: 0.2803, loss/object/layer_-1_loss_bbox: 2.0479, stats/object/matched_ious: 0.1899, loss: 3.6604, grad_norm: 6.2216
2025-04-25 08:48:16,283 - mmdet3d - INFO - Epoch [4][100/815]	lr: 1.001e-04, eta: 0:16:21, time: 0.430, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.2305, loss/object/layer_-1_loss_cls: 0.2901, loss/object/layer_-1_loss_bbox: 2.0370, stats/object/matched_ious: 0.1855, loss: 3.5576, grad_norm: 6.4985
2025-04-25 08:48:37,446 - mmdet3d - INFO - Epoch [4][150/815]	lr: 1.001e-04, eta: 0:16:00, time: 0.423, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.2920, loss/object/layer_-1_loss_cls: 0.2787, loss/object/layer_-1_loss_bbox: 1.9428, stats/object/matched_ious: 0.1823, loss: 3.5135, grad_norm: 6.5332
2025-04-25 08:48:58,344 - mmdet3d - INFO - Epoch [4][200/815]	lr: 1.001e-04, eta: 0:15:39, time: 0.418, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.2926, loss/object/layer_-1_loss_cls: 0.2823, loss/object/layer_-1_loss_bbox: 1.8114, stats/object/matched_ious: 0.1985, loss: 3.3862, grad_norm: 6.4865
2025-04-25 08:49:19,536 - mmdet3d - INFO - Epoch [4][250/815]	lr: 1.001e-04, eta: 0:15:19, time: 0.424, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.2910, loss/object/layer_-1_loss_cls: 0.2808, loss/object/layer_-1_loss_bbox: 1.8741, stats/object/matched_ious: 0.1875, loss: 3.4460, grad_norm: 7.4194
2025-04-25 08:49:40,581 - mmdet3d - INFO - Epoch [4][300/815]	lr: 1.001e-04, eta: 0:14:58, time: 0.421, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.3644, loss/object/layer_-1_loss_cls: 0.2919, loss/object/layer_-1_loss_bbox: 1.9472, stats/object/matched_ious: 0.2002, loss: 3.6035, grad_norm: 7.4036
2025-04-25 08:50:01,685 - mmdet3d - INFO - Epoch [4][350/815]	lr: 1.001e-04, eta: 0:14:37, time: 0.422, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.2176, loss/object/layer_-1_loss_cls: 0.2696, loss/object/layer_-1_loss_bbox: 1.8561, stats/object/matched_ious: 0.2040, loss: 3.3433, grad_norm: 6.5505
2025-04-25 08:50:22,859 - mmdet3d - INFO - Epoch [4][400/815]	lr: 1.001e-04, eta: 0:14:16, time: 0.423, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.2553, loss/object/layer_-1_loss_cls: 0.2773, loss/object/layer_-1_loss_bbox: 1.9480, stats/object/matched_ious: 0.2055, loss: 3.4806, grad_norm: 7.3318
2025-04-25 08:50:44,172 - mmdet3d - INFO - Epoch [4][450/815]	lr: 1.001e-04, eta: 0:13:56, time: 0.426, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.2028, loss/object/layer_-1_loss_cls: 0.2687, loss/object/layer_-1_loss_bbox: 1.8868, stats/object/matched_ious: 0.1967, loss: 3.3582, grad_norm: 6.3010
2025-04-25 08:51:05,531 - mmdet3d - INFO - Epoch [4][500/815]	lr: 1.001e-04, eta: 0:13:35, time: 0.427, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.2695, loss/object/layer_-1_loss_cls: 0.2638, loss/object/layer_-1_loss_bbox: 2.0310, stats/object/matched_ious: 0.1882, loss: 3.5643, grad_norm: 7.0305
2025-04-25 08:51:27,189 - mmdet3d - INFO - Epoch [4][550/815]	lr: 1.001e-04, eta: 0:13:14, time: 0.433, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.1817, loss/object/layer_-1_loss_cls: 0.2473, loss/object/layer_-1_loss_bbox: 1.8921, stats/object/matched_ious: 0.1960, loss: 3.3212, grad_norm: 6.3184
2025-04-25 08:51:48,439 - mmdet3d - INFO - Epoch [4][600/815]	lr: 1.001e-04, eta: 0:12:54, time: 0.425, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.2089, loss/object/layer_-1_loss_cls: 0.2580, loss/object/layer_-1_loss_bbox: 1.8679, stats/object/matched_ious: 0.2023, loss: 3.3348, grad_norm: 6.6166
2025-04-25 08:52:09,659 - mmdet3d - INFO - Epoch [4][650/815]	lr: 1.001e-04, eta: 0:12:33, time: 0.424, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.1304, loss/object/layer_-1_loss_cls: 0.2516, loss/object/layer_-1_loss_bbox: 1.9265, stats/object/matched_ious: 0.1941, loss: 3.3085, grad_norm: 6.5020
2025-04-25 08:52:30,689 - mmdet3d - INFO - Epoch [4][700/815]	lr: 1.001e-04, eta: 0:12:12, time: 0.421, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.1272, loss/object/layer_-1_loss_cls: 0.2498, loss/object/layer_-1_loss_bbox: 1.9130, stats/object/matched_ious: 0.2058, loss: 3.2900, grad_norm: 6.4679
2025-04-25 08:52:51,798 - mmdet3d - INFO - Epoch [4][750/815]	lr: 1.001e-04, eta: 0:11:51, time: 0.422, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.2239, loss/object/layer_-1_loss_cls: 0.2473, loss/object/layer_-1_loss_bbox: 2.0099, stats/object/matched_ious: 0.1958, loss: 3.4810, grad_norm: 6.7130
2025-04-25 08:53:12,465 - mmdet3d - INFO - Epoch [4][800/815]	lr: 1.001e-04, eta: 0:11:30, time: 0.413, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.2026, loss/object/layer_-1_loss_cls: 0.2595, loss/object/layer_-1_loss_bbox: 1.8083, stats/object/matched_ious: 0.2120, loss: 3.2704, grad_norm: 7.3974
2025-04-25 08:53:18,816 - mmdet3d - INFO - Saving checkpoint at 4 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   276s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   136s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    95s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    70s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    59s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    48s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    43s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    37s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    35s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    31s[  ] 11/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 12/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 13/81, 2.7 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 18/81, 3.4 task/s, elapsed: 5s, ETA:    18s[  ] 19/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 20/81, 3.6 task/s, elapsed: 5s, ETA:    17s[  ] 21/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 22/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 23/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 24/81, 4.0 task/s, elapsed: 6s, ETA:    14s[  ] 25/81, 4.0 task/s, elapsed: 6s, ETA:    14s[  ] 26/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 27/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 28/81, 4.4 task/s, elapsed: 6s, ETA:    12s[  ] 29/81, 4.4 task/s, elapsed: 7s, ETA:    12s[  ] 30/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 31/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 32/81, 4.6 task/s, elapsed: 7s, ETA:    11s[  ] 33/81, 4.6 task/s, elapsed: 7s, ETA:    10s[  ] 34/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 36/81, 4.9 task/s, elapsed: 7s, ETA:     9s[  ] 37/81, 4.9 task/s, elapsed: 8s, ETA:     9s[  ] 38/81, 5.0 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 5.0 task/s, elapsed: 8s, ETA:     8s[  ] 40/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 41/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 42/81, 5.2 task/s, elapsed: 8s, ETA:     7s[> ] 43/81, 5.2 task/s, elapsed: 8s, ETA:     7s[> ] 44/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 45/81, 5.3 task/s, elapsed: 9s, ETA:     7s[> ] 46/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 47/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 48/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 50/81, 5.6 task/s, elapsed: 9s, ETA:     6s[> ] 51/81, 5.5 task/s, elapsed: 9s, ETA:     5s[> ] 52/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 53/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 54/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 55/81, 5.7 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 57/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 58/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 59/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 60/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 61/81, 5.9 task/s, elapsed: 10s, ETA:     3s[> ] 62/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 63/81, 6.0 task/s, elapsed: 11s, ETA:     3s[> ] 64/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 65/81, 6.0 task/s, elapsed: 11s, ETA:     3s[> ] 66/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 67/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 68/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 69/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 70/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 71/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 72/81, 6.3 task/s, elapsed: 11s, ETA:     1s[> ] 73/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 74/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 75/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 76/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 77/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 78/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 79/81, 6.4 task/s, elapsed: 12s, ETA:     0s[> ] 80/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 81/81, 6.5 task/s, elapsed: 13s, ETA:     0s[>>] 82/81, 6.5 task/s, elapsed: 13s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 25.3 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 27.6 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 28.8 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 29.3 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 29.6 task/s, elapsed: 0s, ETA:     3s[  ] 6/81, 29.6 task/s, elapsed: 0s, ETA:     3s[  ] 7/81, 29.5 task/s, elapsed: 0s, ETA:     3s[  ] 8/81, 29.5 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 29.5 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 29.5 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 29.6 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 29.7 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 29.7 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 29.7 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 29.7 task/s, elapsed: 1s, ETA:     2s[  ] 16/81, 29.7 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 29.8 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 29.8 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 29.9 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 30.0 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 30.0 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 30.1 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 30.0 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 30.0 task/s, elapsed: 1s, ETA:     2s[  ] 35/81, 30.0 task/s, elapsed: 1s, ETA:     2s[  ] 36/81, 30.0 task/s, elapsed: 1s, ETA:     2s[  ] 37/81, 29.9 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 29.9 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 29.9 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 29.9 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 29.9 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 29.9 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 29.9 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 29.9 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 29.8 task/s, elapsed: 2s, ETA:     1s[> ] 46/81, 29.8 task/s, elapsed: 2s, ETA:     1s[> ] 47/81, 29.8 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 29.8 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 29.8 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 29.8 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 29.7 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 29.6 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 29.6 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 29.5 task/s, elapsed: 2s, ETA:     1s[> ] 67/81, 29.4 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 29.4 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 29.3 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 29.3 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 29.2 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 28.9 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 74/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 28.4 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 28.5 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 28.5 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 28.5 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 28.5 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmptemxr9cc/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f7ff88ccf70>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 48% 39/81 [00:00<00:00, 381.36it/s] 96% 78/81 [00:00<00:00, 349.13it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0549
mATE: 0.8976
mASE: 0.7300
mAOE: 1.1480
mAVE: 0.9017
mAAE: 0.7293
NDS: 0.1016
Eval time: 3.0s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.279 	0.706 	0.283 	1.496 	0.243 	0.170 
truck               	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
bus                 	0.001 	1.104 	0.352 	0.648 	2.352 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.269 	0.520 	0.406 	1.392 	0.550 	0.665 
motorcycle          	0.000 	0.960 	0.778 	1.795 	0.068 	0.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	0.687 	0.482 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-25 08:53:42,398 - mmdet3d - INFO - Epoch(val) [4][41]	object/car_ap_dist_0.5: 0.0164, object/car_ap_dist_1.0: 0.2080, object/car_ap_dist_2.0: 0.4242, object/car_ap_dist_4.0: 0.4680, object/car_trans_err: 0.7059, object/car_scale_err: 0.2826, object/car_orient_err: 1.4960, object/car_vel_err: 0.2433, object/car_attr_err: 0.1699, object/mATE: 0.8976, object/mASE: 0.7300, object/mAOE: 1.1480, object/mAVE: 0.9017, object/mAAE: 0.7293, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 1.0000, object/truck_scale_err: 1.0000, object/truck_orient_err: 1.0000, object/truck_vel_err: 1.0000, object/truck_attr_err: 1.0000, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0006, object/bus_ap_dist_4.0: 0.0029, object/bus_trans_err: 1.1036, object/bus_scale_err: 0.3518, object/bus_orient_err: 0.6483, object/bus_vel_err: 2.3523, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 0.9603, object/motorcycle_scale_err: 0.7776, object/motorcycle_orient_err: 1.7951, object/motorcycle_vel_err: 0.0679, object/motorcycle_attr_err: 0.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1418, object/pedestrian_ap_dist_1.0: 0.2332, object/pedestrian_ap_dist_2.0: 0.3132, object/pedestrian_ap_dist_4.0: 0.3887, object/pedestrian_trans_err: 0.5200, object/pedestrian_scale_err: 0.4057, object/pedestrian_orient_err: 1.3923, object/pedestrian_vel_err: 0.5498, object/pedestrian_attr_err: 0.6648, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 0.6867, object/traffic_cone_scale_err: 0.4819, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.1016, object/map: 0.0549
2025-04-25 08:54:06,464 - mmdet3d - INFO - Epoch [5][50/815]	lr: 5.015e-05, eta: 0:11:01, time: 0.481, data_time: 0.072, memory: 6630, loss/object/loss_heatmap: 1.1247, loss/object/layer_-1_loss_cls: 0.2455, loss/object/layer_-1_loss_bbox: 1.7774, stats/object/matched_ious: 0.2228, loss: 3.1475, grad_norm: 5.8611
2025-04-25 08:54:27,583 - mmdet3d - INFO - Epoch [5][100/815]	lr: 5.015e-05, eta: 0:10:40, time: 0.422, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.0864, loss/object/layer_-1_loss_cls: 0.2415, loss/object/layer_-1_loss_bbox: 1.7930, stats/object/matched_ious: 0.2197, loss: 3.1209, grad_norm: 6.3986
2025-04-25 08:54:48,252 - mmdet3d - INFO - Epoch [5][150/815]	lr: 5.015e-05, eta: 0:10:19, time: 0.413, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.1068, loss/object/layer_-1_loss_cls: 0.2458, loss/object/layer_-1_loss_bbox: 1.6813, stats/object/matched_ious: 0.2253, loss: 3.0338, grad_norm: 6.6458
2025-04-25 08:55:09,297 - mmdet3d - INFO - Epoch [5][200/815]	lr: 5.015e-05, eta: 0:09:58, time: 0.421, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.0057, loss/object/layer_-1_loss_cls: 0.2331, loss/object/layer_-1_loss_bbox: 1.6374, stats/object/matched_ious: 0.2307, loss: 2.8762, grad_norm: 6.1284
2025-04-25 08:55:30,209 - mmdet3d - INFO - Epoch [5][250/815]	lr: 5.015e-05, eta: 0:09:37, time: 0.418, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 1.0129, loss/object/layer_-1_loss_cls: 0.2355, loss/object/layer_-1_loss_bbox: 1.6687, stats/object/matched_ious: 0.2312, loss: 2.9171, grad_norm: 6.1534
2025-04-25 08:55:51,188 - mmdet3d - INFO - Epoch [5][300/815]	lr: 5.015e-05, eta: 0:09:16, time: 0.420, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.0537, loss/object/layer_-1_loss_cls: 0.2360, loss/object/layer_-1_loss_bbox: 1.6792, stats/object/matched_ious: 0.2369, loss: 2.9689, grad_norm: 6.1702
2025-04-25 08:56:12,115 - mmdet3d - INFO - Epoch [5][350/815]	lr: 5.015e-05, eta: 0:08:55, time: 0.419, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.0101, loss/object/layer_-1_loss_cls: 0.2335, loss/object/layer_-1_loss_bbox: 1.6234, stats/object/matched_ious: 0.2294, loss: 2.8670, grad_norm: 6.4806
2025-04-25 08:56:33,215 - mmdet3d - INFO - Epoch [5][400/815]	lr: 5.015e-05, eta: 0:08:34, time: 0.422, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.0868, loss/object/layer_-1_loss_cls: 0.2359, loss/object/layer_-1_loss_bbox: 1.7939, stats/object/matched_ious: 0.2234, loss: 3.1167, grad_norm: 7.0007
2025-04-25 08:56:54,061 - mmdet3d - INFO - Epoch [5][450/815]	lr: 5.015e-05, eta: 0:08:13, time: 0.417, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.0424, loss/object/layer_-1_loss_cls: 0.2292, loss/object/layer_-1_loss_bbox: 1.6304, stats/object/matched_ious: 0.2390, loss: 2.9020, grad_norm: 6.0168
2025-04-25 08:57:14,795 - mmdet3d - INFO - Epoch [5][500/815]	lr: 5.015e-05, eta: 0:07:52, time: 0.415, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.0371, loss/object/layer_-1_loss_cls: 0.2375, loss/object/layer_-1_loss_bbox: 1.6619, stats/object/matched_ious: 0.2368, loss: 2.9365, grad_norm: 6.5664
2025-04-25 08:57:35,927 - mmdet3d - INFO - Epoch [5][550/815]	lr: 5.015e-05, eta: 0:07:32, time: 0.423, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 1.0488, loss/object/layer_-1_loss_cls: 0.2282, loss/object/layer_-1_loss_bbox: 1.6503, stats/object/matched_ious: 0.2257, loss: 2.9272, grad_norm: 6.6649
2025-04-25 08:57:56,978 - mmdet3d - INFO - Epoch [5][600/815]	lr: 5.015e-05, eta: 0:07:11, time: 0.421, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9827, loss/object/layer_-1_loss_cls: 0.2255, loss/object/layer_-1_loss_bbox: 1.6909, stats/object/matched_ious: 0.2304, loss: 2.8990, grad_norm: 6.3113
2025-04-25 08:58:17,986 - mmdet3d - INFO - Epoch [5][650/815]	lr: 5.015e-05, eta: 0:06:50, time: 0.420, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9763, loss/object/layer_-1_loss_cls: 0.2247, loss/object/layer_-1_loss_bbox: 1.5628, stats/object/matched_ious: 0.2531, loss: 2.7639, grad_norm: 6.6419
2025-04-25 08:58:38,985 - mmdet3d - INFO - Epoch [5][700/815]	lr: 5.015e-05, eta: 0:06:29, time: 0.420, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9830, loss/object/layer_-1_loss_cls: 0.2194, loss/object/layer_-1_loss_bbox: 1.5810, stats/object/matched_ious: 0.2364, loss: 2.7834, grad_norm: 6.4039
2025-04-25 08:58:59,847 - mmdet3d - INFO - Epoch [5][750/815]	lr: 5.015e-05, eta: 0:06:08, time: 0.417, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9680, loss/object/layer_-1_loss_cls: 0.2219, loss/object/layer_-1_loss_bbox: 1.6802, stats/object/matched_ious: 0.2462, loss: 2.8701, grad_norm: 6.6603
2025-04-25 08:59:21,398 - mmdet3d - INFO - Epoch [5][800/815]	lr: 5.015e-05, eta: 0:05:47, time: 0.431, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9320, loss/object/layer_-1_loss_cls: 0.2121, loss/object/layer_-1_loss_bbox: 1.5939, stats/object/matched_ious: 0.2492, loss: 2.7379, grad_norm: 6.2026
2025-04-25 08:59:28,110 - mmdet3d - INFO - Saving checkpoint at 5 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   268s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   132s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    92s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    68s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    57s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    47s[  ] 7/81, 1.8 task/s, elapsed: 4s, ETA:    42s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    36s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    34s[  ] 10/81, 2.4 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    28s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    26s[  ] 13/81, 2.8 task/s, elapsed: 5s, ETA:    24s[  ] 14/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.3 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.3 task/s, elapsed: 5s, ETA:    19s[  ] 18/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 19/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 20/81, 3.7 task/s, elapsed: 5s, ETA:    16s[  ] 21/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 22/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 23/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 24/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 25/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 26/81, 4.3 task/s, elapsed: 6s, ETA:    13s[  ] 27/81, 4.3 task/s, elapsed: 6s, ETA:    13s[  ] 28/81, 4.4 task/s, elapsed: 6s, ETA:    12s[  ] 29/81, 4.4 task/s, elapsed: 7s, ETA:    12s[  ] 30/81, 4.6 task/s, elapsed: 7s, ETA:    11s[  ] 31/81, 4.6 task/s, elapsed: 7s, ETA:    11s[  ] 32/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 33/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 34/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 36/81, 5.0 task/s, elapsed: 7s, ETA:     9s[  ] 37/81, 4.9 task/s, elapsed: 7s, ETA:     9s[  ] 38/81, 5.1 task/s, elapsed: 7s, ETA:     8s[  ] 39/81, 5.1 task/s, elapsed: 8s, ETA:     8s[  ] 40/81, 5.2 task/s, elapsed: 8s, ETA:     8s[> ] 41/81, 5.2 task/s, elapsed: 8s, ETA:     8s[> ] 42/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 43/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 44/81, 5.4 task/s, elapsed: 8s, ETA:     7s[> ] 45/81, 5.4 task/s, elapsed: 8s, ETA:     7s[> ] 46/81, 5.5 task/s, elapsed: 8s, ETA:     6s[> ] 47/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 48/81, 5.6 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 50/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 51/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 52/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 53/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 54/81, 5.8 task/s, elapsed: 9s, ETA:     5s[> ] 55/81, 5.8 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 57/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 58/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 59/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 60/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 61/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 62/81, 6.1 task/s, elapsed: 10s, ETA:     3s[> ] 63/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 64/81, 6.1 task/s, elapsed: 10s, ETA:     3s[> ] 65/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 66/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 67/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 68/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 69/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 70/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 71/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 72/81, 6.4 task/s, elapsed: 11s, ETA:     1s[> ] 73/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 74/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 75/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 76/81, 6.5 task/s, elapsed: 12s, ETA:     1s[> ] 77/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 78/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 79/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 80/81, 6.6 task/s, elapsed: 12s, ETA:     0s[>>] 81/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 82/81, 6.6 task/s, elapsed: 12s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 26.3 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 29.0 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 30.3 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 30.7 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 30.6 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 30.5 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 30.6 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 30.6 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 30.7 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 30.8 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 30.8 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 35/81, 30.9 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 30.8 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 30.8 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 30.8 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 30.7 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 30.7 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 30.7 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 30.7 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 30.7 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 30.6 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 30.6 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 47/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 30.2 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 30.2 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 30.2 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 30.1 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 30.1 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 30.1 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 30.1 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 30.1 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 30.1 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 29.9 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 29.7 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 29.3 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 29.3 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 29.4 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 29.4 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 29.4 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 29.4 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmp5ky6adc_/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f7ffa56c580>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 48% 39/81 [00:00<00:00, 387.89it/s] 96% 78/81 [00:00<00:00, 350.53it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0461
mATE: 0.8938
mASE: 0.7508
mAOE: 1.2633
mAVE: 1.1048
mAAE: 0.6340
NDS: 0.0952
Eval time: 3.1s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.253 	0.630 	0.313 	1.464 	0.280 	0.189 
truck               	0.000 	0.524 	0.383 	0.735 	1.599 	0.192 
bus                 	0.000 	1.565 	0.595 	1.761 	3.287 	1.000 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.208 	0.519 	0.482 	1.505 	0.598 	0.690 
motorcycle          	0.000 	0.699 	0.735 	1.904 	0.076 	0.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	1.000 	1.000 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-25 08:59:51,728 - mmdet3d - INFO - Epoch(val) [5][41]	object/car_ap_dist_0.5: 0.0336, object/car_ap_dist_1.0: 0.2001, object/car_ap_dist_2.0: 0.3662, object/car_ap_dist_4.0: 0.4133, object/car_trans_err: 0.6303, object/car_scale_err: 0.3132, object/car_orient_err: 1.4644, object/car_vel_err: 0.2796, object/car_attr_err: 0.1892, object/mATE: 0.8938, object/mASE: 0.7508, object/mAOE: 1.2633, object/mAVE: 1.1048, object/mAAE: 0.6340, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 0.5236, object/truck_scale_err: 0.3828, object/truck_orient_err: 0.7350, object/truck_vel_err: 1.5986, object/truck_attr_err: 0.1922, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0000, object/bus_ap_dist_2.0: 0.0000, object/bus_ap_dist_4.0: 0.0011, object/bus_trans_err: 1.5651, object/bus_scale_err: 0.5947, object/bus_orient_err: 1.7612, object/bus_vel_err: 3.2869, object/bus_attr_err: 1.0000, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 0.6990, object/motorcycle_scale_err: 0.7351, object/motorcycle_orient_err: 1.9041, object/motorcycle_vel_err: 0.0760, object/motorcycle_attr_err: 0.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.1227, object/pedestrian_ap_dist_1.0: 0.1811, object/pedestrian_ap_dist_2.0: 0.2282, object/pedestrian_ap_dist_4.0: 0.2982, object/pedestrian_trans_err: 0.5194, object/pedestrian_scale_err: 0.4824, object/pedestrian_orient_err: 1.5046, object/pedestrian_vel_err: 0.5976, object/pedestrian_attr_err: 0.6905, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 1.0000, object/traffic_cone_scale_err: 1.0000, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.0952, object/map: 0.0461
2025-04-25 09:00:15,361 - mmdet3d - INFO - Epoch [6][50/815]	lr: 1.358e-05, eta: 0:05:19, time: 0.472, data_time: 0.071, memory: 6630, loss/object/loss_heatmap: 0.8560, loss/object/layer_-1_loss_cls: 0.2127, loss/object/layer_-1_loss_bbox: 1.3804, stats/object/matched_ious: 0.2762, loss: 2.4491, grad_norm: 6.2888
2025-04-25 09:00:36,139 - mmdet3d - INFO - Epoch [6][100/815]	lr: 1.358e-05, eta: 0:04:58, time: 0.416, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 0.9219, loss/object/layer_-1_loss_cls: 0.2193, loss/object/layer_-1_loss_bbox: 1.5119, stats/object/matched_ious: 0.2600, loss: 2.6530, grad_norm: 6.8237
2025-04-25 09:00:57,202 - mmdet3d - INFO - Epoch [6][150/815]	lr: 1.358e-05, eta: 0:04:37, time: 0.421, data_time: 0.010, memory: 6630, loss/object/loss_heatmap: 0.9127, loss/object/layer_-1_loss_cls: 0.2101, loss/object/layer_-1_loss_bbox: 1.5714, stats/object/matched_ious: 0.2551, loss: 2.6942, grad_norm: 6.0806
2025-04-25 09:01:18,203 - mmdet3d - INFO - Epoch [6][200/815]	lr: 1.358e-05, eta: 0:04:17, time: 0.420, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9186, loss/object/layer_-1_loss_cls: 0.2174, loss/object/layer_-1_loss_bbox: 1.5588, stats/object/matched_ious: 0.2570, loss: 2.6948, grad_norm: 6.4983
2025-04-25 09:01:39,114 - mmdet3d - INFO - Epoch [6][250/815]	lr: 1.358e-05, eta: 0:03:56, time: 0.418, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9219, loss/object/layer_-1_loss_cls: 0.2125, loss/object/layer_-1_loss_bbox: 1.5225, stats/object/matched_ious: 0.2580, loss: 2.6569, grad_norm: 6.3083
2025-04-25 09:02:00,143 - mmdet3d - INFO - Epoch [6][300/815]	lr: 1.358e-05, eta: 0:03:35, time: 0.421, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8421, loss/object/layer_-1_loss_cls: 0.2010, loss/object/layer_-1_loss_bbox: 1.5901, stats/object/matched_ious: 0.2682, loss: 2.6332, grad_norm: 6.0790
2025-04-25 09:02:21,460 - mmdet3d - INFO - Epoch [6][350/815]	lr: 1.358e-05, eta: 0:03:14, time: 0.426, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8589, loss/object/layer_-1_loss_cls: 0.1939, loss/object/layer_-1_loss_bbox: 1.5770, stats/object/matched_ious: 0.2516, loss: 2.6299, grad_norm: 5.5312
2025-04-25 09:02:42,616 - mmdet3d - INFO - Epoch [6][400/815]	lr: 1.358e-05, eta: 0:02:53, time: 0.423, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8934, loss/object/layer_-1_loss_cls: 0.2090, loss/object/layer_-1_loss_bbox: 1.5281, stats/object/matched_ious: 0.2548, loss: 2.6306, grad_norm: 6.0829
2025-04-25 09:03:03,389 - mmdet3d - INFO - Epoch [6][450/815]	lr: 1.358e-05, eta: 0:02:32, time: 0.415, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8451, loss/object/layer_-1_loss_cls: 0.2062, loss/object/layer_-1_loss_bbox: 1.4481, stats/object/matched_ious: 0.2636, loss: 2.4994, grad_norm: 6.2599
2025-04-25 09:03:24,586 - mmdet3d - INFO - Epoch [6][500/815]	lr: 1.358e-05, eta: 0:02:11, time: 0.424, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9005, loss/object/layer_-1_loss_cls: 0.2069, loss/object/layer_-1_loss_bbox: 1.6161, stats/object/matched_ious: 0.2529, loss: 2.7235, grad_norm: 6.2974
2025-04-25 09:03:45,427 - mmdet3d - INFO - Epoch [6][550/815]	lr: 1.358e-05, eta: 0:01:50, time: 0.417, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8696, loss/object/layer_-1_loss_cls: 0.2087, loss/object/layer_-1_loss_bbox: 1.4984, stats/object/matched_ious: 0.2755, loss: 2.5767, grad_norm: 6.5436
2025-04-25 09:04:06,307 - mmdet3d - INFO - Epoch [6][600/815]	lr: 1.358e-05, eta: 0:01:29, time: 0.418, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9303, loss/object/layer_-1_loss_cls: 0.2072, loss/object/layer_-1_loss_bbox: 1.6256, stats/object/matched_ious: 0.2567, loss: 2.7631, grad_norm: 6.5497
2025-04-25 09:04:27,306 - mmdet3d - INFO - Epoch [6][650/815]	lr: 1.358e-05, eta: 0:01:09, time: 0.420, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8598, loss/object/layer_-1_loss_cls: 0.1987, loss/object/layer_-1_loss_bbox: 1.5603, stats/object/matched_ious: 0.2566, loss: 2.6188, grad_norm: 6.3497
2025-04-25 09:04:48,410 - mmdet3d - INFO - Epoch [6][700/815]	lr: 1.358e-05, eta: 0:00:48, time: 0.422, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.9031, loss/object/layer_-1_loss_cls: 0.1991, loss/object/layer_-1_loss_bbox: 1.5439, stats/object/matched_ious: 0.2558, loss: 2.6461, grad_norm: 6.2009
2025-04-25 09:05:09,345 - mmdet3d - INFO - Epoch [6][750/815]	lr: 1.358e-05, eta: 0:00:27, time: 0.419, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8707, loss/object/layer_-1_loss_cls: 0.2093, loss/object/layer_-1_loss_bbox: 1.4218, stats/object/matched_ious: 0.2776, loss: 2.5018, grad_norm: 6.6522
2025-04-25 09:05:30,439 - mmdet3d - INFO - Epoch [6][800/815]	lr: 1.358e-05, eta: 0:00:06, time: 0.422, data_time: 0.011, memory: 6630, loss/object/loss_heatmap: 0.8803, loss/object/layer_-1_loss_cls: 0.2055, loss/object/layer_-1_loss_bbox: 1.5417, stats/object/matched_ious: 0.2668, loss: 2.6275, grad_norm: 6.3192
2025-04-25 09:05:36,910 - mmdet3d - INFO - Saving checkpoint at 6 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   270s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   133s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    93s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    69s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    58s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    47s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    42s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    37s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    34s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    29s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    26s[  ] 13/81, 2.8 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 3.0 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.3 task/s, elapsed: 5s, ETA:    20s[  ] 18/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 19/81, 3.5 task/s, elapsed: 5s, ETA:    18s[  ] 20/81, 3.7 task/s, elapsed: 5s, ETA:    17s[  ] 21/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 22/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 23/81, 3.9 task/s, elapsed: 6s, ETA:    15s[  ] 24/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 25/81, 4.1 task/s, elapsed: 6s, ETA:    14s[  ] 26/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 27/81, 4.2 task/s, elapsed: 6s, ETA:    13s[  ] 28/81, 4.4 task/s, elapsed: 6s, ETA:    12s[  ] 29/81, 4.4 task/s, elapsed: 7s, ETA:    12s[  ] 30/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 31/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 32/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 33/81, 4.7 task/s, elapsed: 7s, ETA:    10s[  ] 34/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.8 task/s, elapsed: 7s, ETA:    10s[  ] 36/81, 4.9 task/s, elapsed: 7s, ETA:     9s[  ] 37/81, 4.9 task/s, elapsed: 8s, ETA:     9s[  ] 38/81, 5.0 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 5.0 task/s, elapsed: 8s, ETA:     8s[  ] 40/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 41/81, 5.1 task/s, elapsed: 8s, ETA:     8s[> ] 42/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 43/81, 5.2 task/s, elapsed: 8s, ETA:     7s[> ] 44/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 45/81, 5.3 task/s, elapsed: 8s, ETA:     7s[> ] 46/81, 5.4 task/s, elapsed: 8s, ETA:     6s[> ] 47/81, 5.4 task/s, elapsed: 9s, ETA:     6s[> ] 48/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.5 task/s, elapsed: 9s, ETA:     6s[> ] 50/81, 5.6 task/s, elapsed: 9s, ETA:     6s[> ] 51/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 52/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 53/81, 5.6 task/s, elapsed: 9s, ETA:     5s[> ] 54/81, 5.7 task/s, elapsed: 9s, ETA:     5s[> ] 55/81, 5.7 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 57/81, 5.8 task/s, elapsed: 10s, ETA:     4s[> ] 58/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 59/81, 5.9 task/s, elapsed: 10s, ETA:     4s[> ] 60/81, 6.0 task/s, elapsed: 10s, ETA:     4s[> ] 61/81, 5.9 task/s, elapsed: 10s, ETA:     3s[> ] 62/81, 6.0 task/s, elapsed: 10s, ETA:     3s[> ] 63/81, 6.0 task/s, elapsed: 11s, ETA:     3s[> ] 64/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 65/81, 6.1 task/s, elapsed: 11s, ETA:     3s[> ] 66/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 67/81, 6.1 task/s, elapsed: 11s, ETA:     2s[> ] 68/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 69/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 70/81, 6.3 task/s, elapsed: 11s, ETA:     2s[> ] 71/81, 6.2 task/s, elapsed: 11s, ETA:     2s[> ] 72/81, 6.3 task/s, elapsed: 11s, ETA:     1s[> ] 73/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 74/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 75/81, 6.3 task/s, elapsed: 12s, ETA:     1s[> ] 76/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 77/81, 6.4 task/s, elapsed: 12s, ETA:     1s[> ] 78/81, 6.5 task/s, elapsed: 12s, ETA:     0s[> ] 79/81, 6.4 task/s, elapsed: 12s, ETA:     0s[> ] 80/81, 6.5 task/s, elapsed: 12s, ETA:     0s[>>] 81/81, 6.5 task/s, elapsed: 13s, ETA:     0s[>>] 82/81, 6.5 task/s, elapsed: 13s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 29.7 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 31.0 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 31.5 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 31.4 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 30.8 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 30.7 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 30.6 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 30.6 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 30.7 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 30.7 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 30.7 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 30.7 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 30.7 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 30.8 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 35/81, 31.3 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.2 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.2 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.1 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.1 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 31.1 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 31.1 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 31.1 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 31.0 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 31.0 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 30.9 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 30.9 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 30.9 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 30.8 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 30.8 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 30.8 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 30.7 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 30.7 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 30.7 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 30.5 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 30.5 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 30.5 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 30.5 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 30.5 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 30.5 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 30.6 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 30.6 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 30.6 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 30.6 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 30.6 task/s, elapsed: 2s, ETA:     0s[> ] 77/81, 30.6 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 30.6 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 30.6 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 30.6 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.7 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmp0f_6lozc/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f7ff8a9e670>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 48% 39/81 [00:00<00:00, 386.80it/s] 96% 78/81 [00:00<00:00, 350.41it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.0747
mATE: 0.8152
mASE: 0.7183
mAOE: 1.3080
mAVE: 1.2459
mAAE: 0.6357
NDS: 0.1205
Eval time: 3.5s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.316 	0.618 	0.290 	1.354 	0.335 	0.216 
truck               	0.000 	0.659 	0.448 	0.890 	1.465 	0.186 
bus                 	0.114 	1.096 	0.696 	2.008 	4.482 	0.984 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.318 	0.503 	0.387 	1.572 	0.611 	0.700 
motorcycle          	0.000 	0.641 	0.745 	1.948 	0.074 	0.000 
bicycle             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
traffic_cone        	0.000 	0.634 	0.618 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-25 09:06:00,719 - mmdet3d - INFO - Epoch(val) [6][41]	object/car_ap_dist_0.5: 0.0518, object/car_ap_dist_1.0: 0.2479, object/car_ap_dist_2.0: 0.4503, object/car_ap_dist_4.0: 0.5131, object/car_trans_err: 0.6184, object/car_scale_err: 0.2897, object/car_orient_err: 1.3540, object/car_vel_err: 0.3350, object/car_attr_err: 0.2159, object/mATE: 0.8152, object/mASE: 0.7183, object/mAOE: 1.3080, object/mAVE: 1.2459, object/mAAE: 0.6357, object/truck_ap_dist_0.5: 0.0000, object/truck_ap_dist_1.0: 0.0000, object/truck_ap_dist_2.0: 0.0000, object/truck_ap_dist_4.0: 0.0000, object/truck_trans_err: 0.6594, object/truck_scale_err: 0.4477, object/truck_orient_err: 0.8901, object/truck_vel_err: 1.4646, object/truck_attr_err: 0.1855, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.0000, object/bus_ap_dist_1.0: 0.0069, object/bus_ap_dist_2.0: 0.1164, object/bus_ap_dist_4.0: 0.3319, object/bus_trans_err: 1.0959, object/bus_scale_err: 0.6959, object/bus_orient_err: 2.0075, object/bus_vel_err: 4.4823, object/bus_attr_err: 0.9842, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.0000, object/motorcycle_ap_dist_1.0: 0.0000, object/motorcycle_ap_dist_2.0: 0.0000, object/motorcycle_ap_dist_4.0: 0.0000, object/motorcycle_trans_err: 0.6413, object/motorcycle_scale_err: 0.7452, object/motorcycle_orient_err: 1.9481, object/motorcycle_vel_err: 0.0739, object/motorcycle_attr_err: 0.0000, object/bicycle_ap_dist_0.5: 0.0000, object/bicycle_ap_dist_1.0: 0.0000, object/bicycle_ap_dist_2.0: 0.0000, object/bicycle_ap_dist_4.0: 0.0000, object/bicycle_trans_err: 1.0000, object/bicycle_scale_err: 1.0000, object/bicycle_orient_err: 1.0000, object/bicycle_vel_err: 1.0000, object/bicycle_attr_err: 1.0000, object/pedestrian_ap_dist_0.5: 0.2018, object/pedestrian_ap_dist_1.0: 0.2941, object/pedestrian_ap_dist_2.0: 0.3530, object/pedestrian_ap_dist_4.0: 0.4227, object/pedestrian_trans_err: 0.5025, object/pedestrian_scale_err: 0.3866, object/pedestrian_orient_err: 1.5721, object/pedestrian_vel_err: 0.6110, object/pedestrian_attr_err: 0.7003, object/traffic_cone_ap_dist_0.5: 0.0000, object/traffic_cone_ap_dist_1.0: 0.0000, object/traffic_cone_ap_dist_2.0: 0.0000, object/traffic_cone_ap_dist_4.0: 0.0000, object/traffic_cone_trans_err: 0.6342, object/traffic_cone_scale_err: 0.6181, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.1205, object/map: 0.0747
