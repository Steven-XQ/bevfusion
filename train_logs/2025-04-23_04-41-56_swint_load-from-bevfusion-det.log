2025-04-23 04:42:08,400 - mmdet3d - INFO - Config:
seed = 0
deterministic = False
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
load_from = 'pretrained/bevfusion-det.pth'
resume_from = None
cudnn_benchmark = False
fp16 = dict(loss_scale=dict(growth_interval=2000))
max_epochs = 20
runner = dict(type='CustomEpochBasedRunner', max_epochs=20)
dataset_type = 'NuScenesDataset'
dataset_root = 'data/nuscenes/'
gt_paste_stop_epoch = -1
reduce_beams = 32
load_dim = 5
use_dim = 5
load_augmented = None
point_cloud_range = [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]
voxel_size = [0.075, 0.075, 0.2]
image_size = [256, 704]
augment2d = dict(
    resize=[[0.38, 0.55], [0.48, 0.48]],
    rotate=[-5.4, 5.4],
    gridmask=dict(prob=0.0, fixed_prob=True))
augment3d = dict(
    scale=[0.9, 1.1], rotate=[-0.78539816, 0.78539816], translate=0.5)
object_classes = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
map_classes = [
    'drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area',
    'divider'
]
input_modality = dict(
    use_lidar=True,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=False)
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=0,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadRadarPointsMultiSweeps',
        load_dim=18,
        sweeps_num=6,
        use_dim=[
            0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
            47, 48, 49, 50, 51, 52, 53, 54, 55, 56
        ],
        max_num=2500,
        compensate_velocity=True,
        filtering='none',
        normalize=False),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ObjectPaste',
        stop_epoch=-1,
        db_sampler=dict(
            dataset_root='data/nuscenes/',
            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(
                    car=5,
                    truck=5,
                    bus=5,
                    trailer=5,
                    construction_vehicle=5,
                    traffic_cone=5,
                    barrier=5,
                    motorcycle=5,
                    bicycle=5,
                    pedestrian=5)),
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            sample_groups=dict(
                car=2,
                truck=3,
                construction_vehicle=7,
                bus=4,
                trailer=6,
                barrier=2,
                motorcycle=6,
                bicycle=6,
                pedestrian=2,
                traffic_cone=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32))),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.38, 0.55],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[-5.4, 5.4],
        rand_flip=True,
        is_train=True),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[0.9, 1.1],
        rot_lim=[-0.78539816, 0.78539816],
        trans_lim=0.5,
        is_train=True),
    dict(type='RandomFlip3D'),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='GridMask',
        use_h=True,
        use_w=True,
        max_epoch=20,
        rotate=1,
        offset=False,
        ratio=0.5,
        mode=1,
        prob=0.0,
        fixed_prob=True),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadRadarPointsMultiSweeps',
        load_dim=18,
        sweeps_num=6,
        use_dim=[
            0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
            47, 48, 49, 50, 51, 52, 53, 54, 55, 56
        ],
        max_num=2500,
        compensate_velocity=True,
        filtering='none',
        normalize=False),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.48, 0.48],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[0.0, 0.0],
        rand_flip=False,
        is_train=False),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[1.0, 1.0],
        rot_lim=[0.0, 0.0],
        trans_lim=0.0,
        is_train=False),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='DefaultFormatBundle3D',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='CBGSDataset',
        dataset=dict(
            type='NuScenesDataset',
            dataset_root='data/nuscenes/',
            ann_file='data/nuscenes/nuscenes_infos_train.pkl',
            pipeline=[
                dict(type='LoadMultiViewImageFromFiles', to_float32=True),
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    load_augmented=None),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=0,
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    pad_empty_sweeps=True,
                    remove_close=True,
                    load_augmented=None),
                dict(
                    type='LoadRadarPointsMultiSweeps',
                    load_dim=18,
                    sweeps_num=6,
                    use_dim=[
                        0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                        55, 56
                    ],
                    max_num=2500,
                    compensate_velocity=True,
                    filtering='none',
                    normalize=False),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True,
                    with_attr_label=False),
                dict(
                    type='ObjectPaste',
                    stop_epoch=-1,
                    db_sampler=dict(
                        dataset_root='data/nuscenes/',
                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                car=5,
                                truck=5,
                                bus=5,
                                trailer=5,
                                construction_vehicle=5,
                                traffic_cone=5,
                                barrier=5,
                                motorcycle=5,
                                bicycle=5,
                                pedestrian=5)),
                        classes=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        sample_groups=dict(
                            car=2,
                            truck=3,
                            construction_vehicle=7,
                            bus=4,
                            trailer=6,
                            barrier=2,
                            motorcycle=6,
                            bicycle=6,
                            pedestrian=2,
                            traffic_cone=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=5,
                            reduce_beams=32))),
                dict(
                    type='ImageAug3D',
                    final_dim=[256, 704],
                    resize_lim=[0.38, 0.55],
                    bot_pct_lim=[0.0, 0.0],
                    rot_lim=[-5.4, 5.4],
                    rand_flip=True,
                    is_train=True),
                dict(
                    type='GlobalRotScaleTrans',
                    resize_lim=[0.9, 1.1],
                    rot_lim=[-0.78539816, 0.78539816],
                    trans_lim=0.5,
                    is_train=True),
                dict(type='RandomFlip3D'),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectNameFilter',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='ImageNormalize',
                    mean=[0.485, 0.456, 0.406],
                    std=[0.229, 0.224, 0.225]),
                dict(
                    type='GridMask',
                    use_h=True,
                    use_w=True,
                    max_epoch=20,
                    rotate=1,
                    offset=False,
                    ratio=0.5,
                    mode=1,
                    prob=0.0,
                    fixed_prob=True),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='Collect3D',
                    keys=[
                        'img', 'points', 'radar', 'gt_bboxes_3d',
                        'gt_labels_3d'
                    ],
                    meta_keys=[
                        'camera_intrinsics', 'camera2ego', 'lidar2ego',
                        'lidar2camera', 'lidar2image', 'camera2lidar',
                        'img_aug_matrix', 'lidar_aug_matrix'
                    ]),
                dict(type='GTDepth', keyframe_only=True)
            ],
            object_classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            map_classes=[
                'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
                'carpark_area', 'divider'
            ],
            modality=dict(
                use_lidar=True,
                use_camera=True,
                use_radar=False,
                use_map=False,
                use_external=False),
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        dataset_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadRadarPointsMultiSweeps',
                load_dim=18,
                sweeps_num=6,
                use_dim=[
                    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
                ],
                max_num=2500,
                compensate_velocity=True,
                filtering='none',
                normalize=False),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='DefaultFormatBundle3D',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area', 'divider'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        dataset_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadRadarPointsMultiSweeps',
                load_dim=18,
                sweeps_num=6,
                use_dim=[
                    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
                ],
                max_num=2500,
                compensate_velocity=True,
                filtering='none',
                normalize=False),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='DefaultFormatBundle3D',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area', 'divider'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            load_augmented=None),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=9,
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            pad_empty_sweeps=True,
            remove_close=True,
            load_augmented=None),
        dict(
            type='LoadRadarPointsMultiSweeps',
            load_dim=18,
            sweeps_num=6,
            use_dim=[
                0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
                29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
                45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
            ],
            max_num=2500,
            compensate_velocity=True,
            filtering='none',
            normalize=False),
        dict(
            type='LoadAnnotations3D',
            with_bbox_3d=True,
            with_label_3d=True,
            with_attr_label=False),
        dict(
            type='ImageAug3D',
            final_dim=[256, 704],
            resize_lim=[0.48, 0.48],
            bot_pct_lim=[0.0, 0.0],
            rot_lim=[0.0, 0.0],
            rand_flip=False,
            is_train=False),
        dict(
            type='GlobalRotScaleTrans',
            resize_lim=[1.0, 1.0],
            rot_lim=[0.0, 0.0],
            trans_lim=0.0,
            is_train=False),
        dict(
            type='PointsRangeFilter',
            point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
        dict(
            type='ImageNormalize',
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]),
        dict(
            type='DefaultFormatBundle3D',
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ]),
        dict(
            type='Collect3D',
            keys=['img', 'points', 'radar', 'gt_bboxes_3d', 'gt_labels_3d'],
            meta_keys=[
                'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
                'lidar2image', 'camera2lidar', 'img_aug_matrix',
                'lidar_aug_matrix'
            ]),
        dict(type='GTDepth', keyframe_only=True)
    ])
radar_sweeps = 6
radar_max_points = 2500
radar_use_dims = [
    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
    51, 52, 53, 54, 55, 56
]
radar_compensate_velocity = True
radar_filtering = 'none'
radar_voxel_size = [0.8, 0.8, 8]
radar_jitter = 0
radar_normalize = False
model = dict(
    type='BEVFusion',
    encoders=dict(
        camera=dict(
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='DepthLSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-54.0, 54.0, 0.3],
                ybound=[-54.0, 54.0, 0.3],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2),
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.2,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True)),
        lidar=dict(
            voxelize=dict(
                max_num_points=10,
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                voxel_size=[0.075, 0.075, 0.2],
                max_voxels=[120000, 160000]),
            backbone=dict(
                type='SparseEncoder',
                in_channels=5,
                sparse_shape=[1440, 1440, 41],
                output_channels=128,
                order=['conv', 'norm', 'act'],
                encoder_channels=[[16, 16, 32], [32, 32, 64], [64, 64, 128],
                                  [128, 128]],
                encoder_paddings=[[0, 0, 1], [0, 0, 1], [0, 0, [1, 1, 0]],
                                  [0, 0]],
                block_type='basicblock'))),
    fuser=dict(type='ConvFuser', in_channels=[80, 256], out_channels=256),
    heads=dict(
        map=None,
        object=dict(
            type='TransFusionHead',
            num_proposals=200,
            auxiliary=True,
            in_channels=512,
            hidden_channel=128,
            num_classes=10,
            num_decoder_layers=1,
            num_heads=8,
            nms_kernel_size=3,
            ffn_channel=256,
            dropout=0.1,
            bn_momentum=0.1,
            activation='relu',
            train_cfg=dict(
                dataset='nuScenes',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                grid_size=[1440, 1440, 41],
                voxel_size=[0.075, 0.075, 0.2],
                out_size_factor=8,
                gaussian_overlap=0.1,
                min_radius=2,
                pos_weight=-1,
                code_weights=[
                    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2
                ],
                assigner=dict(
                    type='HungarianAssigner3D',
                    iou_calculator=dict(
                        type='BboxOverlaps3D', coordinate='lidar'),
                    cls_cost=dict(
                        type='FocalLossCost',
                        gamma=2.0,
                        alpha=0.25,
                        weight=0.15),
                    reg_cost=dict(type='BBoxBEVL1Cost', weight=0.25),
                    iou_cost=dict(type='IoU3DCost', weight=0.25))),
            test_cfg=dict(
                dataset='nuScenes',
                grid_size=[1440, 1440, 41],
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                pc_range=[-54.0, -54.0],
                nms_type=None),
            common_heads=dict(
                center=[2, 2],
                height=[1, 2],
                dim=[3, 2],
                rot=[2, 2],
                vel=[2, 2]),
            bbox_coder=dict(
                type='TransFusionBBoxCoder',
                pc_range=[-54.0, -54.0],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                score_threshold=0.0,
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                code_size=10),
            loss_cls=dict(
                type='FocalLoss',
                use_sigmoid=True,
                gamma=2.0,
                alpha=0.25,
                reduction='mean',
                loss_weight=1.0),
            loss_heatmap=dict(
                type='GaussianFocalLoss', reduction='mean', loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', reduction='mean',
                           loss_weight=0.25))),
    decoder=dict(
        backbone=dict(
            type='SECOND',
            in_channels=256,
            out_channels=[128, 256],
            layer_nums=[5, 5],
            layer_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            conv_cfg=dict(type='Conv2d', bias=False)),
        neck=dict(
            type='SECONDFPN',
            in_channels=[128, 256],
            out_channels=[256, 256],
            upsample_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            upsample_cfg=dict(type='deconv', bias=False),
            use_conv_for_no_stride=True)))
optimizer = dict(type='AdamW', lr=0.0002, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.33333333,
    min_lr_ratio=0.001)
momentum_config = dict(policy='cyclic')
run_dir = 'runs/run-c9b79eff-83575dcd'

2025-04-23 04:42:08,401 - mmdet3d - INFO - Set random seed to 0, deterministic mode: False
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 3068 pedestrian database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 4082 car database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 773 traffic_cone database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 147 bicycle database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 1851 barrier database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 451 truck database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 337 bus database infos
2025-04-23 04:42:08,895 - mmdet3d - INFO - load 174 construction_vehicle database infos
2025-04-23 04:42:08,896 - mmdet3d - INFO - load 57 movable_object.pushable_pullable database infos
2025-04-23 04:42:08,896 - mmdet3d - INFO - load 179 motorcycle database infos
2025-04-23 04:42:08,896 - mmdet3d - INFO - load 13 movable_object.debris database infos
2025-04-23 04:42:08,896 - mmdet3d - INFO - load 59 trailer database infos
2025-04-23 04:42:08,896 - mmdet3d - INFO - load 25 human.pedestrian.personal_mobility database infos
2025-04-23 04:42:08,916 - mmdet3d - INFO - After filter database:
2025-04-23 04:42:08,916 - mmdet3d - INFO - load 2395 pedestrian database infos
2025-04-23 04:42:08,916 - mmdet3d - INFO - load 2287 car database infos
2025-04-23 04:42:08,916 - mmdet3d - INFO - load 381 traffic_cone database infos
2025-04-23 04:42:08,916 - mmdet3d - INFO - load 108 bicycle database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 1442 barrier database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 381 truck database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 275 bus database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 155 construction_vehicle database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 57 movable_object.pushable_pullable database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 124 motorcycle database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 13 movable_object.debris database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 57 trailer database infos
2025-04-23 04:42:08,917 - mmdet3d - INFO - load 25 human.pedestrian.personal_mobility database infos
/opt/conda/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1639180588308/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2025-04-23 04:42:09,285 - mmdet - WARNING - No pre-trained weights for SwinTransformer, training start from scratch
2025-04-23 04:42:09,504 - mmdet - WARNING - No pre-trained weights for SwinTransformer, training start from scratch
2025-04-23 04:42:09,723 - mmdet3d - INFO - Model:
BEVFusion(
  (encoders): ModuleDict(
    (camera): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): DepthLSSTransform(
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
    (lidar): ModuleDict(
      (voxelize): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
      (backbone): SparseEncoder(
        (conv_input): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (encoder_layers): SparseSequential(
          (encoder_layer1): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer2): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer3): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer4): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv_out): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
  )
  (fuser): ConvFuser(
    (0): Conv2d(336, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (decoder): ModuleDict(
    (backbone): SECOND(
      (blocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
    (neck): SECONDFPN(
      (deblocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    init_cfg=[{'type': 'Kaiming', 'layer': 'ConvTranspose2d'}, {'type': 'Constant', 'layer': 'NaiveSyncBatchNorm2d', 'val': 1.0}]
  )
  (heads): ModuleDict(
    (object): TransFusionHead(
      (loss_cls): FocalLoss()
      (loss_bbox): L1Loss()
      (loss_iou): VarifocalLoss()
      (loss_heatmap): GaussianFocalLoss()
      (shared_conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (heatmap_head): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): Conv2d(128, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (class_encoding): Conv1d(10, 128, kernel_size=(1,), stride=(1,))
      (decoder): ModuleList(
        (0): TransformerDecoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (multihead_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=256, bias=True)
          (dropout): Dropout(p=0.1, inplace=False)
          (linear2): Linear(in_features=256, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.1, inplace=False)
          (dropout2): Dropout(p=0.1, inplace=False)
          (dropout3): Dropout(p=0.1, inplace=False)
          (self_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
          (cross_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
        )
      )
      (prediction_heads): ModuleList(
        (0): FFN(
          (center): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 10, kernel_size=(1,), stride=(1,))
          )
        )
      )
    )
  )
)
2025-04-23 04:42:16,093 - mmdet3d - INFO - load checkpoint from local path: pretrained/bevfusion-det.pth
2025-04-23 04:42:16,251 - mmdet3d - INFO - Start running, host: root@1cf78a6d245c, work_dir: /bevfusion/runs/run-c9b79eff-83575dcd
2025-04-23 04:42:16,251 - mmdet3d - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-04-23 04:42:16,252 - mmdet3d - INFO - workflow: [('train', 1)], max: 20 epochs
2025-04-23 04:42:16,255 - mmdet3d - INFO - Checkpoints will be saved to /bevfusion/runs/run-c9b79eff-83575dcd by HardDiskBackend.
/bevfusion/mmdet3d/models/heads/bbox/transfusion.py:273: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  top_proposals_class = top_proposals // heatmap.shape[-1]
/bevfusion/mmdet3d/models/heads/bbox/transfusion.py:535: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  grid_size[:2] // self.train_cfg["out_size_factor"]
2025-04-23 04:42:23,983 - mmcv - INFO - Reducer buckets have been rebuilt in this iteration.
2025-04-23 04:43:06,449 - mmdet3d - INFO - Epoch [1][50/204]	lr: 7.973e-05, eta: 1:07:03, time: 0.998, data_time: 0.108, memory: 17703, loss/object/loss_heatmap: 0.6689, loss/object/layer_-1_loss_cls: 0.1017, loss/object/layer_-1_loss_bbox: 1.0785, stats/object/matched_ious: 0.5012, loss: 1.8491, grad_norm: nan
2025-04-23 04:43:49,536 - mmdet3d - INFO - Epoch [1][100/204]	lr: 9.307e-05, eta: 1:01:41, time: 0.862, data_time: 0.025, memory: 17739, loss/object/loss_heatmap: 0.5279, loss/object/layer_-1_loss_cls: 0.0807, loss/object/layer_-1_loss_bbox: 0.8360, stats/object/matched_ious: 0.5282, loss: 1.4445, grad_norm: 6.4126
2025-04-23 04:44:32,777 - mmdet3d - INFO - Epoch [1][150/204]	lr: 1.064e-04, eta: 0:59:29, time: 0.865, data_time: 0.027, memory: 17741, loss/object/loss_heatmap: 0.4967, loss/object/layer_-1_loss_cls: 0.0768, loss/object/layer_-1_loss_bbox: 0.7816, stats/object/matched_ious: 0.5344, loss: 1.3551, grad_norm: 7.3777
2025-04-23 04:45:16,035 - mmdet3d - INFO - Epoch [1][200/204]	lr: 1.197e-04, eta: 0:58:02, time: 0.865, data_time: 0.028, memory: 17741, loss/object/loss_heatmap: 0.4544, loss/object/layer_-1_loss_cls: 0.0708, loss/object/layer_-1_loss_bbox: 0.7257, stats/object/matched_ious: 0.5376, loss: 1.2509, grad_norm: 4.8755
2025-04-23 04:45:19,650 - mmdet3d - INFO - Saving checkpoint at 1 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   273s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   135s/bevfusion/mmdet3d/core/bbox/coders/transfusion_bbox_coder.py:96: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.post_center_range = torch.tensor(
[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    94s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    69s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    58s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    47s[  ] 7/81, 1.8 task/s, elapsed: 4s, ETA:    42s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    36s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    34s[  ] 10/81, 2.4 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    28s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    26s[  ] 13/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 14/81, 2.8 task/s, elapsed: 5s, ETA:    24s[  ] 15/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 16/81, 3.1 task/s, elapsed: 5s, ETA:    21s[  ] 17/81, 3.1 task/s, elapsed: 5s, ETA:    20s[  ] 18/81, 3.3 task/s, elapsed: 5s, ETA:    19s[  ] 19/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 20/81, 3.5 task/s, elapsed: 6s, ETA:    17s[  ] 21/81, 3.6 task/s, elapsed: 6s, ETA:    17s[  ] 22/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 23/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.8 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 3.9 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 28/81, 4.1 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 4.1 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.3 task/s, elapsed: 7s, ETA:    12s[  ] 31/81, 4.3 task/s, elapsed: 7s, ETA:    12s[  ] 32/81, 4.4 task/s, elapsed: 7s, ETA:    11s[  ] 33/81, 4.4 task/s, elapsed: 7s, ETA:    11s[  ] 34/81, 4.6 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.6 task/s, elapsed: 8s, ETA:    10s[  ] 36/81, 4.7 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 40/81, 4.7 task/s, elapsed: 8s, ETA:     9s[> ] 41/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 42/81, 4.9 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 5.0 task/s, elapsed: 9s, ETA:     7s[> ] 45/81, 5.0 task/s, elapsed: 9s, ETA:     7s[> ] 46/81, 5.1 task/s, elapsed: 9s, ETA:     7s[> ] 47/81, 5.0 task/s, elapsed: 9s, ETA:     7s[> ] 48/81, 5.1 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 52/81, 5.2 task/s, elapsed: 10s, ETA:     6s[> ] 53/81, 5.2 task/s, elapsed: 10s, ETA:     5s[> ] 54/81, 5.3 task/s, elapsed: 10s, ETA:     5s[> ] 55/81, 5.2 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.3 task/s, elapsed: 10s, ETA:     5s[> ] 57/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 58/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.5 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 62/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 63/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 64/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 65/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.6 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.6 task/s, elapsed: 12s, ETA:     3s[> ] 68/81, 5.6 task/s, elapsed: 12s, ETA:     2s[> ] 69/81, 5.6 task/s, elapsed: 12s, ETA:     2s[> ] 70/81, 5.7 task/s, elapsed: 12s, ETA:     2s[> ] 71/81, 5.7 task/s, elapsed: 12s, ETA:     2s[> ] 72/81, 5.8 task/s, elapsed: 12s, ETA:     2s[> ] 73/81, 5.6 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 76/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 77/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 78/81, 5.8 task/s, elapsed: 13s, ETA:     1s[> ] 79/81, 5.8 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.9 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.8 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.9 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 28.0 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 29.9 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 31.0 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 31.5 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 31.5 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 31.5 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 31.4 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 31.4 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 31.5 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 31.5 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 31.9 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 31.9 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 32.0 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 32.1 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 32.2 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 32.2 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 32.3 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 32.4 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 32.4 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 32.5 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 32.5 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 32.5 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 32.5 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 32.4 task/s, elapsed: 1s, ETA:     1s[  ] 34/81, 32.3 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 32.4 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 32.4 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 32.4 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 32.3 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 32.3 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 32.3 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 32.2 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 32.2 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 32.1 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 32.1 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 32.0 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 31.9 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 31.9 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 31.8 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 31.8 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 31.8 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 31.7 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 31.7 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 31.7 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 31.6 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 31.6 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 31.6 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 31.6 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 28.8 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 28.8 task/s, elapsed: 2s, ETA:     1s[> ] 67/81, 28.8 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 28.8 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 28.3 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 27.6 task/s, elapsed: 3s, ETA:     0s[> ] 71/81, 27.7 task/s, elapsed: 3s, ETA:     0s[> ] 72/81, 27.8 task/s, elapsed: 3s, ETA:     0s[> ] 73/81, 27.9 task/s, elapsed: 3s, ETA:     0s[> ] 74/81, 28.0 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 28.0 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 28.1 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 28.1 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 28.2 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 28.3 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 28.3 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 28.4 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpryb_563z/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8684e41b50>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 48% 39/81 [00:00<00:00, 387.20it/s] 96% 78/81 [00:00<00:00, 349.16it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.4811
mATE: 0.4369
mASE: 0.4673
mAOE: 0.5702
mAVE: 0.5669
mAAE: 0.3612
NDS: 0.5003
Eval time: 3.1s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.875 	0.188 	0.169 	0.116 	0.350 	0.177 
truck               	0.778 	0.136 	0.134 	0.026 	0.090 	0.005 
bus                 	0.848 	0.335 	0.101 	0.039 	1.044 	0.357 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.794 	0.180 	0.293 	0.807 	0.495 	0.302 
motorcycle          	0.674 	0.197 	0.309 	0.449 	0.089 	0.042 
bicycle             	0.071 	0.253 	0.280 	0.695 	0.467 	0.007 
traffic_cone        	0.773 	0.081 	0.387 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 04:45:43,206 - mmdet3d - INFO - Epoch(val) [1][41]	object/car_ap_dist_0.5: 0.7751, object/car_ap_dist_1.0: 0.8882, object/car_ap_dist_2.0: 0.9106, object/car_ap_dist_4.0: 0.9249, object/car_trans_err: 0.1881, object/car_scale_err: 0.1693, object/car_orient_err: 0.1156, object/car_vel_err: 0.3498, object/car_attr_err: 0.1772, object/mATE: 0.4369, object/mASE: 0.4673, object/mAOE: 0.5702, object/mAVE: 0.5669, object/mAAE: 0.3612, object/truck_ap_dist_0.5: 0.7347, object/truck_ap_dist_1.0: 0.7839, object/truck_ap_dist_2.0: 0.7839, object/truck_ap_dist_4.0: 0.8099, object/truck_trans_err: 0.1358, object/truck_scale_err: 0.1339, object/truck_orient_err: 0.0260, object/truck_vel_err: 0.0903, object/truck_attr_err: 0.0050, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.4852, object/bus_ap_dist_1.0: 0.9270, object/bus_ap_dist_2.0: 0.9894, object/bus_ap_dist_4.0: 0.9894, object/bus_trans_err: 0.3350, object/bus_scale_err: 0.1009, object/bus_orient_err: 0.0390, object/bus_vel_err: 1.0440, object/bus_attr_err: 0.3568, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.5924, object/motorcycle_ap_dist_1.0: 0.6887, object/motorcycle_ap_dist_2.0: 0.6960, object/motorcycle_ap_dist_4.0: 0.7170, object/motorcycle_trans_err: 0.1972, object/motorcycle_scale_err: 0.3087, object/motorcycle_orient_err: 0.4491, object/motorcycle_vel_err: 0.0892, object/motorcycle_attr_err: 0.0415, object/bicycle_ap_dist_0.5: 0.0660, object/bicycle_ap_dist_1.0: 0.0699, object/bicycle_ap_dist_2.0: 0.0699, object/bicycle_ap_dist_4.0: 0.0766, object/bicycle_trans_err: 0.2525, object/bicycle_scale_err: 0.2800, object/bicycle_orient_err: 0.6946, object/bicycle_vel_err: 0.4665, object/bicycle_attr_err: 0.0073, object/pedestrian_ap_dist_0.5: 0.7490, object/pedestrian_ap_dist_1.0: 0.7843, object/pedestrian_ap_dist_2.0: 0.7956, object/pedestrian_ap_dist_4.0: 0.8456, object/pedestrian_trans_err: 0.1798, object/pedestrian_scale_err: 0.2929, object/pedestrian_orient_err: 0.8072, object/pedestrian_vel_err: 0.4954, object/pedestrian_attr_err: 0.3017, object/traffic_cone_ap_dist_0.5: 0.7731, object/traffic_cone_ap_dist_1.0: 0.7731, object/traffic_cone_ap_dist_2.0: 0.7731, object/traffic_cone_ap_dist_4.0: 0.7731, object/traffic_cone_trans_err: 0.0810, object/traffic_cone_scale_err: 0.3869, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.5003, object/map: 0.4811
2025-04-23 04:46:30,427 - mmdet3d - INFO - Epoch [2][50/204]	lr: 1.333e-04, eta: 0:56:54, time: 0.944, data_time: 0.105, memory: 17741, loss/object/loss_heatmap: 0.4359, loss/object/layer_-1_loss_cls: 0.0682, loss/object/layer_-1_loss_bbox: 0.6228, stats/object/matched_ious: 0.5579, loss: 1.1269, grad_norm: 4.9808
2025-04-23 04:47:13,691 - mmdet3d - INFO - Epoch [2][100/204]	lr: 1.466e-04, eta: 0:55:52, time: 0.865, data_time: 0.028, memory: 17754, loss/object/loss_heatmap: 0.4198, loss/object/layer_-1_loss_cls: 0.0660, loss/object/layer_-1_loss_bbox: 0.6511, stats/object/matched_ious: 0.5434, loss: 1.1369, grad_norm: 4.6959
2025-04-23 04:47:57,466 - mmdet3d - INFO - Epoch [2][150/204]	lr: 1.598e-04, eta: 0:55:02, time: 0.876, data_time: 0.027, memory: 17754, loss/object/loss_heatmap: 0.4084, loss/object/layer_-1_loss_cls: 0.0635, loss/object/layer_-1_loss_bbox: 0.6251, stats/object/matched_ious: 0.5497, loss: 1.0971, grad_norm: 3.6727
2025-04-23 04:48:40,415 - mmdet3d - INFO - Epoch [2][200/204]	lr: 1.731e-04, eta: 0:54:05, time: 0.859, data_time: 0.026, memory: 17754, loss/object/loss_heatmap: 0.4002, loss/object/layer_-1_loss_cls: 0.0639, loss/object/layer_-1_loss_bbox: 0.6028, stats/object/matched_ious: 0.5550, loss: 1.0669, grad_norm: 3.9067
2025-04-23 04:48:44,107 - mmdet3d - INFO - Saving checkpoint at 2 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   269s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   133s[  ] 3/81, 0.8 task/s, elapsed: 4s, ETA:    92s[  ] 4/81, 1.1 task/s, elapsed: 4s, ETA:    68s[  ] 5/81, 1.3 task/s, elapsed: 4s, ETA:    57s[  ] 6/81, 1.6 task/s, elapsed: 4s, ETA:    47s[  ] 7/81, 1.8 task/s, elapsed: 4s, ETA:    42s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    36s[  ] 9/81, 2.2 task/s, elapsed: 4s, ETA:    33s[  ] 10/81, 2.4 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    28s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    25s[  ] 13/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 14/81, 2.8 task/s, elapsed: 5s, ETA:    24s[  ] 15/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 16/81, 3.1 task/s, elapsed: 5s, ETA:    21s[  ] 17/81, 3.1 task/s, elapsed: 5s, ETA:    20s[  ] 18/81, 3.3 task/s, elapsed: 5s, ETA:    19s[  ] 19/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 20/81, 3.6 task/s, elapsed: 6s, ETA:    17s[  ] 21/81, 3.6 task/s, elapsed: 6s, ETA:    17s[  ] 22/81, 3.8 task/s, elapsed: 6s, ETA:    16s[  ] 23/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.8 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 28/81, 4.1 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 4.2 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.3 task/s, elapsed: 7s, ETA:    12s[  ] 31/81, 4.3 task/s, elapsed: 7s, ETA:    12s[  ] 32/81, 4.4 task/s, elapsed: 7s, ETA:    11s[  ] 33/81, 4.5 task/s, elapsed: 7s, ETA:    11s[  ] 34/81, 4.6 task/s, elapsed: 7s, ETA:    10s[  ] 35/81, 4.6 task/s, elapsed: 8s, ETA:    10s[  ] 36/81, 4.7 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 40/81, 4.8 task/s, elapsed: 8s, ETA:     9s[> ] 41/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 42/81, 4.9 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.9 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 5.0 task/s, elapsed: 9s, ETA:     7s[> ] 45/81, 5.0 task/s, elapsed: 9s, ETA:     7s[> ] 46/81, 5.1 task/s, elapsed: 9s, ETA:     7s[> ] 47/81, 5.1 task/s, elapsed: 9s, ETA:     7s[> ] 48/81, 5.2 task/s, elapsed: 9s, ETA:     6s[> ] 49/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 52/81, 5.2 task/s, elapsed: 10s, ETA:     6s[> ] 53/81, 5.2 task/s, elapsed: 10s, ETA:     5s[> ] 54/81, 5.3 task/s, elapsed: 10s, ETA:     5s[> ] 55/81, 5.3 task/s, elapsed: 10s, ETA:     5s[> ] 56/81, 5.4 task/s, elapsed: 10s, ETA:     5s[> ] 57/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 58/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.5 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 62/81, 5.4 task/s, elapsed: 11s, ETA:     3s[> ] 63/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 64/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 65/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.6 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.6 task/s, elapsed: 12s, ETA:     3s[> ] 68/81, 5.7 task/s, elapsed: 12s, ETA:     2s[> ] 69/81, 5.6 task/s, elapsed: 12s, ETA:     2s[> ] 70/81, 5.7 task/s, elapsed: 12s, ETA:     2s[> ] 71/81, 5.7 task/s, elapsed: 12s, ETA:     2s[> ] 72/81, 5.8 task/s, elapsed: 12s, ETA:     2s[> ] 73/81, 5.6 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 76/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 77/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 78/81, 5.8 task/s, elapsed: 13s, ETA:     1s[> ] 79/81, 5.8 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.9 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.9 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.9 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 31.3 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 31.4 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 31.1 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 31.4 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 31.2 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 31.2 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 31.2 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 31.2 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 31.2 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 31.3 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.9 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.9 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 32.0 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 32.0 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 32.1 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 32.0 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 32.0 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 32.0 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 32.0 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.9 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.9 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.9 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.9 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 31.8 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 31.8 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 31.7 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 31.7 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 31.5 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 31.4 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 31.4 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 30.8 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 30.1 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 30.2 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 30.2 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 30.2 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 30.3 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.3 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmp9rrafrbd/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f868263fd00>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 378.44it/s] 94% 76/81 [00:00<00:00, 345.89it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.4397
mATE: 0.4364
mASE: 0.4754
mAOE: 0.6301
mAVE: 0.6482
mAAE: 0.3780
NDS: 0.4630
Eval time: 3.2s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.873 	0.191 	0.166 	0.208 	0.423 	0.124 
truck               	0.742 	0.153 	0.148 	0.160 	0.255 	0.071 
bus                 	0.820 	0.271 	0.101 	0.046 	1.018 	0.444 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.688 	0.213 	0.302 	1.061 	0.662 	0.297 
motorcycle          	0.512 	0.216 	0.322 	0.588 	0.074 	0.024 
bicycle             	0.021 	0.227 	0.334 	0.609 	0.754 	0.064 
traffic_cone        	0.742 	0.094 	0.380 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 04:49:07,883 - mmdet3d - INFO - Epoch(val) [2][41]	object/car_ap_dist_0.5: 0.7660, object/car_ap_dist_1.0: 0.8825, object/car_ap_dist_2.0: 0.9136, object/car_ap_dist_4.0: 0.9280, object/car_trans_err: 0.1909, object/car_scale_err: 0.1657, object/car_orient_err: 0.2075, object/car_vel_err: 0.4226, object/car_attr_err: 0.1243, object/mATE: 0.4364, object/mASE: 0.4754, object/mAOE: 0.6301, object/mAVE: 0.6482, object/mAAE: 0.3780, object/truck_ap_dist_0.5: 0.6629, object/truck_ap_dist_1.0: 0.7485, object/truck_ap_dist_2.0: 0.7601, object/truck_ap_dist_4.0: 0.7974, object/truck_trans_err: 0.1526, object/truck_scale_err: 0.1481, object/truck_orient_err: 0.1595, object/truck_vel_err: 0.2546, object/truck_attr_err: 0.0705, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.5070, object/bus_ap_dist_1.0: 0.8408, object/bus_ap_dist_2.0: 0.9451, object/bus_ap_dist_4.0: 0.9868, object/bus_trans_err: 0.2705, object/bus_scale_err: 0.1013, object/bus_orient_err: 0.0459, object/bus_vel_err: 1.0176, object/bus_attr_err: 0.4444, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.4496, object/motorcycle_ap_dist_1.0: 0.5184, object/motorcycle_ap_dist_2.0: 0.5295, object/motorcycle_ap_dist_4.0: 0.5511, object/motorcycle_trans_err: 0.2164, object/motorcycle_scale_err: 0.3224, object/motorcycle_orient_err: 0.5881, object/motorcycle_vel_err: 0.0739, object/motorcycle_attr_err: 0.0242, object/bicycle_ap_dist_0.5: 0.0205, object/bicycle_ap_dist_1.0: 0.0205, object/bicycle_ap_dist_2.0: 0.0205, object/bicycle_ap_dist_4.0: 0.0215, object/bicycle_trans_err: 0.2269, object/bicycle_scale_err: 0.3344, object/bicycle_orient_err: 0.6088, object/bicycle_vel_err: 0.7543, object/bicycle_attr_err: 0.0636, object/pedestrian_ap_dist_0.5: 0.6398, object/pedestrian_ap_dist_1.0: 0.6788, object/pedestrian_ap_dist_2.0: 0.6891, object/pedestrian_ap_dist_4.0: 0.7424, object/pedestrian_trans_err: 0.2126, object/pedestrian_scale_err: 0.3015, object/pedestrian_orient_err: 1.0611, object/pedestrian_vel_err: 0.6623, object/pedestrian_attr_err: 0.2971, object/traffic_cone_ap_dist_0.5: 0.7416, object/traffic_cone_ap_dist_1.0: 0.7416, object/traffic_cone_ap_dist_2.0: 0.7416, object/traffic_cone_ap_dist_4.0: 0.7416, object/traffic_cone_trans_err: 0.0942, object/traffic_cone_scale_err: 0.3803, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.4630, object/map: 0.4397
2025-04-23 04:49:54,992 - mmdet3d - INFO - Epoch [3][50/204]	lr: 1.839e-04, eta: 0:53:12, time: 0.941, data_time: 0.105, memory: 17754, loss/object/loss_heatmap: 0.3674, loss/object/layer_-1_loss_cls: 0.0589, loss/object/layer_-1_loss_bbox: 0.5526, stats/object/matched_ious: 0.5658, loss: 0.9789, grad_norm: 3.9828
2025-04-23 04:50:38,123 - mmdet3d - INFO - Epoch [3][100/204]	lr: 1.951e-04, eta: 0:52:22, time: 0.863, data_time: 0.025, memory: 17754, loss/object/loss_heatmap: 0.3732, loss/object/layer_-1_loss_cls: 0.0598, loss/object/layer_-1_loss_bbox: 0.5835, stats/object/matched_ious: 0.5613, loss: 1.0164, grad_norm: 3.4640
2025-04-23 04:51:21,384 - mmdet3d - INFO - Epoch [3][150/204]	lr: 1.951e-04, eta: 0:51:33, time: 0.865, data_time: 0.025, memory: 17754, loss/object/loss_heatmap: 0.3660, loss/object/layer_-1_loss_cls: 0.0574, loss/object/layer_-1_loss_bbox: 0.5812, stats/object/matched_ious: 0.5601, loss: 1.0046, grad_norm: 3.7994
2025-04-23 04:52:04,577 - mmdet3d - INFO - Epoch [3][200/204]	lr: 1.951e-04, eta: 0:50:45, time: 0.864, data_time: 0.027, memory: 17754, loss/object/loss_heatmap: 0.3520, loss/object/layer_-1_loss_cls: 0.0576, loss/object/layer_-1_loss_bbox: 0.5646, stats/object/matched_ious: 0.5683, loss: 0.9742, grad_norm: 2.9430
2025-04-23 04:52:08,248 - mmdet3d - INFO - Saving checkpoint at 3 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   249s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   123s[  ] 3/81, 0.9 task/s, elapsed: 3s, ETA:    86s[  ] 4/81, 1.2 task/s, elapsed: 3s, ETA:    64s[  ] 5/81, 1.4 task/s, elapsed: 3s, ETA:    53s[  ] 6/81, 1.7 task/s, elapsed: 3s, ETA:    44s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    43s[  ] 8/81, 2.0 task/s, elapsed: 4s, ETA:    37s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    34s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    30s[  ] 11/81, 2.5 task/s, elapsed: 4s, ETA:    29s[  ] 12/81, 2.7 task/s, elapsed: 4s, ETA:    26s[  ] 13/81, 2.8 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 3.0 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.0 task/s, elapsed: 6s, ETA:    21s[  ] 18/81, 3.2 task/s, elapsed: 6s, ETA:    20s[  ] 19/81, 3.2 task/s, elapsed: 6s, ETA:    19s[  ] 20/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 21/81, 3.5 task/s, elapsed: 6s, ETA:    17s[  ] 22/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 23/81, 3.7 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.8 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 28/81, 4.2 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.1 task/s, elapsed: 7s, ETA:    12s[  ] 31/81, 4.1 task/s, elapsed: 7s, ETA:    12s[  ] 32/81, 4.3 task/s, elapsed: 7s, ETA:    11s[  ] 33/81, 4.3 task/s, elapsed: 8s, ETA:    11s[  ] 34/81, 4.4 task/s, elapsed: 8s, ETA:    11s[  ] 35/81, 4.4 task/s, elapsed: 8s, ETA:    10s[  ] 36/81, 4.6 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.6 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.7 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.7 task/s, elapsed: 8s, ETA:     9s[  ] 40/81, 4.8 task/s, elapsed: 8s, ETA:     9s[> ] 41/81, 4.6 task/s, elapsed: 9s, ETA:     9s[> ] 42/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 45/81, 4.8 task/s, elapsed: 9s, ETA:     7s[> ] 46/81, 4.9 task/s, elapsed: 9s, ETA:     7s[> ] 47/81, 4.9 task/s, elapsed: 10s, ETA:     7s[> ] 48/81, 5.0 task/s, elapsed: 10s, ETA:     7s[> ] 49/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 52/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 53/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 54/81, 5.2 task/s, elapsed: 10s, ETA:     5s[> ] 55/81, 5.2 task/s, elapsed: 11s, ETA:     5s[> ] 56/81, 5.3 task/s, elapsed: 11s, ETA:     5s[> ] 57/81, 5.2 task/s, elapsed: 11s, ETA:     5s[> ] 58/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 62/81, 5.5 task/s, elapsed: 11s, ETA:     3s[> ] 63/81, 5.5 task/s, elapsed: 11s, ETA:     3s[> ] 64/81, 5.6 task/s, elapsed: 11s, ETA:     3s[> ] 65/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 68/81, 5.6 task/s, elapsed: 12s, ETA:     2s[> ] 69/81, 5.5 task/s, elapsed: 12s, ETA:     2s[> ] 70/81, 5.6 task/s, elapsed: 12s, ETA:     2s[> ] 71/81, 5.6 task/s, elapsed: 13s, ETA:     2s[> ] 72/81, 5.7 task/s, elapsed: 13s, ETA:     2s[> ] 73/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.8 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 76/81, 5.8 task/s, elapsed: 13s, ETA:     1s[> ] 77/81, 5.6 task/s, elapsed: 14s, ETA:     1s[> ] 78/81, 5.7 task/s, elapsed: 14s, ETA:     1s[> ] 79/81, 5.7 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.8 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.8 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.8 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 26.6 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 28.9 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 29.9 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 30.4 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 30.6 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 30.8 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 30.8 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 30.8 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 30.8 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 30.8 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 31.5 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 31.5 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.5 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.5 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.5 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.5 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 31.3 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 31.3 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 31.3 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 31.2 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 26.2 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 26.3 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 26.3 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 26.3 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 26.4 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 26.5 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 25.9 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 25.3 task/s, elapsed: 3s, ETA:     1s[> ] 65/81, 25.4 task/s, elapsed: 3s, ETA:     1s[> ] 66/81, 25.5 task/s, elapsed: 3s, ETA:     1s[> ] 67/81, 25.5 task/s, elapsed: 3s, ETA:     1s[> ] 68/81, 25.6 task/s, elapsed: 3s, ETA:     1s[> ] 69/81, 25.7 task/s, elapsed: 3s, ETA:     0s[> ] 70/81, 25.8 task/s, elapsed: 3s, ETA:     0s[> ] 71/81, 25.8 task/s, elapsed: 3s, ETA:     0s[> ] 72/81, 25.9 task/s, elapsed: 3s, ETA:     0s[> ] 73/81, 26.0 task/s, elapsed: 3s, ETA:     0s[> ] 74/81, 26.1 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 26.1 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 26.2 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 26.3 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 26.4 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 26.4 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 26.5 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmp53gl7i59/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8684e4eb50>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 379.15it/s] 94% 76/81 [00:00<00:00, 340.24it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.4278
mATE: 0.4417
mASE: 0.4950
mAOE: 0.6245
mAVE: 0.6247
mAAE: 0.3515
NDS: 0.4601
Eval time: 3.2s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.848 	0.207 	0.171 	0.137 	0.238 	0.090 
truck               	0.649 	0.155 	0.190 	0.049 	0.125 	0.026 
bus                 	0.866 	0.281 	0.158 	0.027 	1.144 	0.339 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.732 	0.198 	0.310 	1.369 	0.746 	0.312 
motorcycle          	0.439 	0.205 	0.335 	0.725 	0.106 	0.045 
bicycle             	0.005 	0.274 	0.358 	0.314 	0.640 	0.000 
traffic_cone        	0.738 	0.097 	0.429 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 04:52:32,589 - mmdet3d - INFO - Epoch(val) [3][41]	object/car_ap_dist_0.5: 0.7257, object/car_ap_dist_1.0: 0.8575, object/car_ap_dist_2.0: 0.8929, object/car_ap_dist_4.0: 0.9148, object/car_trans_err: 0.2069, object/car_scale_err: 0.1706, object/car_orient_err: 0.1371, object/car_vel_err: 0.2376, object/car_attr_err: 0.0895, object/mATE: 0.4417, object/mASE: 0.4950, object/mAOE: 0.6245, object/mAVE: 0.6247, object/mAAE: 0.3515, object/truck_ap_dist_0.5: 0.5628, object/truck_ap_dist_1.0: 0.6615, object/truck_ap_dist_2.0: 0.6703, object/truck_ap_dist_4.0: 0.7024, object/truck_trans_err: 0.1549, object/truck_scale_err: 0.1895, object/truck_orient_err: 0.0490, object/truck_vel_err: 0.1245, object/truck_attr_err: 0.0260, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.6316, object/bus_ap_dist_1.0: 0.8524, object/bus_ap_dist_2.0: 0.9897, object/bus_ap_dist_4.0: 0.9897, object/bus_trans_err: 0.2811, object/bus_scale_err: 0.1575, object/bus_orient_err: 0.0265, object/bus_vel_err: 1.1439, object/bus_attr_err: 0.3390, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.3835, object/motorcycle_ap_dist_1.0: 0.4500, object/motorcycle_ap_dist_2.0: 0.4541, object/motorcycle_ap_dist_4.0: 0.4684, object/motorcycle_trans_err: 0.2050, object/motorcycle_scale_err: 0.3352, object/motorcycle_orient_err: 0.7249, object/motorcycle_vel_err: 0.1059, object/motorcycle_attr_err: 0.0448, object/bicycle_ap_dist_0.5: 0.0015, object/bicycle_ap_dist_1.0: 0.0064, object/bicycle_ap_dist_2.0: 0.0064, object/bicycle_ap_dist_4.0: 0.0064, object/bicycle_trans_err: 0.2740, object/bicycle_scale_err: 0.3576, object/bicycle_orient_err: 0.3142, object/bicycle_vel_err: 0.6401, object/bicycle_attr_err: 0.0000, object/pedestrian_ap_dist_0.5: 0.6903, object/pedestrian_ap_dist_1.0: 0.7208, object/pedestrian_ap_dist_2.0: 0.7330, object/pedestrian_ap_dist_4.0: 0.7847, object/pedestrian_trans_err: 0.1981, object/pedestrian_scale_err: 0.3104, object/pedestrian_orient_err: 1.3690, object/pedestrian_vel_err: 0.7458, object/pedestrian_attr_err: 0.3124, object/traffic_cone_ap_dist_0.5: 0.7239, object/traffic_cone_ap_dist_1.0: 0.7346, object/traffic_cone_ap_dist_2.0: 0.7393, object/traffic_cone_ap_dist_4.0: 0.7560, object/traffic_cone_trans_err: 0.0973, object/traffic_cone_scale_err: 0.4287, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.4601, object/map: 0.4278
2025-04-23 04:53:19,890 - mmdet3d - INFO - Epoch [4][50/204]	lr: 1.891e-04, eta: 0:49:57, time: 0.945, data_time: 0.103, memory: 17754, loss/object/loss_heatmap: 0.3324, loss/object/layer_-1_loss_cls: 0.0535, loss/object/layer_-1_loss_bbox: 0.5274, stats/object/matched_ious: 0.5697, loss: 0.9133, grad_norm: 3.0677
2025-04-23 04:54:03,001 - mmdet3d - INFO - Epoch [4][100/204]	lr: 1.891e-04, eta: 0:49:10, time: 0.862, data_time: 0.025, memory: 17754, loss/object/loss_heatmap: 0.3285, loss/object/layer_-1_loss_cls: 0.0533, loss/object/layer_-1_loss_bbox: 0.5319, stats/object/matched_ious: 0.5684, loss: 0.9137, grad_norm: 2.8579
2025-04-23 04:54:46,150 - mmdet3d - INFO - Epoch [4][150/204]	lr: 1.891e-04, eta: 0:48:23, time: 0.863, data_time: 0.028, memory: 17754, loss/object/loss_heatmap: 0.3285, loss/object/layer_-1_loss_cls: 0.0527, loss/object/layer_-1_loss_bbox: 0.5610, stats/object/matched_ious: 0.5671, loss: 0.9422, grad_norm: inf
2025-04-23 04:55:29,437 - mmdet3d - INFO - Epoch [4][200/204]	lr: 1.891e-04, eta: 0:47:37, time: 0.866, data_time: 0.027, memory: 17776, loss/object/loss_heatmap: 0.3258, loss/object/layer_-1_loss_cls: 0.0509, loss/object/layer_-1_loss_bbox: 0.5042, stats/object/matched_ious: 0.5793, loss: 0.8809, grad_norm: 2.3661
2025-04-23 04:55:32,975 - mmdet3d - INFO - Saving checkpoint at 4 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   251s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   124s[  ] 3/81, 0.9 task/s, elapsed: 3s, ETA:    86s[  ] 4/81, 1.2 task/s, elapsed: 3s, ETA:    64s[  ] 5/81, 1.4 task/s, elapsed: 4s, ETA:    54s[  ] 6/81, 1.7 task/s, elapsed: 4s, ETA:    44s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    44s[  ] 8/81, 1.9 task/s, elapsed: 4s, ETA:    38s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    35s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    31s[  ] 11/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 12/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 13/81, 2.7 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.0 task/s, elapsed: 6s, ETA:    22s[  ] 18/81, 3.1 task/s, elapsed: 6s, ETA:    20s[  ] 19/81, 3.2 task/s, elapsed: 6s, ETA:    19s[  ] 20/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 21/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 22/81, 3.6 task/s, elapsed: 6s, ETA:    17s[  ] 23/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.8 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 3.9 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 28/81, 4.1 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.1 task/s, elapsed: 7s, ETA:    12s[  ] 31/81, 4.1 task/s, elapsed: 8s, ETA:    12s[  ] 32/81, 4.2 task/s, elapsed: 8s, ETA:    12s[  ] 33/81, 4.2 task/s, elapsed: 8s, ETA:    11s[  ] 34/81, 4.4 task/s, elapsed: 8s, ETA:    11s[  ] 35/81, 4.4 task/s, elapsed: 8s, ETA:    10s[  ] 36/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 40/81, 4.7 task/s, elapsed: 8s, ETA:     9s[> ] 41/81, 4.6 task/s, elapsed: 9s, ETA:     9s[> ] 42/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 45/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 46/81, 4.9 task/s, elapsed: 9s, ETA:     7s[> ] 47/81, 4.9 task/s, elapsed: 10s, ETA:     7s[> ] 48/81, 5.0 task/s, elapsed: 10s, ETA:     7s[> ] 49/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 4.8 task/s, elapsed: 11s, ETA:     6s[> ] 52/81, 4.9 task/s, elapsed: 11s, ETA:     6s[> ] 53/81, 4.9 task/s, elapsed: 11s, ETA:     6s[> ] 54/81, 5.0 task/s, elapsed: 11s, ETA:     5s[> ] 55/81, 5.0 task/s, elapsed: 11s, ETA:     5s[> ] 56/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 57/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 58/81, 5.2 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.2 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.3 task/s, elapsed: 12s, ETA:     4s[> ] 62/81, 5.4 task/s, elapsed: 12s, ETA:     4s[> ] 63/81, 5.2 task/s, elapsed: 12s, ETA:     3s[> ] 64/81, 5.3 task/s, elapsed: 12s, ETA:     3s[> ] 65/81, 5.3 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.3 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.3 task/s, elapsed: 13s, ETA:     3s[> ] 68/81, 5.4 task/s, elapsed: 13s, ETA:     2s[> ] 69/81, 5.4 task/s, elapsed: 13s, ETA:     2s[> ] 70/81, 5.5 task/s, elapsed: 13s, ETA:     2s[> ] 71/81, 5.5 task/s, elapsed: 13s, ETA:     2s[> ] 72/81, 5.6 task/s, elapsed: 13s, ETA:     2s[> ] 73/81, 5.5 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.6 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.5 task/s, elapsed: 14s, ETA:     1s[> ] 76/81, 5.5 task/s, elapsed: 14s, ETA:     1s[> ] 77/81, 5.5 task/s, elapsed: 14s, ETA:     1s[> ] 78/81, 5.6 task/s, elapsed: 14s, ETA:     1s[> ] 79/81, 5.6 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.7 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.6 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.7 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 31.6 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 31.2 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 31.7 task/s, elapsed: 0s, ETA:     2s[  ] 4/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 31.7 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 32.0 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 32.0 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 31.9 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 31.8 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 31.7 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 31.8 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 31.7 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 31.6 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.9 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 31.1 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 31.2 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 31.1 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 31.1 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 30.9 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 29.9 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 29.9 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 29.9 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 29.9 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 29.9 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 30.0 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.0 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmprwplfarl/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8684e41c10>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 48% 39/81 [00:00<00:00, 383.93it/s] 96% 78/81 [00:00<00:00, 347.77it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.4101
mATE: 0.4508
mASE: 0.4930
mAOE: 0.6105
mAVE: 0.8569
mAAE: 0.3970
NDS: 0.4242
Eval time: 3.1s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.838 	0.205 	0.174 	0.164 	0.727 	0.189 
truck               	0.684 	0.142 	0.163 	0.060 	0.616 	0.365 
bus                 	0.799 	0.331 	0.119 	0.022 	1.782 	0.208 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.674 	0.222 	0.305 	1.265 	0.782 	0.328 
motorcycle          	0.412 	0.220 	0.366 	0.698 	0.124 	0.086 
bicycle             	0.011 	0.293 	0.343 	0.286 	0.825 	0.000 
traffic_cone        	0.682 	0.096 	0.460 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 04:55:57,456 - mmdet3d - INFO - Epoch(val) [4][41]	object/car_ap_dist_0.5: 0.7255, object/car_ap_dist_1.0: 0.8482, object/car_ap_dist_2.0: 0.8811, object/car_ap_dist_4.0: 0.8962, object/car_trans_err: 0.2046, object/car_scale_err: 0.1742, object/car_orient_err: 0.1636, object/car_vel_err: 0.7266, object/car_attr_err: 0.1889, object/mATE: 0.4508, object/mASE: 0.4930, object/mAOE: 0.6105, object/mAVE: 0.8569, object/mAAE: 0.3970, object/truck_ap_dist_0.5: 0.6220, object/truck_ap_dist_1.0: 0.6832, object/truck_ap_dist_2.0: 0.6957, object/truck_ap_dist_4.0: 0.7354, object/truck_trans_err: 0.1416, object/truck_scale_err: 0.1626, object/truck_orient_err: 0.0601, object/truck_vel_err: 0.6160, object/truck_attr_err: 0.3654, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.4581, object/bus_ap_dist_1.0: 0.8257, object/bus_ap_dist_2.0: 0.9556, object/bus_ap_dist_4.0: 0.9556, object/bus_trans_err: 0.3310, object/bus_scale_err: 0.1188, object/bus_orient_err: 0.0215, object/bus_vel_err: 1.7819, object/bus_attr_err: 0.2084, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.3514, object/motorcycle_ap_dist_1.0: 0.4225, object/motorcycle_ap_dist_2.0: 0.4290, object/motorcycle_ap_dist_4.0: 0.4466, object/motorcycle_trans_err: 0.2198, object/motorcycle_scale_err: 0.3662, object/motorcycle_orient_err: 0.6981, object/motorcycle_vel_err: 0.1238, object/motorcycle_attr_err: 0.0860, object/bicycle_ap_dist_0.5: 0.0036, object/bicycle_ap_dist_1.0: 0.0135, object/bicycle_ap_dist_2.0: 0.0135, object/bicycle_ap_dist_4.0: 0.0139, object/bicycle_trans_err: 0.2928, object/bicycle_scale_err: 0.3430, object/bicycle_orient_err: 0.2858, object/bicycle_vel_err: 0.8246, object/bicycle_attr_err: 0.0000, object/pedestrian_ap_dist_0.5: 0.6236, object/pedestrian_ap_dist_1.0: 0.6615, object/pedestrian_ap_dist_2.0: 0.6801, object/pedestrian_ap_dist_4.0: 0.7313, object/pedestrian_trans_err: 0.2224, object/pedestrian_scale_err: 0.3049, object/pedestrian_orient_err: 1.2652, object/pedestrian_vel_err: 0.7822, object/pedestrian_attr_err: 0.3277, object/traffic_cone_ap_dist_0.5: 0.6781, object/traffic_cone_ap_dist_1.0: 0.6781, object/traffic_cone_ap_dist_2.0: 0.6781, object/traffic_cone_ap_dist_4.0: 0.6951, object/traffic_cone_trans_err: 0.0963, object/traffic_cone_scale_err: 0.4600, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.4242, object/map: 0.4101
2025-04-23 04:56:44,664 - mmdet3d - INFO - Epoch [5][50/204]	lr: 1.809e-04, eta: 0:46:50, time: 0.943, data_time: 0.106, memory: 17776, loss/object/loss_heatmap: 0.3012, loss/object/layer_-1_loss_cls: 0.0483, loss/object/layer_-1_loss_bbox: 0.5066, stats/object/matched_ious: 0.5819, loss: 0.8561, grad_norm: 2.5344
2025-04-23 04:57:27,589 - mmdet3d - INFO - Epoch [5][100/204]	lr: 1.809e-04, eta: 0:46:04, time: 0.859, data_time: 0.027, memory: 17776, loss/object/loss_heatmap: 0.3044, loss/object/layer_-1_loss_cls: 0.0491, loss/object/layer_-1_loss_bbox: 0.4746, stats/object/matched_ious: 0.5813, loss: 0.8281, grad_norm: 2.3693
2025-04-23 04:58:10,799 - mmdet3d - INFO - Epoch [5][150/204]	lr: 1.809e-04, eta: 0:45:18, time: 0.864, data_time: 0.028, memory: 17776, loss/object/loss_heatmap: 0.3057, loss/object/layer_-1_loss_cls: 0.0493, loss/object/layer_-1_loss_bbox: 0.4604, stats/object/matched_ious: 0.5802, loss: 0.8154, grad_norm: 2.4278
2025-04-23 04:58:53,946 - mmdet3d - INFO - Epoch [5][200/204]	lr: 1.809e-04, eta: 0:44:33, time: 0.863, data_time: 0.027, memory: 17776, loss/object/loss_heatmap: 0.3018, loss/object/layer_-1_loss_cls: 0.0479, loss/object/layer_-1_loss_bbox: 0.4917, stats/object/matched_ious: 0.5829, loss: 0.8414, grad_norm: 2.1848
2025-04-23 04:58:57,509 - mmdet3d - INFO - Saving checkpoint at 5 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   255s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   126s[  ] 3/81, 0.9 task/s, elapsed: 3s, ETA:    88s[  ] 4/81, 1.2 task/s, elapsed: 3s, ETA:    65s[  ] 5/81, 1.4 task/s, elapsed: 4s, ETA:    54s[  ] 6/81, 1.7 task/s, elapsed: 4s, ETA:    45s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    43s[  ] 8/81, 1.9 task/s, elapsed: 4s, ETA:    37s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    35s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    31s[  ] 11/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 12/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 13/81, 2.7 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.0 task/s, elapsed: 6s, ETA:    21s[  ] 18/81, 3.2 task/s, elapsed: 6s, ETA:    20s[  ] 19/81, 3.2 task/s, elapsed: 6s, ETA:    19s[  ] 20/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 21/81, 3.4 task/s, elapsed: 6s, ETA:    17s[  ] 22/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 23/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.8 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 28/81, 4.1 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.1 task/s, elapsed: 7s, ETA:    12s[  ] 31/81, 4.1 task/s, elapsed: 8s, ETA:    12s[  ] 32/81, 4.3 task/s, elapsed: 8s, ETA:    12s[  ] 33/81, 4.3 task/s, elapsed: 8s, ETA:    11s[  ] 34/81, 4.4 task/s, elapsed: 8s, ETA:    11s[  ] 35/81, 4.4 task/s, elapsed: 8s, ETA:    10s[  ] 36/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 40/81, 4.8 task/s, elapsed: 8s, ETA:     9s[> ] 41/81, 4.6 task/s, elapsed: 9s, ETA:     9s[> ] 42/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 45/81, 4.8 task/s, elapsed: 9s, ETA:     7s[> ] 46/81, 4.9 task/s, elapsed: 9s, ETA:     7s[> ] 47/81, 4.9 task/s, elapsed: 10s, ETA:     7s[> ] 48/81, 5.0 task/s, elapsed: 10s, ETA:     7s[> ] 49/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 52/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 53/81, 5.0 task/s, elapsed: 11s, ETA:     6s[> ] 54/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 55/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 56/81, 5.2 task/s, elapsed: 11s, ETA:     5s[> ] 57/81, 5.2 task/s, elapsed: 11s, ETA:     5s[> ] 58/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 62/81, 5.5 task/s, elapsed: 11s, ETA:     3s[> ] 63/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 64/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 65/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 68/81, 5.5 task/s, elapsed: 12s, ETA:     2s[> ] 69/81, 5.5 task/s, elapsed: 13s, ETA:     2s[> ] 70/81, 5.6 task/s, elapsed: 13s, ETA:     2s[> ] 71/81, 5.6 task/s, elapsed: 13s, ETA:     2s[> ] 72/81, 5.7 task/s, elapsed: 13s, ETA:     2s[> ] 73/81, 5.6 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 76/81, 5.8 task/s, elapsed: 13s, ETA:     1s[> ] 77/81, 5.6 task/s, elapsed: 14s, ETA:     1s[> ] 78/81, 5.7 task/s, elapsed: 14s, ETA:     1s[> ] 79/81, 5.7 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.7 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.7 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.8 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 26.1 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 27.8 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 29.2 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 29.8 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 29.9 task/s, elapsed: 0s, ETA:     3s[  ] 6/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 30.3 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 30.5 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 30.6 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 30.5 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 30.6 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 30.7 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 30.7 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 30.8 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 31.7 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 31.7 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.7 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.7 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.7 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.6 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 31.4 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 31.1 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 31.0 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 31.0 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 31.0 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 31.0 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 31.0 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 30.9 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 31.0 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 30.9 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 29.6 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 29.5 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 29.5 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 29.5 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 29.6 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 29.6 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 29.7 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 29.7 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpr3b_bdml/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f8682d3adf0>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 377.00it/s] 94% 76/81 [00:00<00:00, 340.39it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.4033
mATE: 0.4562
mASE: 0.4991
mAOE: 0.6615
mAVE: 0.5329
mAAE: 0.3604
NDS: 0.4507
Eval time: 3.2s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.826 	0.213 	0.173 	0.153 	0.256 	0.077 
truck               	0.604 	0.143 	0.181 	0.045 	0.113 	0.009 
bus                 	0.801 	0.365 	0.161 	0.026 	0.494 	0.391 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.671 	0.219 	0.309 	1.267 	0.727 	0.361 
motorcycle          	0.422 	0.213 	0.364 	0.928 	0.099 	0.045 
bicycle             	0.001 	0.284 	0.356 	0.534 	0.575 	0.000 
traffic_cone        	0.708 	0.124 	0.448 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 04:59:21,688 - mmdet3d - INFO - Epoch(val) [5][41]	object/car_ap_dist_0.5: 0.7065, object/car_ap_dist_1.0: 0.8372, object/car_ap_dist_2.0: 0.8732, object/car_ap_dist_4.0: 0.8871, object/car_trans_err: 0.2134, object/car_scale_err: 0.1730, object/car_orient_err: 0.1529, object/car_vel_err: 0.2557, object/car_attr_err: 0.0769, object/mATE: 0.4562, object/mASE: 0.4991, object/mAOE: 0.6615, object/mAVE: 0.5329, object/mAAE: 0.3604, object/truck_ap_dist_0.5: 0.5632, object/truck_ap_dist_1.0: 0.5987, object/truck_ap_dist_2.0: 0.6049, object/truck_ap_dist_4.0: 0.6487, object/truck_trans_err: 0.1432, object/truck_scale_err: 0.1809, object/truck_orient_err: 0.0448, object/truck_vel_err: 0.1132, object/truck_attr_err: 0.0089, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.5217, object/bus_ap_dist_1.0: 0.7870, object/bus_ap_dist_2.0: 0.9484, object/bus_ap_dist_4.0: 0.9484, object/bus_trans_err: 0.3645, object/bus_scale_err: 0.1605, object/bus_orient_err: 0.0261, object/bus_vel_err: 0.4939, object/bus_attr_err: 0.3912, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.3609, object/motorcycle_ap_dist_1.0: 0.4312, object/motorcycle_ap_dist_2.0: 0.4352, object/motorcycle_ap_dist_4.0: 0.4593, object/motorcycle_trans_err: 0.2135, object/motorcycle_scale_err: 0.3639, object/motorcycle_orient_err: 0.9282, object/motorcycle_vel_err: 0.0991, object/motorcycle_attr_err: 0.0451, object/bicycle_ap_dist_0.5: 0.0013, object/bicycle_ap_dist_1.0: 0.0013, object/bicycle_ap_dist_2.0: 0.0013, object/bicycle_ap_dist_4.0: 0.0013, object/bicycle_trans_err: 0.2842, object/bicycle_scale_err: 0.3556, object/bicycle_orient_err: 0.5342, object/bicycle_vel_err: 0.5746, object/bicycle_attr_err: 0.0000, object/pedestrian_ap_dist_0.5: 0.6233, object/pedestrian_ap_dist_1.0: 0.6534, object/pedestrian_ap_dist_2.0: 0.6754, object/pedestrian_ap_dist_4.0: 0.7311, object/pedestrian_trans_err: 0.2188, object/pedestrian_scale_err: 0.3089, object/pedestrian_orient_err: 1.2672, object/pedestrian_vel_err: 0.7268, object/pedestrian_attr_err: 0.3613, object/traffic_cone_ap_dist_0.5: 0.6956, object/traffic_cone_ap_dist_1.0: 0.6956, object/traffic_cone_ap_dist_2.0: 0.6985, object/traffic_cone_ap_dist_4.0: 0.7439, object/traffic_cone_trans_err: 0.1241, object/traffic_cone_scale_err: 0.4485, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.4507, object/map: 0.4033
2025-04-23 05:00:26,557 - mmdet3d - INFO - Epoch [6][50/204]	lr: 1.707e-04, eta: 0:44:36, time: 1.297, data_time: 0.106, memory: 17776, loss/object/loss_heatmap: 0.2946, loss/object/layer_-1_loss_cls: 0.0468, loss/object/layer_-1_loss_bbox: 0.4854, stats/object/matched_ious: 0.5797, loss: 0.8268, grad_norm: 2.5180
2025-04-23 05:01:09,762 - mmdet3d - INFO - Epoch [6][100/204]	lr: 1.707e-04, eta: 0:43:48, time: 0.864, data_time: 0.029, memory: 17776, loss/object/loss_heatmap: 0.2857, loss/object/layer_-1_loss_cls: 0.0470, loss/object/layer_-1_loss_bbox: 0.4484, stats/object/matched_ious: 0.5894, loss: 0.7811, grad_norm: 2.1079
2025-04-23 05:01:52,883 - mmdet3d - INFO - Epoch [6][150/204]	lr: 1.707e-04, eta: 0:43:01, time: 0.862, data_time: 0.028, memory: 17776, loss/object/loss_heatmap: 0.2787, loss/object/layer_-1_loss_cls: 0.0450, loss/object/layer_-1_loss_bbox: 0.4539, stats/object/matched_ious: 0.5886, loss: 0.7777, grad_norm: 2.0306
2025-04-23 05:02:36,113 - mmdet3d - INFO - Epoch [6][200/204]	lr: 1.707e-04, eta: 0:42:14, time: 0.865, data_time: 0.029, memory: 17776, loss/object/loss_heatmap: 0.2659, loss/object/layer_-1_loss_cls: 0.0426, loss/object/layer_-1_loss_bbox: 0.4197, stats/object/matched_ious: 0.5938, loss: 0.7282, grad_norm: 1.9786
2025-04-23 05:02:39,668 - mmdet3d - INFO - Saving checkpoint at 6 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   250s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   123s[  ] 3/81, 0.9 task/s, elapsed: 3s, ETA:    86s[  ] 4/81, 1.2 task/s, elapsed: 3s, ETA:    64s[  ] 5/81, 1.4 task/s, elapsed: 4s, ETA:    53s[  ] 6/81, 1.7 task/s, elapsed: 4s, ETA:    44s[  ] 7/81, 1.7 task/s, elapsed: 4s, ETA:    44s[  ] 8/81, 1.9 task/s, elapsed: 4s, ETA:    38s[  ] 9/81, 2.1 task/s, elapsed: 4s, ETA:    35s[  ] 10/81, 2.3 task/s, elapsed: 4s, ETA:    31s[  ] 11/81, 2.4 task/s, elapsed: 5s, ETA:    29s[  ] 12/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 13/81, 2.7 task/s, elapsed: 5s, ETA:    25s[  ] 14/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 3.0 task/s, elapsed: 5s, ETA:    22s[  ] 16/81, 3.2 task/s, elapsed: 5s, ETA:    20s[  ] 17/81, 3.0 task/s, elapsed: 6s, ETA:    22s[  ] 18/81, 3.1 task/s, elapsed: 6s, ETA:    20s[  ] 19/81, 3.2 task/s, elapsed: 6s, ETA:    19s[  ] 20/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 21/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 22/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 23/81, 3.6 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.8 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.8 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 3.9 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 4.0 task/s, elapsed: 7s, ETA:    14s[  ] 28/81, 4.1 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.1 task/s, elapsed: 7s, ETA:    12s[  ] 31/81, 4.1 task/s, elapsed: 8s, ETA:    12s[  ] 32/81, 4.2 task/s, elapsed: 8s, ETA:    12s[  ] 33/81, 4.2 task/s, elapsed: 8s, ETA:    11s[  ] 34/81, 4.4 task/s, elapsed: 8s, ETA:    11s[  ] 35/81, 4.4 task/s, elapsed: 8s, ETA:    10s[  ] 36/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.5 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 40/81, 4.7 task/s, elapsed: 8s, ETA:     9s[> ] 41/81, 4.6 task/s, elapsed: 9s, ETA:     9s[> ] 42/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 45/81, 4.8 task/s, elapsed: 9s, ETA:     8s[> ] 46/81, 4.9 task/s, elapsed: 9s, ETA:     7s[> ] 47/81, 4.9 task/s, elapsed: 10s, ETA:     7s[> ] 48/81, 5.0 task/s, elapsed: 10s, ETA:     7s[> ] 49/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 52/81, 5.1 task/s, elapsed: 10s, ETA:     6s[> ] 53/81, 5.0 task/s, elapsed: 11s, ETA:     6s[> ] 54/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 55/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 56/81, 5.2 task/s, elapsed: 11s, ETA:     5s[> ] 57/81, 5.2 task/s, elapsed: 11s, ETA:     5s[> ] 58/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.3 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.4 task/s, elapsed: 11s, ETA:     4s[> ] 62/81, 5.5 task/s, elapsed: 11s, ETA:     3s[> ] 63/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 64/81, 5.5 task/s, elapsed: 12s, ETA:     3s[> ] 65/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.4 task/s, elapsed: 12s, ETA:     3s[> ] 68/81, 5.5 task/s, elapsed: 12s, ETA:     2s[> ] 69/81, 5.5 task/s, elapsed: 13s, ETA:     2s[> ] 70/81, 5.6 task/s, elapsed: 13s, ETA:     2s[> ] 71/81, 5.6 task/s, elapsed: 13s, ETA:     2s[> ] 72/81, 5.7 task/s, elapsed: 13s, ETA:     2s[> ] 73/81, 5.6 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.7 task/s, elapsed: 13s, ETA:     1s[> ] 76/81, 5.8 task/s, elapsed: 13s, ETA:     1s[> ] 77/81, 5.6 task/s, elapsed: 14s, ETA:     1s[> ] 78/81, 5.7 task/s, elapsed: 14s, ETA:     1s[> ] 79/81, 5.7 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.7 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.7 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.8 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 27.5 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 29.9 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 30.7 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 5/81, 31.1 task/s, elapsed: 0s, ETA:     2s[  ] 6/81, 31.1 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 31.1 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 31.0 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 30.9 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 31.2 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 31.3 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 31.4 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.5 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.6 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.8 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 31.7 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 31.7 task/s, elapsed: 1s, ETA:     1s[  ] 35/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.8 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 31.8 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 31.7 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 31.7 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 31.6 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 31.5 task/s, elapsed: 1s, ETA:     1s[> ] 48/81, 31.4 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 31.4 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 31.4 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 31.2 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 31.3 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 31.3 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 31.4 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 31.4 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 31.4 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 31.4 task/s, elapsed: 2s, ETA:     0s[> ] 75/81, 30.4 task/s, elapsed: 2s, ETA:     0s[> ] 76/81, 30.0 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 30.0 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 30.1 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 30.1 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 30.2 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 30.2 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmptvzomoju/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f867b07e130>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 379.78it/s] 94% 76/81 [00:00<00:00, 345.64it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.4007
mATE: 0.4654
mASE: 0.4975
mAOE: 0.6572
mAVE: 0.6483
mAAE: 0.3664
NDS: 0.4368
Eval time: 3.1s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.829 	0.199 	0.169 	0.149 	0.443 	0.114 
truck               	0.664 	0.148 	0.154 	0.034 	0.117 	0.066 
bus                 	0.744 	0.462 	0.145 	0.021 	0.972 	0.164 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.678 	0.225 	0.331 	1.332 	0.823 	0.332 
motorcycle          	0.422 	0.211 	0.358 	0.745 	0.502 	0.256 
bicycle             	0.016 	0.300 	0.309 	0.634 	0.330 	0.000 
traffic_cone        	0.655 	0.108 	0.510 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 05:03:03,858 - mmdet3d - INFO - Epoch(val) [6][41]	object/car_ap_dist_0.5: 0.7217, object/car_ap_dist_1.0: 0.8413, object/car_ap_dist_2.0: 0.8679, object/car_ap_dist_4.0: 0.8832, object/car_trans_err: 0.1993, object/car_scale_err: 0.1688, object/car_orient_err: 0.1492, object/car_vel_err: 0.4431, object/car_attr_err: 0.1140, object/mATE: 0.4654, object/mASE: 0.4975, object/mAOE: 0.6572, object/mAVE: 0.6483, object/mAAE: 0.3664, object/truck_ap_dist_0.5: 0.6065, object/truck_ap_dist_1.0: 0.6577, object/truck_ap_dist_2.0: 0.6749, object/truck_ap_dist_4.0: 0.7155, object/truck_trans_err: 0.1478, object/truck_scale_err: 0.1538, object/truck_orient_err: 0.0345, object/truck_vel_err: 0.1166, object/truck_attr_err: 0.0659, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.2160, object/bus_ap_dist_1.0: 0.8227, object/bus_ap_dist_2.0: 0.9684, object/bus_ap_dist_4.0: 0.9684, object/bus_trans_err: 0.4625, object/bus_scale_err: 0.1454, object/bus_orient_err: 0.0207, object/bus_vel_err: 0.9723, object/bus_attr_err: 0.1638, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.3713, object/motorcycle_ap_dist_1.0: 0.4259, object/motorcycle_ap_dist_2.0: 0.4375, object/motorcycle_ap_dist_4.0: 0.4536, object/motorcycle_trans_err: 0.2106, object/motorcycle_scale_err: 0.3579, object/motorcycle_orient_err: 0.7450, object/motorcycle_vel_err: 0.5015, object/motorcycle_attr_err: 0.2560, object/bicycle_ap_dist_0.5: 0.0156, object/bicycle_ap_dist_1.0: 0.0158, object/bicycle_ap_dist_2.0: 0.0158, object/bicycle_ap_dist_4.0: 0.0158, object/bicycle_trans_err: 0.3000, object/bicycle_scale_err: 0.3087, object/bicycle_orient_err: 0.6338, object/bicycle_vel_err: 0.3300, object/bicycle_attr_err: 0.0000, object/pedestrian_ap_dist_0.5: 0.6296, object/pedestrian_ap_dist_1.0: 0.6626, object/pedestrian_ap_dist_2.0: 0.6803, object/pedestrian_ap_dist_4.0: 0.7402, object/pedestrian_trans_err: 0.2255, object/pedestrian_scale_err: 0.3309, object/pedestrian_orient_err: 1.3320, object/pedestrian_vel_err: 0.8231, object/pedestrian_attr_err: 0.3318, object/traffic_cone_ap_dist_0.5: 0.6446, object/traffic_cone_ap_dist_1.0: 0.6571, object/traffic_cone_ap_dist_2.0: 0.6571, object/traffic_cone_ap_dist_4.0: 0.6592, object/traffic_cone_trans_err: 0.1078, object/traffic_cone_scale_err: 0.5096, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.4368, object/map: 0.4007
2025-04-23 05:03:56,702 - mmdet3d - INFO - Epoch [7][50/204]	lr: 1.588e-04, eta: 0:41:37, time: 1.056, data_time: 0.109, memory: 17776, loss/object/loss_heatmap: 0.2736, loss/object/layer_-1_loss_cls: 0.0441, loss/object/layer_-1_loss_bbox: 0.4435, stats/object/matched_ious: 0.5948, loss: 0.7611, grad_norm: 2.1380
2025-04-23 05:04:52,705 - mmdet3d - INFO - Epoch [7][100/204]	lr: 1.588e-04, eta: 0:41:16, time: 1.120, data_time: 0.025, memory: 17776, loss/object/loss_heatmap: 0.2537, loss/object/layer_-1_loss_cls: 0.0424, loss/object/layer_-1_loss_bbox: 0.4398, stats/object/matched_ious: 0.5959, loss: 0.7359, grad_norm: 2.1682
2025-04-23 05:05:35,863 - mmdet3d - INFO - Epoch [7][150/204]	lr: 1.588e-04, eta: 0:40:28, time: 0.863, data_time: 0.027, memory: 17776, loss/object/loss_heatmap: 0.2635, loss/object/layer_-1_loss_cls: 0.0425, loss/object/layer_-1_loss_bbox: 0.4573, stats/object/matched_ious: 0.5920, loss: 0.7633, grad_norm: 2.3055
2025-04-23 05:06:18,965 - mmdet3d - INFO - Epoch [7][200/204]	lr: 1.588e-04, eta: 0:39:40, time: 0.862, data_time: 0.029, memory: 17776, loss/object/loss_heatmap: 0.2615, loss/object/layer_-1_loss_cls: 0.0415, loss/object/layer_-1_loss_bbox: 0.4184, stats/object/matched_ious: 0.6003, loss: 0.7215, grad_norm: 2.0001
2025-04-23 05:06:22,557 - mmdet3d - INFO - Saving checkpoint at 7 epochs
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 0.3 task/s, elapsed: 3s, ETA:   257s[  ] 2/81, 0.6 task/s, elapsed: 3s, ETA:   127s[  ] 3/81, 0.9 task/s, elapsed: 3s, ETA:    88s[  ] 4/81, 1.2 task/s, elapsed: 3s, ETA:    65s[  ] 5/81, 1.4 task/s, elapsed: 4s, ETA:    55s[  ] 6/81, 1.7 task/s, elapsed: 4s, ETA:    45s[  ] 7/81, 1.6 task/s, elapsed: 4s, ETA:    45s[  ] 8/81, 1.9 task/s, elapsed: 4s, ETA:    39s[  ] 9/81, 2.0 task/s, elapsed: 4s, ETA:    36s[  ] 10/81, 2.2 task/s, elapsed: 4s, ETA:    32s[  ] 11/81, 2.3 task/s, elapsed: 5s, ETA:    30s[  ] 12/81, 2.6 task/s, elapsed: 5s, ETA:    27s[  ] 13/81, 2.6 task/s, elapsed: 5s, ETA:    26s[  ] 14/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 15/81, 2.9 task/s, elapsed: 5s, ETA:    23s[  ] 16/81, 3.1 task/s, elapsed: 5s, ETA:    21s[  ] 17/81, 2.9 task/s, elapsed: 6s, ETA:    22s[  ] 18/81, 3.1 task/s, elapsed: 6s, ETA:    20s[  ] 19/81, 3.1 task/s, elapsed: 6s, ETA:    20s[  ] 20/81, 3.3 task/s, elapsed: 6s, ETA:    18s[  ] 21/81, 3.4 task/s, elapsed: 6s, ETA:    18s[  ] 22/81, 3.5 task/s, elapsed: 6s, ETA:    17s[  ] 23/81, 3.5 task/s, elapsed: 6s, ETA:    16s[  ] 24/81, 3.7 task/s, elapsed: 6s, ETA:    15s[  ] 25/81, 3.7 task/s, elapsed: 7s, ETA:    15s[  ] 26/81, 3.9 task/s, elapsed: 7s, ETA:    14s[  ] 27/81, 3.9 task/s, elapsed: 7s, ETA:    14s[  ] 28/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 29/81, 3.9 task/s, elapsed: 7s, ETA:    13s[  ] 30/81, 4.0 task/s, elapsed: 7s, ETA:    13s[  ] 31/81, 4.0 task/s, elapsed: 8s, ETA:    12s[  ] 32/81, 4.2 task/s, elapsed: 8s, ETA:    12s[  ] 33/81, 4.2 task/s, elapsed: 8s, ETA:    11s[  ] 34/81, 4.3 task/s, elapsed: 8s, ETA:    11s[  ] 35/81, 4.3 task/s, elapsed: 8s, ETA:    11s[  ] 36/81, 4.4 task/s, elapsed: 8s, ETA:    10s[  ] 37/81, 4.4 task/s, elapsed: 8s, ETA:    10s[  ] 38/81, 4.6 task/s, elapsed: 8s, ETA:     9s[  ] 39/81, 4.6 task/s, elapsed: 9s, ETA:     9s[  ] 40/81, 4.7 task/s, elapsed: 9s, ETA:     9s[> ] 41/81, 4.5 task/s, elapsed: 9s, ETA:     9s[> ] 42/81, 4.6 task/s, elapsed: 9s, ETA:     8s[> ] 43/81, 4.6 task/s, elapsed: 9s, ETA:     8s[> ] 44/81, 4.7 task/s, elapsed: 9s, ETA:     8s[> ] 45/81, 4.7 task/s, elapsed: 10s, ETA:     8s[> ] 46/81, 4.8 task/s, elapsed: 10s, ETA:     7s[> ] 47/81, 4.8 task/s, elapsed: 10s, ETA:     7s[> ] 48/81, 4.9 task/s, elapsed: 10s, ETA:     7s[> ] 49/81, 4.9 task/s, elapsed: 10s, ETA:     6s[> ] 50/81, 5.0 task/s, elapsed: 10s, ETA:     6s[> ] 51/81, 4.8 task/s, elapsed: 11s, ETA:     6s[> ] 52/81, 4.9 task/s, elapsed: 11s, ETA:     6s[> ] 53/81, 4.9 task/s, elapsed: 11s, ETA:     6s[> ] 54/81, 5.0 task/s, elapsed: 11s, ETA:     5s[> ] 55/81, 5.0 task/s, elapsed: 11s, ETA:     5s[> ] 56/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 57/81, 5.1 task/s, elapsed: 11s, ETA:     5s[> ] 58/81, 5.1 task/s, elapsed: 11s, ETA:     4s[> ] 59/81, 5.1 task/s, elapsed: 11s, ETA:     4s[> ] 60/81, 5.2 task/s, elapsed: 11s, ETA:     4s[> ] 61/81, 5.2 task/s, elapsed: 12s, ETA:     4s[> ] 62/81, 5.3 task/s, elapsed: 12s, ETA:     4s[> ] 63/81, 5.1 task/s, elapsed: 12s, ETA:     3s[> ] 64/81, 5.2 task/s, elapsed: 12s, ETA:     3s[> ] 65/81, 5.2 task/s, elapsed: 12s, ETA:     3s[> ] 66/81, 5.3 task/s, elapsed: 12s, ETA:     3s[> ] 67/81, 5.3 task/s, elapsed: 13s, ETA:     3s[> ] 68/81, 5.4 task/s, elapsed: 13s, ETA:     2s[> ] 69/81, 5.4 task/s, elapsed: 13s, ETA:     2s[> ] 70/81, 5.4 task/s, elapsed: 13s, ETA:     2s[> ] 71/81, 5.4 task/s, elapsed: 13s, ETA:     2s[> ] 72/81, 5.5 task/s, elapsed: 13s, ETA:     2s[> ] 73/81, 5.5 task/s, elapsed: 13s, ETA:     1s[> ] 74/81, 5.6 task/s, elapsed: 13s, ETA:     1s[> ] 75/81, 5.4 task/s, elapsed: 14s, ETA:     1s[> ] 76/81, 5.5 task/s, elapsed: 14s, ETA:     1s[> ] 77/81, 5.5 task/s, elapsed: 14s, ETA:     1s[> ] 78/81, 5.6 task/s, elapsed: 14s, ETA:     1s[> ] 79/81, 5.5 task/s, elapsed: 14s, ETA:     0s[> ] 80/81, 5.6 task/s, elapsed: 14s, ETA:     0s[>>] 81/81, 5.6 task/s, elapsed: 14s, ETA:     0s[>>] 82/81, 5.7 task/s, elapsed: 14s, ETA:     0s

Start to convert detection format...
[                                                  ] 0/81, elapsed: 0s, ETA:[  ] 1/81, 27.9 task/s, elapsed: 0s, ETA:     3s[  ] 2/81, 29.5 task/s, elapsed: 0s, ETA:     3s[  ] 3/81, 30.1 task/s, elapsed: 0s, ETA:     3s[  ] 4/81, 30.2 task/s, elapsed: 0s, ETA:     3s[  ] 5/81, 30.3 task/s, elapsed: 0s, ETA:     3s[  ] 6/81, 30.4 task/s, elapsed: 0s, ETA:     2s[  ] 7/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 8/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 9/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 10/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 11/81, 30.1 task/s, elapsed: 0s, ETA:     2s[  ] 12/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 13/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 14/81, 30.1 task/s, elapsed: 0s, ETA:     2s[  ] 15/81, 30.2 task/s, elapsed: 0s, ETA:     2s[  ] 16/81, 30.2 task/s, elapsed: 1s, ETA:     2s[  ] 17/81, 30.2 task/s, elapsed: 1s, ETA:     2s[  ] 18/81, 30.3 task/s, elapsed: 1s, ETA:     2s[  ] 19/81, 30.4 task/s, elapsed: 1s, ETA:     2s[  ] 20/81, 30.4 task/s, elapsed: 1s, ETA:     2s[  ] 21/81, 30.5 task/s, elapsed: 1s, ETA:     2s[  ] 22/81, 30.6 task/s, elapsed: 1s, ETA:     2s[  ] 23/81, 30.7 task/s, elapsed: 1s, ETA:     2s[  ] 24/81, 30.7 task/s, elapsed: 1s, ETA:     2s[  ] 25/81, 30.8 task/s, elapsed: 1s, ETA:     2s[  ] 26/81, 30.9 task/s, elapsed: 1s, ETA:     2s[  ] 27/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 28/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 29/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 30/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 31/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 32/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 33/81, 31.1 task/s, elapsed: 1s, ETA:     2s[  ] 34/81, 31.0 task/s, elapsed: 1s, ETA:     2s[  ] 35/81, 31.0 task/s, elapsed: 1s, ETA:     1s[  ] 36/81, 31.0 task/s, elapsed: 1s, ETA:     1s[  ] 37/81, 31.0 task/s, elapsed: 1s, ETA:     1s[  ] 38/81, 31.0 task/s, elapsed: 1s, ETA:     1s[  ] 39/81, 31.0 task/s, elapsed: 1s, ETA:     1s[  ] 40/81, 30.9 task/s, elapsed: 1s, ETA:     1s[> ] 41/81, 30.9 task/s, elapsed: 1s, ETA:     1s[> ] 42/81, 30.8 task/s, elapsed: 1s, ETA:     1s[> ] 43/81, 30.8 task/s, elapsed: 1s, ETA:     1s[> ] 44/81, 30.8 task/s, elapsed: 1s, ETA:     1s[> ] 45/81, 30.7 task/s, elapsed: 1s, ETA:     1s[> ] 46/81, 30.7 task/s, elapsed: 1s, ETA:     1s[> ] 47/81, 30.7 task/s, elapsed: 2s, ETA:     1s[> ] 48/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 49/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 50/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 51/81, 30.6 task/s, elapsed: 2s, ETA:     1s[> ] 52/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 53/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 54/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 55/81, 30.5 task/s, elapsed: 2s, ETA:     1s[> ] 56/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 57/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 58/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 59/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 60/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 61/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 62/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 63/81, 30.4 task/s, elapsed: 2s, ETA:     1s[> ] 64/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 65/81, 30.3 task/s, elapsed: 2s, ETA:     1s[> ] 66/81, 30.4 task/s, elapsed: 2s, ETA:     0s[> ] 67/81, 30.3 task/s, elapsed: 2s, ETA:     0s[> ] 68/81, 30.4 task/s, elapsed: 2s, ETA:     0s[> ] 69/81, 30.3 task/s, elapsed: 2s, ETA:     0s[> ] 70/81, 30.4 task/s, elapsed: 2s, ETA:     0s[> ] 71/81, 30.4 task/s, elapsed: 2s, ETA:     0s[> ] 72/81, 30.2 task/s, elapsed: 2s, ETA:     0s[> ] 73/81, 29.3 task/s, elapsed: 2s, ETA:     0s[> ] 74/81, 29.2 task/s, elapsed: 3s, ETA:     0s[> ] 75/81, 29.2 task/s, elapsed: 3s, ETA:     0s[> ] 76/81, 29.3 task/s, elapsed: 3s, ETA:     0s[> ] 77/81, 29.3 task/s, elapsed: 3s, ETA:     0s[> ] 78/81, 29.3 task/s, elapsed: 3s, ETA:     0s[> ] 79/81, 29.4 task/s, elapsed: 3s, ETA:     0s[> ] 80/81, 29.4 task/s, elapsed: 3s, ETA:     0s[>>] 81/81, 29.5 task/s, elapsed: 3s, ETA:     0s
Results writes to /tmp/tmpwds7b9ng/results/results_nusc.json
self.nusc: <nuscenes.nuscenes.NuScenes object at 0x7f867addc130>
self.eval_set: mini_val
  0% 0/81 [00:00<?, ?it/s] 47% 38/81 [00:00<00:00, 375.03it/s] 94% 76/81 [00:00<00:00, 341.44it/s]                                    len(set(self.pred_boxes.sample_tokens)): 81
len(set(self.gt_boxes.sample_tokens)): 81
mAP: 0.3945
mATE: 0.4560
mASE: 0.5086
mAOE: 0.6395
mAVE: 0.6433
mAAE: 0.3625
NDS: 0.4363
Eval time: 3.2s

Per-class results:
Object Class        	AP    	ATE   	ASE   	AOE   	AVE   	AAE   
car                 	0.837 	0.206 	0.193 	0.144 	0.257 	0.086 
truck               	0.637 	0.160 	0.163 	0.028 	0.064 	0.001 
bus                 	0.754 	0.417 	0.140 	0.029 	0.621 	0.329 
trailer             	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
construction_vehicle	0.000 	1.000 	1.000 	1.000 	1.000 	1.000 
pedestrian          	0.639 	0.224 	0.349 	1.367 	0.851 	0.320 
motorcycle          	0.459 	0.211 	0.381 	0.857 	0.241 	0.163 
bicycle             	0.004 	0.240 	0.351 	0.329 	1.112 	0.000 
traffic_cone        	0.616 	0.102 	0.510 	nan   	nan   	nan   
barrier             	0.000 	1.000 	1.000 	1.000 	nan   	nan   
2025-04-23 05:06:47,192 - mmdet3d - INFO - Epoch(val) [7][41]	object/car_ap_dist_0.5: 0.7198, object/car_ap_dist_1.0: 0.8481, object/car_ap_dist_2.0: 0.8820, object/car_ap_dist_4.0: 0.8975, object/car_trans_err: 0.2063, object/car_scale_err: 0.1930, object/car_orient_err: 0.1443, object/car_vel_err: 0.2570, object/car_attr_err: 0.0864, object/mATE: 0.4560, object/mASE: 0.5086, object/mAOE: 0.6395, object/mAVE: 0.6433, object/mAAE: 0.3625, object/truck_ap_dist_0.5: 0.5164, object/truck_ap_dist_1.0: 0.6582, object/truck_ap_dist_2.0: 0.6614, object/truck_ap_dist_4.0: 0.7107, object/truck_trans_err: 0.1605, object/truck_scale_err: 0.1626, object/truck_orient_err: 0.0284, object/truck_vel_err: 0.0642, object/truck_attr_err: 0.0015, object/construction_vehicle_ap_dist_0.5: 0.0000, object/construction_vehicle_ap_dist_1.0: 0.0000, object/construction_vehicle_ap_dist_2.0: 0.0000, object/construction_vehicle_ap_dist_4.0: 0.0000, object/construction_vehicle_trans_err: 1.0000, object/construction_vehicle_scale_err: 1.0000, object/construction_vehicle_orient_err: 1.0000, object/construction_vehicle_vel_err: 1.0000, object/construction_vehicle_attr_err: 1.0000, object/bus_ap_dist_0.5: 0.3711, object/bus_ap_dist_1.0: 0.7335, object/bus_ap_dist_2.0: 0.9556, object/bus_ap_dist_4.0: 0.9556, object/bus_trans_err: 0.4165, object/bus_scale_err: 0.1405, object/bus_orient_err: 0.0290, object/bus_vel_err: 0.6208, object/bus_attr_err: 0.3289, object/trailer_ap_dist_0.5: 0.0000, object/trailer_ap_dist_1.0: 0.0000, object/trailer_ap_dist_2.0: 0.0000, object/trailer_ap_dist_4.0: 0.0000, object/trailer_trans_err: 1.0000, object/trailer_scale_err: 1.0000, object/trailer_orient_err: 1.0000, object/trailer_vel_err: 1.0000, object/trailer_attr_err: 1.0000, object/barrier_ap_dist_0.5: 0.0000, object/barrier_ap_dist_1.0: 0.0000, object/barrier_ap_dist_2.0: 0.0000, object/barrier_ap_dist_4.0: 0.0000, object/barrier_trans_err: 1.0000, object/barrier_scale_err: 1.0000, object/barrier_orient_err: 1.0000, object/barrier_vel_err: nan, object/barrier_attr_err: nan, object/motorcycle_ap_dist_0.5: 0.3868, object/motorcycle_ap_dist_1.0: 0.4677, object/motorcycle_ap_dist_2.0: 0.4771, object/motorcycle_ap_dist_4.0: 0.5038, object/motorcycle_trans_err: 0.2106, object/motorcycle_scale_err: 0.3805, object/motorcycle_orient_err: 0.8575, object/motorcycle_vel_err: 0.2414, object/motorcycle_attr_err: 0.1633, object/bicycle_ap_dist_0.5: 0.0040, object/bicycle_ap_dist_1.0: 0.0040, object/bicycle_ap_dist_2.0: 0.0040, object/bicycle_ap_dist_4.0: 0.0040, object/bicycle_trans_err: 0.2396, object/bicycle_scale_err: 0.3509, object/bicycle_orient_err: 0.3290, object/bicycle_vel_err: 1.1123, object/bicycle_attr_err: 0.0000, object/pedestrian_ap_dist_0.5: 0.5826, object/pedestrian_ap_dist_1.0: 0.6211, object/pedestrian_ap_dist_2.0: 0.6461, object/pedestrian_ap_dist_4.0: 0.7047, object/pedestrian_trans_err: 0.2242, object/pedestrian_scale_err: 0.3486, object/pedestrian_orient_err: 1.3673, object/pedestrian_vel_err: 0.8506, object/pedestrian_attr_err: 0.3197, object/traffic_cone_ap_dist_0.5: 0.6080, object/traffic_cone_ap_dist_1.0: 0.6080, object/traffic_cone_ap_dist_2.0: 0.6153, object/traffic_cone_ap_dist_4.0: 0.6325, object/traffic_cone_trans_err: 0.1023, object/traffic_cone_scale_err: 0.5096, object/traffic_cone_orient_err: nan, object/traffic_cone_vel_err: nan, object/traffic_cone_attr_err: nan, object/nds: 0.4363, object/map: 0.3945
